use ::libc;
use c2rust_bitfields::BitfieldStruct;
use rust_ffi::src::ffi_alias::type_alias::*;
// use rust_ffi::src::ffi_fun::fun_call::*;
use rust_ffi::src::ffi_struct::struct_define::*;
extern "C" {
    // pub type _IO_wide_data;
    // pub type _IO_codecvt;
    // pub type _IO_marker;
    // pub type Curl_URL;
    // pub type thread_data;
    pub type altsvcinfo;
    // pub type TELNET;
    // pub type smb_request;
    // pub type ldapreqinfo;
    // pub type contenc_writer;
    // pub type Curl_share;
    // pub type curl_pushheaders;
    // pub type http_connect_state;
    // pub type ldapconninfo;
    // pub type tftp_state_data;
    // pub type nghttp2_session;
    fn Curl_isalnum(c: libc::c_int) -> libc::c_int;
    fn Curl_isdigit(c: libc::c_int) -> libc::c_int;
    fn Curl_isspace(c: libc::c_int) -> libc::c_int;
    fn strtol(_: *const libc::c_char, _: *mut *mut libc::c_char, _: libc::c_int) -> libc::c_long;
    fn strcmp(_: *const libc::c_char, _: *const libc::c_char) -> libc::c_int;
    fn strncmp(_: *const libc::c_char, _: *const libc::c_char, _: libc::c_ulong) -> libc::c_int;
    fn strchr(_: *const libc::c_char, _: libc::c_int) -> *mut libc::c_char;
    fn strstr(_: *const libc::c_char, _: *const libc::c_char) -> *mut libc::c_char;
    fn Curl_llist_insert_next(
        _: *mut Curl_llist,
        _: *mut Curl_llist_element,
        _: *const libc::c_void,
        node: *mut Curl_llist_element,
    );
    fn Curl_fileinfo_alloc() -> *mut fileinfo;
    fn Curl_fileinfo_cleanup(finfo: *mut fileinfo);
    fn curlx_strtoofft(
        str: *const libc::c_char,
        endp: *mut *mut libc::c_char,
        base: libc::c_int,
        num: *mut curl_off_t,
    ) -> CURLofft;
    fn Curl_fnmatch(
        ptr: *mut libc::c_void,
        pattern: *const libc::c_char,
        string: *const libc::c_char,
    ) -> libc::c_int;
    static mut Curl_cmalloc: curl_malloc_callback;
    static mut Curl_cfree: curl_free_callback;
    static mut Curl_crealloc: curl_realloc_callback;
    static mut Curl_ccalloc: curl_calloc_callback;
    fn Curl_set_in_callback(data: *mut Curl_easy, value: bool);
}
// #[derive(Copy, Clone)]
// #[repr(C)]
// pub struct _IO_FILE {
//     pub _flags: libc::c_int,
//     pub _IO_read_ptr: *mut libc::c_char,
//     pub _IO_read_end: *mut libc::c_char,
//     pub _IO_read_base: *mut libc::c_char,
//     pub _IO_write_base: *mut libc::c_char,
//     pub _IO_write_ptr: *mut libc::c_char,
//     pub _IO_write_end: *mut libc::c_char,
//     pub _IO_buf_base: *mut libc::c_char,
//     pub _IO_buf_end: *mut libc::c_char,
//     pub _IO_save_base: *mut libc::c_char,
//     pub _IO_backup_base: *mut libc::c_char,
//     pub _IO_save_end: *mut libc::c_char,
//     pub _markers: *mut _IO_marker,
//     pub _chain: *mut _IO_FILE,
//     pub _fileno: libc::c_int,
//     pub _flags2: libc::c_int,
//     pub _old_offset: __off_t,
//     pub _cur_column: libc::c_ushort,
//     pub _vtable_offset: libc::c_schar,
//     pub _shortbuf: [libc::c_char; 1],
//     pub _lock: *mut libc::c_void,
//     pub _offset: __off64_t,
//     pub _codecvt: *mut _IO_codecvt,
//     pub _wide_data: *mut _IO_wide_data,
//     pub _freeres_list: *mut _IO_FILE,
//     pub _freeres_buf: *mut libc::c_void,
//     pub __pad5: size_t,
//     pub _mode: libc::c_int,
//     pub _unused2: [libc::c_char; 20],
// }
// pub type FILE = _IO_FILE;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Curl_easy {
    pub magic: libc::c_uint,
    pub next: *mut Curl_easy,
    pub prev: *mut Curl_easy,
    pub conn: *mut connectdata,
    pub connect_queue: Curl_llist_element,
    pub conn_queue: Curl_llist_element,
    pub mstate: CURLMstate,
    pub result: CURLcode,
    pub msg: Curl_message,
    pub sockets: [curl_socket_t; 5],
    pub actions: [libc::c_uchar; 5],
    pub numsocks: libc::c_int,
    pub dns: Names,
    pub multi: *mut Curl_multi,
    pub multi_easy: *mut Curl_multi,
    pub share: *mut Curl_share,
    pub req: SingleRequest,
    pub set: UserDefined,
    pub cookies: *mut CookieInfo,
    pub asi: *mut altsvcinfo,
    pub progress: Progress,
    pub state: UrlState,
    pub wildcard: WildcardData,
    pub info: PureInfo,
    pub tsi: curl_tlssessioninfo,
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct UrlState {
    pub conn_cache: *mut conncache,
    pub keeps_speed: curltime,
    pub lastconnect_id: libc::c_long,
    pub headerb: dynbuf,
    pub buffer: *mut libc::c_char,
    pub ulbuf: *mut libc::c_char,
    pub current_speed: curl_off_t,
    pub first_host: *mut libc::c_char,
    pub retrycount: libc::c_int,
    pub first_remote_port: libc::c_int,
    pub session: *mut Curl_ssl_session,
    pub sessionage: libc::c_long,
    pub tempwrite: [tempbuf; 3],
    pub tempcount: libc::c_uint,
    pub os_errno: libc::c_int,
    pub scratch: *mut libc::c_char,
    pub followlocation: libc::c_long,
    pub prev_signal: Option<unsafe extern "C" fn(libc::c_int) -> ()>,
    pub digest: digestdata,
    pub proxydigest: digestdata,
    pub authhost: auth,
    pub authproxy: auth,
    pub async_0: Curl_async,
    pub expiretime: curltime,
    pub timenode: Curl_tree,
    pub timeoutlist: Curl_llist,
    pub expires: [time_node; 13],
    pub most_recent_ftp_entrypath: *mut libc::c_char,
    pub httpwant: libc::c_uchar,
    pub httpversion: libc::c_uchar,
    #[bitfield(name = "prev_block_had_trailing_cr", ty = "bit", bits = "0..=0")]
    pub prev_block_had_trailing_cr: [u8; 1],
    #[bitfield(padding)]
    pub c2rust_padding: [u8; 5],
    pub crlf_conversions: curl_off_t,
    pub range: *mut libc::c_char,
    pub resume_from: curl_off_t,
    pub rtsp_next_client_CSeq: libc::c_long,
    pub rtsp_next_server_CSeq: libc::c_long,
    pub rtsp_CSeq_recv: libc::c_long,
    pub infilesize: curl_off_t,
    pub drain: size_t,
    pub fread_func: curl_read_callback,
    pub in_0: *mut libc::c_void,
    pub stream_depends_on: *mut Curl_easy,
    pub stream_weight: libc::c_int,
    pub uh: *mut CURLU,
    pub up: urlpieces,
    pub httpreq: Curl_HttpReq,
    pub url: *mut libc::c_char,
    pub referer: *mut libc::c_char,
    pub cookielist: *mut curl_slist,
    pub resolve: *mut curl_slist,
    pub trailers_bytes_sent: size_t,
    pub trailers_buf: dynbuf,
    pub trailers_state: trailers_state,
    pub aptr: dynamically_allocated_data,
    #[bitfield(name = "multi_owned_by_easy", ty = "bit", bits = "0..=0")]
    #[bitfield(name = "this_is_a_follow", ty = "bit", bits = "1..=1")]
    #[bitfield(name = "refused_stream", ty = "bit", bits = "2..=2")]
    #[bitfield(name = "errorbuf", ty = "bit", bits = "3..=3")]
    #[bitfield(name = "allow_port", ty = "bit", bits = "4..=4")]
    #[bitfield(name = "authproblem", ty = "bit", bits = "5..=5")]
    #[bitfield(name = "ftp_trying_alternative", ty = "bit", bits = "6..=6")]
    #[bitfield(name = "wildcardmatch", ty = "bit", bits = "7..=7")]
    #[bitfield(name = "expect100header", ty = "bit", bits = "8..=8")]
    #[bitfield(name = "disableexpect", ty = "bit", bits = "9..=9")]
    #[bitfield(name = "use_range", ty = "bit", bits = "10..=10")]
    #[bitfield(name = "rangestringalloc", ty = "bit", bits = "11..=11")]
    #[bitfield(name = "done", ty = "bit", bits = "12..=12")]
    #[bitfield(name = "stream_depends_e", ty = "bit", bits = "13..=13")]
    #[bitfield(name = "previouslypending", ty = "bit", bits = "14..=14")]
    #[bitfield(name = "cookie_engine", ty = "bit", bits = "15..=15")]
    #[bitfield(name = "prefer_ascii", ty = "bit", bits = "16..=16")]
    #[bitfield(name = "list_only", ty = "bit", bits = "17..=17")]
    #[bitfield(name = "url_alloc", ty = "bit", bits = "18..=18")]
    #[bitfield(name = "referer_alloc", ty = "bit", bits = "19..=19")]
    #[bitfield(name = "wildcard_resolve", ty = "bit", bits = "20..=20")]
    pub multi_owned_by_easy_this_is_a_follow_refused_stream_errorbuf_allow_port_authproblem_ftp_trying_alternative_wildcardmatch_expect100header_disableexpect_use_range_rangestringalloc_done_stream_depends_e_previouslypending_cookie_engine_prefer_ascii_list_only_url_alloc_referer_alloc_wildcard_resolve:
        [u8; 3],
    #[bitfield(padding)]
    pub c2rust_padding_0: [u8; 5],
}
// pub type CURLU = Curl_URL;
// #[derive(Copy, Clone, BitfieldStruct)]
// #[repr(C)]
// pub struct Curl_async {
//     pub hostname: *mut libc::c_char,
//     pub dns: *mut Curl_dns_entry,
//     pub tdata: *mut thread_data,
//     pub resolver: *mut libc::c_void,
//     pub port: libc::c_int,
//     pub status: libc::c_int,
//     #[bitfield(name = "done", ty = "bit", bits = "0..=0")]
//     pub done: [u8; 1],
//     #[bitfield(padding)]
//     pub c2rust_padding: [u8; 7],
// }
// #[derive(Copy, Clone)]
// #[repr(C)]
// pub struct Curl_ssl_session {
//     pub name: *mut libc::c_char,
//     pub conn_to_host: *mut libc::c_char,
//     pub scheme: *const libc::c_char,
//     pub sessionid: *mut libc::c_void,
//     pub idsize: size_t,
//     pub age: libc::c_long,
//     pub remote_port: libc::c_int,
//     pub conn_to_port: libc::c_int,
//     pub ssl_config: ssl_primary_config,
// }
// #[derive(Copy, Clone, BitfieldStruct)]
// #[repr(C)]
// pub struct ssl_primary_config {
//     pub version: libc::c_long,
//     pub version_max: libc::c_long,
//     pub CApath: *mut libc::c_char,
//     pub CAfile: *mut libc::c_char,
//     pub issuercert: *mut libc::c_char,
//     pub clientcert: *mut libc::c_char,
//     pub random_file: *mut libc::c_char,
//     pub egdsocket: *mut libc::c_char,
//     pub cipher_list: *mut libc::c_char,
//     pub cipher_list13: *mut libc::c_char,
//     pub pinned_key: *mut libc::c_char,
//     pub cert_blob: *mut curl_blob,
//     pub ca_info_blob: *mut curl_blob,
//     pub issuercert_blob: *mut curl_blob,
//     pub curves: *mut libc::c_char,
//     #[bitfield(name = "verifypeer", ty = "bit", bits = "0..=0")]
//     #[bitfield(name = "verifyhost", ty = "bit", bits = "1..=1")]
//     #[bitfield(name = "verifystatus", ty = "bit", bits = "2..=2")]
//     #[bitfield(name = "sessionid", ty = "bit", bits = "3..=3")]
//     pub verifypeer_verifyhost_verifystatus_sessionid: [u8; 1],
//     #[bitfield(padding)]
//     pub c2rust_padding: [u8; 7],
// }
#[derive(Copy, Clone)]
#[repr(C)]
pub struct conncache {
    pub hash: Curl_hash,
    pub num_conn: size_t,
    pub next_connection_id: libc::c_long,
    pub last_cleanup: curltime,
    pub closure_handle: *mut Curl_easy,
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct UserDefined {
    pub err: *mut FILE,
    pub debugdata: *mut libc::c_void,
    pub errorbuffer: *mut libc::c_char,
    pub proxyport: libc::c_long,
    pub out: *mut libc::c_void,
    pub in_set: *mut libc::c_void,
    pub writeheader: *mut libc::c_void,
    pub rtp_out: *mut libc::c_void,
    pub use_port: libc::c_long,
    pub httpauth: libc::c_ulong,
    pub proxyauth: libc::c_ulong,
    pub socks5auth: libc::c_ulong,
    pub maxredirs: libc::c_long,
    pub keep_post: libc::c_int,
    pub postfields: *mut libc::c_void,
    pub seek_func: curl_seek_callback,
    pub postfieldsize: curl_off_t,
    pub localport: libc::c_ushort,
    pub localportrange: libc::c_int,
    pub fwrite_func: curl_write_callback,
    pub fwrite_header: curl_write_callback,
    pub fwrite_rtp: curl_write_callback,
    pub fread_func_set: curl_read_callback,
    pub fprogress: curl_progress_callback,
    pub fxferinfo: curl_xferinfo_callback,
    pub fdebug: curl_debug_callback,
    pub ioctl_func: curl_ioctl_callback,
    pub fsockopt: curl_sockopt_callback,
    pub sockopt_client: *mut libc::c_void,
    pub fopensocket: curl_opensocket_callback,
    pub opensocket_client: *mut libc::c_void,
    pub fclosesocket: curl_closesocket_callback,
    pub closesocket_client: *mut libc::c_void,
    pub seek_client: *mut libc::c_void,
    pub convfromnetwork: curl_conv_callback,
    pub convtonetwork: curl_conv_callback,
    pub convfromutf8: curl_conv_callback,
    pub progress_client: *mut libc::c_void,
    pub ioctl_client: *mut libc::c_void,
    pub timeout: libc::c_long,
    pub connecttimeout: libc::c_long,
    pub accepttimeout: libc::c_long,
    pub happy_eyeballs_timeout: libc::c_long,
    pub server_response_timeout: libc::c_long,
    pub maxage_conn: libc::c_long,
    pub tftp_blksize: libc::c_long,
    pub filesize: curl_off_t,
    pub low_speed_limit: libc::c_long,
    pub low_speed_time: libc::c_long,
    pub max_send_speed: curl_off_t,
    pub max_recv_speed: curl_off_t,
    pub set_resume_from: curl_off_t,
    pub headers: *mut curl_slist,
    pub proxyheaders: *mut curl_slist,
    pub httppost: *mut curl_httppost,
    pub mimepost: curl_mimepart,
    pub quote: *mut curl_slist,
    pub postquote: *mut curl_slist,
    pub prequote: *mut curl_slist,
    pub source_quote: *mut curl_slist,
    pub source_prequote: *mut curl_slist,
    pub source_postquote: *mut curl_slist,
    pub telnet_options: *mut curl_slist,
    pub resolve: *mut curl_slist,
    pub connect_to: *mut curl_slist,
    pub timecondition: curl_TimeCond,
    pub proxytype: curl_proxytype,
    pub timevalue: time_t,
    pub method: Curl_HttpReq,
    pub httpwant: libc::c_uchar,
    pub ssl: ssl_config_data,
    pub proxy_ssl: ssl_config_data,
    pub general_ssl: ssl_general_config,
    pub dns_cache_timeout: libc::c_long,
    pub buffer_size: libc::c_long,
    pub upload_buffer_size: libc::c_uint,
    pub private_data: *mut libc::c_void,
    pub http200aliases: *mut curl_slist,
    pub ipver: libc::c_uchar,
    pub max_filesize: curl_off_t,
    pub ftp_filemethod: curl_ftpfile,
    pub ftpsslauth: curl_ftpauth,
    pub ftp_ccc: curl_ftpccc,
    pub ftp_create_missing_dirs: libc::c_int,
    pub ssh_keyfunc: curl_sshkeycallback,
    pub ssh_keyfunc_userp: *mut libc::c_void,
    pub use_netrc: CURL_NETRC_OPTION,
    pub use_ssl: curl_usessl,
    pub new_file_perms: libc::c_long,
    pub new_directory_perms: libc::c_long,
    pub ssh_auth_types: libc::c_long,
    pub str_0: [*mut libc::c_char; 80],
    pub blobs: [*mut curl_blob; 8],
    pub scope_id: libc::c_uint,
    pub allowed_protocols: libc::c_long,
    pub redir_protocols: libc::c_long,
    pub mail_rcpt: *mut curl_slist,
    pub rtspreq: Curl_RtspReq,
    pub rtspversion: libc::c_long,
    pub chunk_bgn: curl_chunk_bgn_callback,
    pub chunk_end: curl_chunk_end_callback,
    pub fnmatch: curl_fnmatch_callback,
    pub fnmatch_data: *mut libc::c_void,
    pub gssapi_delegation: libc::c_long,
    pub tcp_keepidle: libc::c_long,
    pub tcp_keepintvl: libc::c_long,
    pub maxconnects: size_t,
    pub expect_100_timeout: libc::c_long,
    pub stream_depends_on: *mut Curl_easy,
    pub stream_weight: libc::c_int,
    pub stream_dependents: *mut Curl_http2_dep,
    pub resolver_start: curl_resolver_start_callback,
    pub resolver_start_client: *mut libc::c_void,
    pub upkeep_interval_ms: libc::c_long,
    pub fmultidone: multidone_func,
    pub dohfor: *mut Curl_easy,
    pub uh: *mut CURLU,
    pub trailer_data: *mut libc::c_void,
    pub trailer_callback: curl_trailer_callback,
    #[bitfield(name = "is_fread_set", ty = "bit", bits = "0..=0")]
    #[bitfield(name = "is_fwrite_set", ty = "bit", bits = "1..=1")]
    #[bitfield(name = "free_referer", ty = "bit", bits = "2..=2")]
    #[bitfield(name = "tftp_no_options", ty = "bit", bits = "3..=3")]
    #[bitfield(name = "sep_headers", ty = "bit", bits = "4..=4")]
    #[bitfield(name = "cookiesession", ty = "bit", bits = "5..=5")]
    #[bitfield(name = "crlf", ty = "bit", bits = "6..=6")]
    #[bitfield(name = "strip_path_slash", ty = "bit", bits = "7..=7")]
    #[bitfield(name = "ssh_compression", ty = "bit", bits = "8..=8")]
    #[bitfield(name = "get_filetime", ty = "bit", bits = "9..=9")]
    #[bitfield(name = "tunnel_thru_httpproxy", ty = "bit", bits = "10..=10")]
    #[bitfield(name = "prefer_ascii", ty = "bit", bits = "11..=11")]
    #[bitfield(name = "remote_append", ty = "bit", bits = "12..=12")]
    #[bitfield(name = "list_only", ty = "bit", bits = "13..=13")]
    #[bitfield(name = "ftp_use_port", ty = "bit", bits = "14..=14")]
    #[bitfield(name = "ftp_use_epsv", ty = "bit", bits = "15..=15")]
    #[bitfield(name = "ftp_use_eprt", ty = "bit", bits = "16..=16")]
    #[bitfield(name = "ftp_use_pret", ty = "bit", bits = "17..=17")]
    #[bitfield(name = "ftp_skip_ip", ty = "bit", bits = "18..=18")]
    #[bitfield(name = "hide_progress", ty = "bit", bits = "19..=19")]
    #[bitfield(name = "http_fail_on_error", ty = "bit", bits = "20..=20")]
    #[bitfield(name = "http_keep_sending_on_error", ty = "bit", bits = "21..=21")]
    #[bitfield(name = "http_follow_location", ty = "bit", bits = "22..=22")]
    #[bitfield(name = "http_transfer_encoding", ty = "bit", bits = "23..=23")]
    #[bitfield(name = "allow_auth_to_other_hosts", ty = "bit", bits = "24..=24")]
    #[bitfield(name = "include_header", ty = "bit", bits = "25..=25")]
    #[bitfield(name = "http_set_referer", ty = "bit", bits = "26..=26")]
    #[bitfield(name = "http_auto_referer", ty = "bit", bits = "27..=27")]
    #[bitfield(name = "opt_no_body", ty = "bit", bits = "28..=28")]
    #[bitfield(name = "upload", ty = "bit", bits = "29..=29")]
    #[bitfield(name = "verbose", ty = "bit", bits = "30..=30")]
    #[bitfield(name = "krb", ty = "bit", bits = "31..=31")]
    #[bitfield(name = "reuse_forbid", ty = "bit", bits = "32..=32")]
    #[bitfield(name = "reuse_fresh", ty = "bit", bits = "33..=33")]
    #[bitfield(name = "no_signal", ty = "bit", bits = "34..=34")]
    #[bitfield(name = "tcp_nodelay", ty = "bit", bits = "35..=35")]
    #[bitfield(name = "ignorecl", ty = "bit", bits = "36..=36")]
    #[bitfield(name = "connect_only", ty = "bit", bits = "37..=37")]
    #[bitfield(name = "http_te_skip", ty = "bit", bits = "38..=38")]
    #[bitfield(name = "http_ce_skip", ty = "bit", bits = "39..=39")]
    #[bitfield(name = "proxy_transfer_mode", ty = "bit", bits = "40..=40")]
    #[bitfield(name = "sasl_ir", ty = "bit", bits = "41..=41")]
    #[bitfield(name = "wildcard_enabled", ty = "bit", bits = "42..=42")]
    #[bitfield(name = "tcp_keepalive", ty = "bit", bits = "43..=43")]
    #[bitfield(name = "tcp_fastopen", ty = "bit", bits = "44..=44")]
    #[bitfield(name = "ssl_enable_npn", ty = "bit", bits = "45..=45")]
    #[bitfield(name = "ssl_enable_alpn", ty = "bit", bits = "46..=46")]
    #[bitfield(name = "path_as_is", ty = "bit", bits = "47..=47")]
    #[bitfield(name = "pipewait", ty = "bit", bits = "48..=48")]
    #[bitfield(name = "suppress_connect_headers", ty = "bit", bits = "49..=49")]
    #[bitfield(name = "dns_shuffle_addresses", ty = "bit", bits = "50..=50")]
    #[bitfield(name = "stream_depends_e", ty = "bit", bits = "51..=51")]
    #[bitfield(name = "haproxyprotocol", ty = "bit", bits = "52..=52")]
    #[bitfield(name = "abstract_unix_socket", ty = "bit", bits = "53..=53")]
    #[bitfield(name = "disallow_username_in_url", ty = "bit", bits = "54..=54")]
    #[bitfield(name = "doh", ty = "bit", bits = "55..=55")]
    #[bitfield(name = "doh_get", ty = "bit", bits = "56..=56")]
    #[bitfield(name = "doh_verifypeer", ty = "bit", bits = "57..=57")]
    #[bitfield(name = "doh_verifyhost", ty = "bit", bits = "58..=58")]
    #[bitfield(name = "doh_verifystatus", ty = "bit", bits = "59..=59")]
    #[bitfield(name = "http09_allowed", ty = "bit", bits = "60..=60")]
    #[bitfield(name = "mail_rcpt_allowfails", ty = "bit", bits = "61..=61")]
    pub is_fread_set_is_fwrite_set_free_referer_tftp_no_options_sep_headers_cookiesession_crlf_strip_path_slash_ssh_compression_get_filetime_tunnel_thru_httpproxy_prefer_ascii_remote_append_list_only_ftp_use_port_ftp_use_epsv_ftp_use_eprt_ftp_use_pret_ftp_skip_ip_hide_progress_http_fail_on_error_http_keep_sending_on_error_http_follow_location_http_transfer_encoding_allow_auth_to_other_hosts_include_header_http_set_referer_http_auto_referer_opt_no_body_upload_verbose_krb_reuse_forbid_reuse_fresh_no_signal_tcp_nodelay_ignorecl_connect_only_http_te_skip_http_ce_skip_proxy_transfer_mode_sasl_ir_wildcard_enabled_tcp_keepalive_tcp_fastopen_ssl_enable_npn_ssl_enable_alpn_path_as_is_pipewait_suppress_connect_headers_dns_shuffle_addresses_stream_depends_e_haproxyprotocol_abstract_unix_socket_disallow_username_in_url_doh_doh_get_doh_verifypeer_doh_verifyhost_doh_verifystatus_http09_allowed_mail_rcpt_allowfails:
        [u8; 8],
}
// pub type curl_trailer_callback =
//     Option<unsafe extern "C" fn(*mut *mut curl_slist, *mut libc::c_void) -> libc::c_int>;
pub type multidone_func = Option<unsafe extern "C" fn(*mut Curl_easy, CURLcode) -> libc::c_int>;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Curl_http2_dep {
    pub next: *mut Curl_http2_dep,
    pub data: *mut Curl_easy,
}
pub type curl_sshkeycallback = Option<
    unsafe extern "C" fn(
        *mut CURL,
        *const curl_khkey,
        *const curl_khkey,
        curl_khmatch,
        *mut libc::c_void,
    ) -> libc::c_int,
>;
pub type CURL = Curl_easy;
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct ssl_config_data {
    pub primary: ssl_primary_config,
    pub certverifyresult: libc::c_long,
    pub CRLfile: *mut libc::c_char,
    pub fsslctx: curl_ssl_ctx_callback,
    pub fsslctxp: *mut libc::c_void,
    pub cert_type: *mut libc::c_char,
    pub key: *mut libc::c_char,
    pub key_blob: *mut curl_blob,
    pub key_type: *mut libc::c_char,
    pub key_passwd: *mut libc::c_char,
    #[bitfield(name = "certinfo", ty = "bit", bits = "0..=0")]
    #[bitfield(name = "falsestart", ty = "bit", bits = "1..=1")]
    #[bitfield(name = "enable_beast", ty = "bit", bits = "2..=2")]
    #[bitfield(name = "no_revoke", ty = "bit", bits = "3..=3")]
    #[bitfield(name = "no_partialchain", ty = "bit", bits = "4..=4")]
    #[bitfield(name = "revoke_best_effort", ty = "bit", bits = "5..=5")]
    #[bitfield(name = "native_ca_store", ty = "bit", bits = "6..=6")]
    #[bitfield(name = "auto_client_cert", ty = "bit", bits = "7..=7")]
    pub certinfo_falsestart_enable_beast_no_revoke_no_partialchain_revoke_best_effort_native_ca_store_auto_client_cert:
        [u8; 1],
    #[bitfield(padding)]
    pub c2rust_padding: [u8; 7],
}
pub type curl_ssl_ctx_callback =
    Option<unsafe extern "C" fn(*mut CURL, *mut libc::c_void, *mut libc::c_void) -> CURLcode>;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct curl_mimepart {
    pub easy: *mut Curl_easy,
    pub parent: *mut curl_mime,
    pub nextpart: *mut curl_mimepart,
    pub kind: mimekind,
    pub flags: libc::c_uint,
    pub data: *mut libc::c_char,
    pub readfunc: curl_read_callback,
    pub seekfunc: curl_seek_callback,
    pub freefunc: curl_free_callback,
    pub arg: *mut libc::c_void,
    pub fp: *mut FILE,
    pub curlheaders: *mut curl_slist,
    pub userheaders: *mut curl_slist,
    pub mimetype: *mut libc::c_char,
    pub filename: *mut libc::c_char,
    pub name: *mut libc::c_char,
    pub datasize: curl_off_t,
    pub state: mime_state,
    pub encoder: *const mime_encoder,
    pub encstate: mime_encoder_state,
    pub lastreadstatus: size_t,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct mime_encoder {
    pub name: *const libc::c_char,
    pub encodefunc:
        Option<unsafe extern "C" fn(*mut libc::c_char, size_t, bool, *mut curl_mimepart) -> size_t>,
    pub sizefunc: Option<unsafe extern "C" fn(*mut curl_mimepart) -> curl_off_t>,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct curl_mime {
    pub easy: *mut Curl_easy,
    pub parent: *mut curl_mimepart,
    pub firstpart: *mut curl_mimepart,
    pub lastpart: *mut curl_mimepart,
    pub boundary: [libc::c_char; 41],
    pub state: mime_state,
}
// pub type curl_opensocket_callback = Option<
//     unsafe extern "C" fn(*mut libc::c_void, curlsocktype, *mut curl_sockaddr) -> curl_socket_t,
// >;
pub type curl_ioctl_callback =
    Option<unsafe extern "C" fn(*mut CURL, libc::c_int, *mut libc::c_void) -> curlioerr>;
pub type curl_debug_callback = Option<
    unsafe extern "C" fn(
        *mut CURL,
        curl_infotype,
        *mut libc::c_char,
        size_t,
        *mut libc::c_void,
    ) -> libc::c_int,
>;
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct SingleRequest {
    pub size: curl_off_t,
    pub maxdownload: curl_off_t,
    pub bytecount: curl_off_t,
    pub writebytecount: curl_off_t,
    pub headerbytecount: curl_off_t,
    pub deductheadercount: curl_off_t,
    pub pendingheader: curl_off_t,
    pub start: curltime,
    pub now: curltime,
    pub badheader: C2RustUnnamed_1,
    pub headerline: libc::c_int,
    pub str_0: *mut libc::c_char,
    pub offset: curl_off_t,
    pub httpcode: libc::c_int,
    pub keepon: libc::c_int,
    pub start100: curltime,
    pub exp100: expect100,
    pub upgr101: upgrade101,
    pub writer_stack: *mut contenc_writer,
    pub timeofdoc: time_t,
    pub bodywrites: libc::c_long,
    pub location: *mut libc::c_char,
    pub newurl: *mut libc::c_char,
    pub upload_present: ssize_t,
    pub upload_fromhere: *mut libc::c_char,
    pub p: C2RustUnnamed,
    pub doh: *mut dohdata,
    #[bitfield(name = "header", ty = "bit", bits = "0..=0")]
    #[bitfield(name = "content_range", ty = "bit", bits = "1..=1")]
    #[bitfield(name = "upload_done", ty = "bit", bits = "2..=2")]
    #[bitfield(name = "ignorebody", ty = "bit", bits = "3..=3")]
    #[bitfield(name = "http_bodyless", ty = "bit", bits = "4..=4")]
    #[bitfield(name = "chunk", ty = "bit", bits = "5..=5")]
    #[bitfield(name = "ignore_cl", ty = "bit", bits = "6..=6")]
    #[bitfield(name = "upload_chunky", ty = "bit", bits = "7..=7")]
    #[bitfield(name = "getheader", ty = "bit", bits = "8..=8")]
    #[bitfield(name = "forbidchunk", ty = "bit", bits = "9..=9")]
    pub header_content_range_upload_done_ignorebody_http_bodyless_chunk_ignore_cl_upload_chunky_getheader_forbidchunk:
        [u8; 2],
    #[bitfield(padding)]
    pub c2rust_padding: [u8; 6],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct dohdata {
    pub headers: *mut curl_slist,
    pub probe: [dnsprobe; 2],
    pub pending: libc::c_uint,
    pub port: libc::c_int,
    pub host: *const libc::c_char,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct dnsprobe {
    pub easy: *mut CURL,
    pub dnstype: libc::c_int,
    pub dohbuffer: [libc::c_uchar; 512],
    pub dohlen: size_t,
    pub serverdoh: dynbuf,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union C2RustUnnamed {
    pub file: *mut FILEPROTO,
    pub ftp: *mut FTP,
    pub http: *mut HTTP,
    pub imap: *mut IMAP,
    pub ldap: *mut ldapreqinfo,
    pub mqtt: *mut MQTT,
    pub pop3: *mut POP3,
    pub rtsp: *mut RTSP,
    pub smb: *mut smb_request,
    pub smtp: *mut SMTP,
    pub ssh: *mut SSHPROTO,
    pub telnet: *mut TELNET,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct RTSP {
    pub http_wrapper: HTTP,
    pub CSeq_sent: libc::c_long,
    pub CSeq_recv: libc::c_long,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct HTTP {
    pub sendit: *mut curl_mimepart,
    pub postsize: curl_off_t,
    pub postdata: *const libc::c_char,
    pub p_pragma: *const libc::c_char,
    pub form: curl_mimepart,
    pub backup: back,
    pub sending: C2RustUnnamed_0,
    pub send_buffer: dynbuf,
    pub stream_id: int32_t,
    pub bodystarted: bool,
    pub header_recvbuf: dynbuf,
    pub nread_header_recvbuf: size_t,
    pub trailer_recvbuf: dynbuf,
    pub status_code: libc::c_int,
    pub pausedata: *const uint8_t,
    pub pauselen: size_t,
    pub close_handled: bool,
    pub push_headers: *mut *mut libc::c_char,
    pub push_headers_used: size_t,
    pub push_headers_alloc: size_t,
    pub error: uint32_t,
    pub closed: bool,
    pub mem: *mut libc::c_char,
    pub len: size_t,
    pub memlen: size_t,
    pub upload_mem: *const uint8_t,
    pub upload_len: size_t,
    pub upload_left: curl_off_t,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Curl_multi {
    pub magic: libc::c_uint,
    pub easyp: *mut Curl_easy,
    pub easylp: *mut Curl_easy,
    pub num_easy: libc::c_int,
    pub num_alive: libc::c_int,
    pub msglist: Curl_llist,
    pub pending: Curl_llist,
    pub socket_cb: curl_socket_callback,
    pub socket_userp: *mut libc::c_void,
    pub push_cb: curl_push_callback,
    pub push_userp: *mut libc::c_void,
    pub hostcache: Curl_hash,
    pub timetree: *mut Curl_tree,
    pub sockhash: Curl_hash,
    pub conn_cache: conncache,
    pub maxconnects: libc::c_long,
    pub max_host_connections: libc::c_long,
    pub max_total_connections: libc::c_long,
    pub timer_cb: curl_multi_timer_callback,
    pub timer_userp: *mut libc::c_void,
    pub timer_lastcall: curltime,
    pub max_concurrent_streams: libc::c_uint,
    pub wakeup_pair: [curl_socket_t; 2],
    pub multiplexing: bool,
    pub recheckstate: bool,
    pub in_callback: bool,
    pub ipv6_works: bool,
}
pub type curl_multi_timer_callback =
    Option<unsafe extern "C" fn(*mut CURLM, libc::c_long, *mut libc::c_void) -> libc::c_int>;
pub type CURLM = Curl_multi;
pub type curl_push_callback = Option<
    unsafe extern "C" fn(
        *mut CURL,
        *mut CURL,
        size_t,
        *mut curl_pushheaders,
        *mut libc::c_void,
    ) -> libc::c_int,
>;
pub type curl_socket_callback = Option<
    unsafe extern "C" fn(
        *mut CURL,
        curl_socket_t,
        libc::c_int,
        *mut libc::c_void,
        *mut libc::c_void,
    ) -> libc::c_int,
>;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Curl_message {
    pub list: Curl_llist_element,
    pub extmsg: CURLMsg,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct CURLMsg {
    pub msg: CURLMSG,
    pub easy_handle: *mut CURL,
    pub data: C2RustUnnamed_3,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union C2RustUnnamed_3 {
    pub whatever: *mut libc::c_void,
    pub result: CURLcode,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct connectdata {
    pub cnnct: connstate,
    pub bundle_node: Curl_llist_element,
    pub chunk: Curl_chunker,
    pub fclosesocket: curl_closesocket_callback,
    pub closesocket_client: *mut libc::c_void,
    pub connection_id: libc::c_long,
    pub dns_entry: *mut Curl_dns_entry,
    pub ip_addr: *mut Curl_addrinfo,
    pub tempaddr: [*mut Curl_addrinfo; 2],
    pub scope_id: libc::c_uint,
    pub transport: C2RustUnnamed_5,
    pub host: hostname,
    pub hostname_resolve: *mut libc::c_char,
    pub secondaryhostname: *mut libc::c_char,
    pub conn_to_host: hostname,
    pub socks_proxy: proxy_info,
    pub http_proxy: proxy_info,
    pub port: libc::c_int,
    pub remote_port: libc::c_int,
    pub conn_to_port: libc::c_int,
    pub secondary_port: libc::c_ushort,
    pub primary_ip: [libc::c_char; 46],
    pub ip_version: libc::c_uchar,
    pub user: *mut libc::c_char,
    pub passwd: *mut libc::c_char,
    pub options: *mut libc::c_char,
    pub sasl_authzid: *mut libc::c_char,
    pub httpversion: libc::c_uchar,
    pub now: curltime,
    pub created: curltime,
    pub lastused: curltime,
    pub sock: [curl_socket_t; 2],
    pub tempsock: [curl_socket_t; 2],
    pub tempfamily: [libc::c_int; 2],
    pub recv: [Option<Curl_recv>; 2],
    pub send: [Option<Curl_send>; 2],
    pub ssl: [ssl_connect_data; 2],
    pub proxy_ssl: [ssl_connect_data; 2],
    pub ssl_config: ssl_primary_config,
    pub proxy_ssl_config: ssl_primary_config,
    pub bits: ConnectBits,
    pub num_addr: libc::c_int,
    pub connecttime: curltime,
    pub timeoutms_per_addr: [timediff_t; 2],
    pub handler: *const Curl_handler,
    pub given: *const Curl_handler,
    pub keepalive: curltime,
    pub sockfd: curl_socket_t,
    pub writesockfd: curl_socket_t,
    pub easyq: Curl_llist,
    pub seek_func: curl_seek_callback,
    pub seek_client: *mut libc::c_void,
    pub trailer: dynbuf,
    pub proto: C2RustUnnamed_4,
    pub connect_state: *mut http_connect_state,
    pub bundle: *mut connectbundle,
    pub unix_domain_socket: *mut libc::c_char,
    pub localdev: *mut libc::c_char,
    pub localportrange: libc::c_int,
    pub cselect_bits: libc::c_int,
    pub waitfor: libc::c_int,
    pub negnpn: libc::c_int,
    pub localport: libc::c_ushort,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union C2RustUnnamed_4 {
    pub ftpc: ftp_conn,
    pub httpc: http_conn,
    pub sshc: ssh_conn,
    pub tftpc: *mut tftp_state_data,
    pub imapc: imap_conn,
    pub pop3c: pop3_conn,
    pub smtpc: smtp_conn,
    pub rtspc: rtsp_conn,
    pub smbc: smb_conn,
    pub rtmp: *mut libc::c_void,
    pub ldapc: *mut ldapconninfo,
    pub mqtt: mqtt_conn,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct smtp_conn {
    pub pp: pingpong,
    pub state: smtpstate,
    pub ssldone: bool,
    pub domain: *mut libc::c_char,
    pub sasl: SASL,
    pub tls_supported: bool,
    pub size_supported: bool,
    pub utf8_supported: bool,
    pub auth_supported: bool,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SASL {
    pub params: *const SASLproto,
    pub state: saslstate,
    pub authmechs: libc::c_ushort,
    pub prefmech: libc::c_ushort,
    pub authused: libc::c_ushort,
    pub resetprefs: bool,
    pub mutual_auth: bool,
    pub force_ir: bool,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct SASLproto {
    pub service: *const libc::c_char,
    pub contcode: libc::c_int,
    pub finalcode: libc::c_int,
    pub maxirlen: size_t,
    pub sendauth: Option<
        unsafe extern "C" fn(
            *mut Curl_easy,
            *mut connectdata,
            *const libc::c_char,
            *const libc::c_char,
        ) -> CURLcode,
    >,
    pub sendcont: Option<
        unsafe extern "C" fn(*mut Curl_easy, *mut connectdata, *const libc::c_char) -> CURLcode,
    >,
    pub getmessage: Option<unsafe extern "C" fn(*mut libc::c_char, *mut *mut libc::c_char) -> ()>,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct pingpong {
    pub cache: *mut libc::c_char,
    pub cache_size: size_t,
    pub nread_resp: size_t,
    pub linestart_resp: *mut libc::c_char,
    pub pending_resp: bool,
    pub sendthis: *mut libc::c_char,
    pub sendleft: size_t,
    pub sendsize: size_t,
    pub response: curltime,
    pub response_time: timediff_t,
    pub sendbuf: dynbuf,
    pub statemachine: Option<unsafe extern "C" fn(*mut Curl_easy, *mut connectdata) -> CURLcode>,
    pub endofresp: Option<
        unsafe extern "C" fn(
            *mut Curl_easy,
            *mut connectdata,
            *mut libc::c_char,
            size_t,
            *mut libc::c_int,
        ) -> bool,
    >,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct pop3_conn {
    pub pp: pingpong,
    pub state: pop3state,
    pub ssldone: bool,
    pub tls_supported: bool,
    pub eob: size_t,
    pub strip: size_t,
    pub sasl: SASL,
    pub authtypes: libc::c_uint,
    pub preftype: libc::c_uint,
    pub apoptimestamp: *mut libc::c_char,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct imap_conn {
    pub pp: pingpong,
    pub state: imapstate,
    pub ssldone: bool,
    pub preauth: bool,
    pub sasl: SASL,
    pub preftype: libc::c_uint,
    pub cmdid: libc::c_uint,
    pub resptag: [libc::c_char; 5],
    pub tls_supported: bool,
    pub login_disabled: bool,
    pub ir_supported: bool,
    pub mailbox: *mut libc::c_char,
    pub mailbox_uidvalidity: *mut libc::c_char,
    pub dyn_0: dynbuf,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct http_conn {
    pub binsettings: [uint8_t; 80],
    pub binlen: size_t,
    pub trnsfr: *mut Curl_easy,
    pub h2: *mut nghttp2_session,
    pub send_underlying: Option<Curl_send>,
    pub recv_underlying: Option<Curl_recv>,
    pub inbuf: *mut libc::c_char,
    pub inbuflen: size_t,
    pub nread_inbuf: size_t,
    pub pause_stream_id: int32_t,
    pub drain_total: size_t,
    pub settings: h2settings,
    pub local_settings: [nghttp2_settings_entry; 3],
    pub local_settings_num: size_t,
}
pub type Curl_recv = unsafe extern "C" fn(
    *mut Curl_easy,
    libc::c_int,
    *mut libc::c_char,
    size_t,
    *mut CURLcode,
) -> ssize_t;
pub type Curl_send = unsafe extern "C" fn(
    *mut Curl_easy,
    libc::c_int,
    *const libc::c_void,
    size_t,
    *mut CURLcode,
) -> ssize_t;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ftp_conn {
    pub pp: pingpong,
    pub entrypath: *mut libc::c_char,
    pub file: *mut libc::c_char,
    pub dirs: *mut *mut libc::c_char,
    pub dirdepth: libc::c_int,
    pub dont_check: bool,
    pub ctl_valid: bool,
    pub cwddone: bool,
    pub cwdcount: libc::c_int,
    pub cwdfail: bool,
    pub wait_data_conn: bool,
    pub newport: libc::c_ushort,
    pub newhost: *mut libc::c_char,
    pub prevpath: *mut libc::c_char,
    pub transfertype: libc::c_char,
    pub count1: libc::c_int,
    pub count2: libc::c_int,
    pub count3: libc::c_int,
    pub state: ftpstate,
    pub state_saved: ftpstate,
    pub retr_size_saved: curl_off_t,
    pub server_os: *mut libc::c_char,
    pub known_filesize: curl_off_t,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Curl_handler {
    pub scheme: *const libc::c_char,
    pub setup_connection:
        Option<unsafe extern "C" fn(*mut Curl_easy, *mut connectdata) -> CURLcode>,
    pub do_it: Option<unsafe extern "C" fn(*mut Curl_easy, *mut bool) -> CURLcode>,
    pub done: Option<unsafe extern "C" fn(*mut Curl_easy, CURLcode, bool) -> CURLcode>,
    pub do_more: Option<unsafe extern "C" fn(*mut Curl_easy, *mut libc::c_int) -> CURLcode>,
    pub connect_it: Option<unsafe extern "C" fn(*mut Curl_easy, *mut bool) -> CURLcode>,
    pub connecting: Option<unsafe extern "C" fn(*mut Curl_easy, *mut bool) -> CURLcode>,
    pub doing: Option<unsafe extern "C" fn(*mut Curl_easy, *mut bool) -> CURLcode>,
    pub proto_getsock: Option<
        unsafe extern "C" fn(*mut Curl_easy, *mut connectdata, *mut curl_socket_t) -> libc::c_int,
    >,
    pub doing_getsock: Option<
        unsafe extern "C" fn(*mut Curl_easy, *mut connectdata, *mut curl_socket_t) -> libc::c_int,
    >,
    pub domore_getsock: Option<
        unsafe extern "C" fn(*mut Curl_easy, *mut connectdata, *mut curl_socket_t) -> libc::c_int,
    >,
    pub perform_getsock: Option<
        unsafe extern "C" fn(*mut Curl_easy, *mut connectdata, *mut curl_socket_t) -> libc::c_int,
    >,
    pub disconnect:
        Option<unsafe extern "C" fn(*mut Curl_easy, *mut connectdata, bool) -> CURLcode>,
    pub readwrite: Option<
        unsafe extern "C" fn(*mut Curl_easy, *mut connectdata, *mut ssize_t, *mut bool) -> CURLcode,
    >,
    pub connection_check: Option<
        unsafe extern "C" fn(*mut Curl_easy, *mut connectdata, libc::c_uint) -> libc::c_uint,
    >,
    pub attach: Option<unsafe extern "C" fn(*mut Curl_easy, *mut connectdata) -> ()>,
    pub defport: libc::c_int,
    pub protocol: libc::c_uint,
    pub family: libc::c_uint,
    pub flags: libc::c_uint,
}
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct ssl_connect_data {
    pub state: ssl_connection_state,
    pub connecting_state: ssl_connect_state,
    #[bitfield(name = "use_0", ty = "bit", bits = "0..=0")]
    pub use_0: [u8; 1],
    #[bitfield(padding)]
    pub c2rust_padding: [u8; 3],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct curl_fileinfo {
    pub filename: *mut libc::c_char,
    pub filetype: curlfiletype,
    pub time: time_t,
    pub perm: libc::c_uint,
    pub uid: libc::c_int,
    pub gid: libc::c_int,
    pub size: curl_off_t,
    pub hardlinks: libc::c_long,
    pub strings: C2RustUnnamed_6,
    pub flags: libc::c_uint,
    pub b_data: *mut libc::c_char,
    pub b_size: size_t,
    pub b_used: size_t,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_6 {
    pub time: *mut libc::c_char,
    pub perm: *mut libc::c_char,
    pub user: *mut libc::c_char,
    pub group: *mut libc::c_char,
    pub target: *mut libc::c_char,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ftp_parselist_data {
    pub os_type: C2RustUnnamed_22,
    pub state: C2RustUnnamed_8,
    pub error: CURLcode,
    pub file_data: *mut fileinfo,
    pub item_length: libc::c_uint,
    pub item_offset: size_t,
    pub offsets: C2RustUnnamed_7,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_7 {
    pub filename: size_t,
    pub user: size_t,
    pub group: size_t,
    pub time: size_t,
    pub perm: size_t,
    pub symlink_target: size_t,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct fileinfo {
    pub info: curl_fileinfo,
    pub list: Curl_llist_element,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union C2RustUnnamed_8 {
    pub UNIX: C2RustUnnamed_13,
    pub NT: C2RustUnnamed_9,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_9 {
    pub main: pl_winNT_mainstate,
    pub sub: pl_winNT_substate,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union pl_winNT_substate {
    pub time: C2RustUnnamed_12,
    pub dirorsize: C2RustUnnamed_11,
    pub filename: C2RustUnnamed_10,
}
pub type C2RustUnnamed_10 = libc::c_uint;
pub const PL_WINNT_FILENAME_WINEOL: C2RustUnnamed_10 = 2;
pub const PL_WINNT_FILENAME_CONTENT: C2RustUnnamed_10 = 1;
pub const PL_WINNT_FILENAME_PRESPACE: C2RustUnnamed_10 = 0;
pub type C2RustUnnamed_11 = libc::c_uint;
pub const PL_WINNT_DIRORSIZE_CONTENT: C2RustUnnamed_11 = 1;
pub const PL_WINNT_DIRORSIZE_PRESPACE: C2RustUnnamed_11 = 0;
pub type C2RustUnnamed_12 = libc::c_uint;
pub const PL_WINNT_TIME_TIME: C2RustUnnamed_12 = 1;
pub const PL_WINNT_TIME_PRESPACE: C2RustUnnamed_12 = 0;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_13 {
    pub main: pl_unix_mainstate,
    pub sub: pl_unix_substate,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union pl_unix_substate {
    pub total_dirsize: C2RustUnnamed_21,
    pub hlinks: C2RustUnnamed_20,
    pub user: C2RustUnnamed_19,
    pub group: C2RustUnnamed_18,
    pub size: C2RustUnnamed_17,
    pub time: C2RustUnnamed_16,
    pub filename: C2RustUnnamed_15,
    pub symlink: C2RustUnnamed_14,
}
pub type C2RustUnnamed_14 = libc::c_uint;
pub const PL_UNIX_SYMLINK_WINDOWSEOL: C2RustUnnamed_14 = 7;
pub const PL_UNIX_SYMLINK_TARGET: C2RustUnnamed_14 = 6;
pub const PL_UNIX_SYMLINK_PRETARGET4: C2RustUnnamed_14 = 5;
pub const PL_UNIX_SYMLINK_PRETARGET3: C2RustUnnamed_14 = 4;
pub const PL_UNIX_SYMLINK_PRETARGET2: C2RustUnnamed_14 = 3;
pub const PL_UNIX_SYMLINK_PRETARGET1: C2RustUnnamed_14 = 2;
pub const PL_UNIX_SYMLINK_NAME: C2RustUnnamed_14 = 1;
pub const PL_UNIX_SYMLINK_PRESPACE: C2RustUnnamed_14 = 0;
pub type C2RustUnnamed_15 = libc::c_uint;
pub const PL_UNIX_FILENAME_WINDOWSEOL: C2RustUnnamed_15 = 2;
pub const PL_UNIX_FILENAME_NAME: C2RustUnnamed_15 = 1;
pub const PL_UNIX_FILENAME_PRESPACE: C2RustUnnamed_15 = 0;
pub type C2RustUnnamed_16 = libc::c_uint;
pub const PL_UNIX_TIME_PART3: C2RustUnnamed_16 = 5;
pub const PL_UNIX_TIME_PREPART3: C2RustUnnamed_16 = 4;
pub const PL_UNIX_TIME_PART2: C2RustUnnamed_16 = 3;
pub const PL_UNIX_TIME_PREPART2: C2RustUnnamed_16 = 2;
pub const PL_UNIX_TIME_PART1: C2RustUnnamed_16 = 1;
pub const PL_UNIX_TIME_PREPART1: C2RustUnnamed_16 = 0;
pub type C2RustUnnamed_17 = libc::c_uint;
pub const PL_UNIX_SIZE_NUMBER: C2RustUnnamed_17 = 1;
pub const PL_UNIX_SIZE_PRESPACE: C2RustUnnamed_17 = 0;
pub type C2RustUnnamed_18 = libc::c_uint;
pub const PL_UNIX_GROUP_NAME: C2RustUnnamed_18 = 1;
pub const PL_UNIX_GROUP_PRESPACE: C2RustUnnamed_18 = 0;
pub type C2RustUnnamed_19 = libc::c_uint;
pub const PL_UNIX_USER_PARSING: C2RustUnnamed_19 = 1;
pub const PL_UNIX_USER_PRESPACE: C2RustUnnamed_19 = 0;
pub type C2RustUnnamed_20 = libc::c_uint;
pub const PL_UNIX_HLINKS_NUMBER: C2RustUnnamed_20 = 1;
pub const PL_UNIX_HLINKS_PRESPACE: C2RustUnnamed_20 = 0;
pub type C2RustUnnamed_21 = libc::c_uint;
pub const PL_UNIX_TOTALSIZE_READING: C2RustUnnamed_21 = 1;
pub const PL_UNIX_TOTALSIZE_INIT: C2RustUnnamed_21 = 0;
pub type C2RustUnnamed_22 = libc::c_uint;
pub const OS_TYPE_WIN_NT: C2RustUnnamed_22 = 2;
pub const OS_TYPE_UNIX: C2RustUnnamed_22 = 1;
pub const OS_TYPE_UNKNOWN: C2RustUnnamed_22 = 0;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ftp_wc {
    pub parser: *mut ftp_parselist_data,
    pub backup: C2RustUnnamed_23,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_23 {
    pub write_function: curl_write_callback,
    pub file_descriptor: *mut FILE,
}
#[no_mangle]
pub unsafe extern "C" fn Curl_ftp_parselist_data_alloc() -> *mut ftp_parselist_data {
    return Curl_ccalloc.expect("non-null function pointer")(
        1 as libc::c_int as size_t,
        ::std::mem::size_of::<ftp_parselist_data>() as libc::c_ulong,
    ) as *mut ftp_parselist_data;
}
#[no_mangle]
pub unsafe extern "C" fn Curl_ftp_parselist_data_free(mut parserp: *mut *mut ftp_parselist_data) {
    let mut parser: *mut ftp_parselist_data = *parserp;
    if !parser.is_null() {
        Curl_fileinfo_cleanup((*parser).file_data);
    }
    Curl_cfree.expect("non-null function pointer")(parser as *mut libc::c_void);
    *parserp = 0 as *mut ftp_parselist_data;
}
#[no_mangle]
pub unsafe extern "C" fn Curl_ftp_parselist_geterror(
    mut pl_data: *mut ftp_parselist_data,
) -> CURLcode {
    return (*pl_data).error;
}
unsafe extern "C" fn ftp_pl_get_permission(mut str: *const libc::c_char) -> libc::c_int {
    let mut permissions: libc::c_int = 0 as libc::c_int;
    if *str.offset(0 as libc::c_int as isize) as libc::c_int == 'r' as i32 {
        permissions |= (1 as libc::c_int) << 8 as libc::c_int;
    } else if *str.offset(0 as libc::c_int as isize) as libc::c_int != '-' as i32 {
        permissions |= 0x1000000 as libc::c_int;
    }
    if *str.offset(1 as libc::c_int as isize) as libc::c_int == 'w' as i32 {
        permissions |= (1 as libc::c_int) << 7 as libc::c_int;
    } else if *str.offset(1 as libc::c_int as isize) as libc::c_int != '-' as i32 {
        permissions |= 0x1000000 as libc::c_int;
    }
    if *str.offset(2 as libc::c_int as isize) as libc::c_int == 'x' as i32 {
        permissions |= (1 as libc::c_int) << 6 as libc::c_int;
    } else if *str.offset(2 as libc::c_int as isize) as libc::c_int == 's' as i32 {
        permissions |= (1 as libc::c_int) << 6 as libc::c_int;
        permissions |= (1 as libc::c_int) << 11 as libc::c_int;
    } else if *str.offset(2 as libc::c_int as isize) as libc::c_int == 'S' as i32 {
        permissions |= (1 as libc::c_int) << 11 as libc::c_int;
    } else if *str.offset(2 as libc::c_int as isize) as libc::c_int != '-' as i32 {
        permissions |= 0x1000000 as libc::c_int;
    }
    if *str.offset(3 as libc::c_int as isize) as libc::c_int == 'r' as i32 {
        permissions |= (1 as libc::c_int) << 5 as libc::c_int;
    } else if *str.offset(3 as libc::c_int as isize) as libc::c_int != '-' as i32 {
        permissions |= 0x1000000 as libc::c_int;
    }
    if *str.offset(4 as libc::c_int as isize) as libc::c_int == 'w' as i32 {
        permissions |= (1 as libc::c_int) << 4 as libc::c_int;
    } else if *str.offset(4 as libc::c_int as isize) as libc::c_int != '-' as i32 {
        permissions |= 0x1000000 as libc::c_int;
    }
    if *str.offset(5 as libc::c_int as isize) as libc::c_int == 'x' as i32 {
        permissions |= (1 as libc::c_int) << 3 as libc::c_int;
    } else if *str.offset(5 as libc::c_int as isize) as libc::c_int == 's' as i32 {
        permissions |= (1 as libc::c_int) << 3 as libc::c_int;
        permissions |= (1 as libc::c_int) << 10 as libc::c_int;
    } else if *str.offset(5 as libc::c_int as isize) as libc::c_int == 'S' as i32 {
        permissions |= (1 as libc::c_int) << 10 as libc::c_int;
    } else if *str.offset(5 as libc::c_int as isize) as libc::c_int != '-' as i32 {
        permissions |= 0x1000000 as libc::c_int;
    }
    if *str.offset(6 as libc::c_int as isize) as libc::c_int == 'r' as i32 {
        permissions |= (1 as libc::c_int) << 2 as libc::c_int;
    } else if *str.offset(6 as libc::c_int as isize) as libc::c_int != '-' as i32 {
        permissions |= 0x1000000 as libc::c_int;
    }
    if *str.offset(7 as libc::c_int as isize) as libc::c_int == 'w' as i32 {
        permissions |= (1 as libc::c_int) << 1 as libc::c_int;
    } else if *str.offset(7 as libc::c_int as isize) as libc::c_int != '-' as i32 {
        permissions |= 0x1000000 as libc::c_int;
    }
    if *str.offset(8 as libc::c_int as isize) as libc::c_int == 'x' as i32 {
        permissions |= 1 as libc::c_int;
    } else if *str.offset(8 as libc::c_int as isize) as libc::c_int == 't' as i32 {
        permissions |= 1 as libc::c_int;
        permissions |= (1 as libc::c_int) << 9 as libc::c_int;
    } else if *str.offset(8 as libc::c_int as isize) as libc::c_int == 'T' as i32 {
        permissions |= (1 as libc::c_int) << 9 as libc::c_int;
    } else if *str.offset(8 as libc::c_int as isize) as libc::c_int != '-' as i32 {
        permissions |= 0x1000000 as libc::c_int;
    }
    return permissions;
}
unsafe extern "C" fn ftp_pl_insert_finfo(
    mut data: *mut Curl_easy,
    mut infop: *mut fileinfo,
) -> CURLcode {
    let mut compare: curl_fnmatch_callback = None;
    let mut wc: *mut WildcardData = &mut (*data).wildcard;
    let mut ftpwc: *mut ftp_wc = (*wc).protdata as *mut ftp_wc;
    let mut llist: *mut Curl_llist = &mut (*wc).filelist;
    let mut parser: *mut ftp_parselist_data = (*ftpwc).parser;
    let mut add: bool = 1 as libc::c_int != 0;
    let mut finfo: *mut curl_fileinfo = &mut (*infop).info;
    let mut str: *mut libc::c_char = (*finfo).b_data;
    let ref mut fresh0 = (*finfo).filename;
    *fresh0 = str.offset((*parser).offsets.filename as isize);
    let ref mut fresh1 = (*finfo).strings.group;
    *fresh1 = if (*parser).offsets.group != 0 {
        str.offset((*parser).offsets.group as isize)
    } else {
        0 as *mut libc::c_char
    };
    let ref mut fresh2 = (*finfo).strings.perm;
    *fresh2 = if (*parser).offsets.perm != 0 {
        str.offset((*parser).offsets.perm as isize)
    } else {
        0 as *mut libc::c_char
    };
    let ref mut fresh3 = (*finfo).strings.target;
    *fresh3 = if (*parser).offsets.symlink_target != 0 {
        str.offset((*parser).offsets.symlink_target as isize)
    } else {
        0 as *mut libc::c_char
    };
    let ref mut fresh4 = (*finfo).strings.time;
    *fresh4 = str.offset((*parser).offsets.time as isize);
    let ref mut fresh5 = (*finfo).strings.user;
    *fresh5 = if (*parser).offsets.user != 0 {
        str.offset((*parser).offsets.user as isize)
    } else {
        0 as *mut libc::c_char
    };
    compare = (*data).set.fnmatch;
    if compare.is_none() {
        compare = Some(
            Curl_fnmatch
                as unsafe extern "C" fn(
                    *mut libc::c_void,
                    *const libc::c_char,
                    *const libc::c_char,
                ) -> libc::c_int,
        );
    }
    Curl_set_in_callback(data, 1 as libc::c_int != 0);
    if compare.expect("non-null function pointer")(
        (*data).set.fnmatch_data,
        (*wc).pattern,
        (*finfo).filename,
    ) == 0 as libc::c_int
    {
        if (*finfo).filetype as libc::c_uint == CURLFILETYPE_SYMLINK as libc::c_int as libc::c_uint
            && !((*finfo).strings.target).is_null()
            && !(strstr(
                (*finfo).strings.target,
                b" -> \0" as *const u8 as *const libc::c_char,
            ))
            .is_null()
        {
            add = 0 as libc::c_int != 0;
        }
    } else {
        add = 0 as libc::c_int != 0;
    }
    Curl_set_in_callback(data, 0 as libc::c_int != 0);
    if add {
        Curl_llist_insert_next(
            llist,
            (*llist).tail,
            finfo as *const libc::c_void,
            &mut (*infop).list,
        );
    } else {
        Curl_fileinfo_cleanup(infop);
    }
    let ref mut fresh6 = (*(*ftpwc).parser).file_data;
    *fresh6 = 0 as *mut fileinfo;
    return CURLE_OK;
}
#[no_mangle]
pub unsafe extern "C" fn Curl_ftp_parselist(
    mut buffer: *mut libc::c_char,
    mut size: size_t,
    mut nmemb: size_t,
    mut connptr: *mut libc::c_void,
) -> size_t {
    let mut current_block: u64;
    let mut bufflen: size_t = size.wrapping_mul(nmemb);
    let mut data: *mut Curl_easy = connptr as *mut Curl_easy;
    let mut ftpwc: *mut ftp_wc = (*data).wildcard.protdata as *mut ftp_wc;
    let mut parser: *mut ftp_parselist_data = (*ftpwc).parser;
    let mut infop: *mut fileinfo = 0 as *mut fileinfo;
    let mut finfo: *mut curl_fileinfo = 0 as *mut curl_fileinfo;
    let mut i: libc::c_ulong = 0 as libc::c_int as libc::c_ulong;
    let mut result: CURLcode = CURLE_OK;
    let mut retsize: size_t = bufflen;
    if !((*parser).error as u64 != 0) {
        if (*parser).os_type as libc::c_uint == OS_TYPE_UNKNOWN as libc::c_int as libc::c_uint
            && bufflen > 0 as libc::c_int as libc::c_ulong
        {
            (*parser).os_type = (if *buffer.offset(0 as libc::c_int as isize) as libc::c_int
                >= '0' as i32
                && *buffer.offset(0 as libc::c_int as isize) as libc::c_int <= '9' as i32
            {
                OS_TYPE_WIN_NT as libc::c_int
            } else {
                OS_TYPE_UNIX as libc::c_int
            }) as C2RustUnnamed_22;
        }
        loop {
            if !(i < bufflen) {
                current_block = 12024005797910882043;
                break;
            }
            let mut c: libc::c_char = *buffer.offset(i as isize);
            if ((*parser).file_data).is_null() {
                let ref mut fresh7 = (*parser).file_data;
                *fresh7 = Curl_fileinfo_alloc();
                if ((*parser).file_data).is_null() {
                    (*parser).error = CURLE_OUT_OF_MEMORY;
                    current_block = 3906270568117527278;
                    break;
                } else {
                    let ref mut fresh8 = (*(*parser).file_data).info.b_data;
                    *fresh8 = Curl_cmalloc.expect("non-null function pointer")(
                        160 as libc::c_int as size_t,
                    ) as *mut libc::c_char;
                    if ((*(*parser).file_data).info.b_data).is_null() {
                        (*parser).error = CURLE_OUT_OF_MEMORY;
                        current_block = 3906270568117527278;
                        break;
                    } else {
                        (*(*parser).file_data).info.b_size = 160 as libc::c_int as size_t;
                        (*parser).item_offset = 0 as libc::c_int as size_t;
                        (*parser).item_length = 0 as libc::c_int as libc::c_uint;
                    }
                }
            }
            infop = (*parser).file_data;
            finfo = &mut (*infop).info;
            let ref mut fresh9 = (*finfo).b_used;
            let fresh10 = *fresh9;
            *fresh9 = (*fresh9).wrapping_add(1);
            *((*finfo).b_data).offset(fresh10 as isize) = c;
            if (*finfo).b_used >= ((*finfo).b_size).wrapping_sub(1 as libc::c_int as libc::c_ulong)
            {
                let mut tmp: *mut libc::c_char = Curl_crealloc.expect("non-null function pointer")(
                    (*finfo).b_data as *mut libc::c_void,
                    ((*finfo).b_size).wrapping_add(160 as libc::c_int as libc::c_ulong),
                ) as *mut libc::c_char;
                if !tmp.is_null() {
                    let ref mut fresh11 = (*finfo).b_size;
                    *fresh11 = (*fresh11 as libc::c_ulong)
                        .wrapping_add(160 as libc::c_int as libc::c_ulong)
                        as size_t as size_t;
                    let ref mut fresh12 = (*finfo).b_data;
                    *fresh12 = tmp;
                } else {
                    Curl_fileinfo_cleanup((*parser).file_data);
                    let ref mut fresh13 = (*parser).file_data;
                    *fresh13 = 0 as *mut fileinfo;
                    (*parser).error = CURLE_OUT_OF_MEMORY;
                    current_block = 3906270568117527278;
                    break;
                }
            }
            match (*parser).os_type as libc::c_uint {
                1 => match (*parser).state.UNIX.main as libc::c_uint {
                    0 => {
                        current_block = 11239732194576282906;
                        match current_block {
                            288150091726216379 => {
                                match (*parser).state.UNIX.sub.group as libc::c_uint {
                                    0 => {
                                        if c as libc::c_int != ' ' as i32 {
                                            (*parser).item_offset = ((*finfo).b_used)
                                                .wrapping_sub(1 as libc::c_int as libc::c_ulong);
                                            (*parser).item_length =
                                                1 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.sub.group = PL_UNIX_GROUP_NAME;
                                        }
                                    }
                                    1 => {
                                        let ref mut fresh21 = (*parser).item_length;
                                        *fresh21 = (*fresh21).wrapping_add(1);
                                        if c as libc::c_int == ' ' as i32 {
                                            *((*finfo).b_data).offset(
                                                ((*parser).item_offset)
                                                    .wrapping_add(
                                                        (*parser).item_length as libc::c_ulong,
                                                    )
                                                    .wrapping_sub(1 as libc::c_int as libc::c_ulong)
                                                    as isize,
                                            ) = 0 as libc::c_int as libc::c_char;
                                            (*parser).offsets.group = (*parser).item_offset;
                                            (*parser).state.UNIX.main = PL_UNIX_SIZE;
                                            (*parser).state.UNIX.sub.size = PL_UNIX_SIZE_PRESPACE;
                                            (*parser).item_offset = 0 as libc::c_int as size_t;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            12111627280334626048 => {
                                match (*parser).state.UNIX.sub.filename as libc::c_uint {
                                    0 => {
                                        current_block = 6301913710463012629;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 12570238925790259019;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    2 => {
                                        current_block = 12020001026448635048;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            2243364724898231629 => {
                                match (*parser).state.UNIX.sub.time as libc::c_uint {
                                    0 => {
                                        current_block = 8919528876833742864;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 13466321749914267966;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    2 => {
                                        current_block = 13902027429569464800;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    3 => {
                                        current_block = 964279874659303037;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    4 => {
                                        current_block = 8274961190783774511;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    5 => {
                                        current_block = 14633142221952416065;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            15714839002739240143 => {
                                match (*parser).state.UNIX.sub.size as libc::c_uint {
                                    0 => {
                                        current_block = 9897063314188657484;
                                        match current_block {
                                            9897063314188657484 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.size =
                                                            PL_UNIX_SIZE_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh22 = (*parser).item_length;
                                                *fresh22 = (*fresh22).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p_0: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut fsize: curl_off_t = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if curlx_strtoofft(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p_0,
                                                        10 as libc::c_int,
                                                        &mut fsize,
                                                    )
                                                        as u64
                                                        == 0
                                                    {
                                                        if *p_0.offset(0 as libc::c_int as isize)
                                                            as libc::c_int
                                                            == '\0' as i32
                                                            && fsize
                                                                != 0x7fffffffffffffff
                                                                    as libc::c_long
                                                            && fsize
                                                                != -(0x7fffffffffffffff
                                                                    as libc::c_long)
                                                                    - 1 as libc::c_long
                                                        {
                                                            (*(*parser).file_data).info.flags |= ((1
                                                                as libc::c_int)
                                                                << 6 as libc::c_int)
                                                                as libc::c_uint;
                                                            (*(*parser).file_data).info.size =
                                                                fsize;
                                                        }
                                                        (*parser).item_length =
                                                            0 as libc::c_int as libc::c_uint;
                                                        (*parser).item_offset =
                                                            0 as libc::c_int as size_t;
                                                        (*parser).state.UNIX.main = PL_UNIX_TIME;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PREPART1;
                                                    }
                                                } else if Curl_isdigit(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 4620427382343268962;
                                        match current_block {
                                            9897063314188657484 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.size =
                                                            PL_UNIX_SIZE_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh22 = (*parser).item_length;
                                                *fresh22 = (*fresh22).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p_0: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut fsize: curl_off_t = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if curlx_strtoofft(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p_0,
                                                        10 as libc::c_int,
                                                        &mut fsize,
                                                    )
                                                        as u64
                                                        == 0
                                                    {
                                                        if *p_0.offset(0 as libc::c_int as isize)
                                                            as libc::c_int
                                                            == '\0' as i32
                                                            && fsize
                                                                != 0x7fffffffffffffff
                                                                    as libc::c_long
                                                            && fsize
                                                                != -(0x7fffffffffffffff
                                                                    as libc::c_long)
                                                                    - 1 as libc::c_long
                                                        {
                                                            (*(*parser).file_data).info.flags |= ((1
                                                                as libc::c_int)
                                                                << 6 as libc::c_int)
                                                                as libc::c_uint;
                                                            (*(*parser).file_data).info.size =
                                                                fsize;
                                                        }
                                                        (*parser).item_length =
                                                            0 as libc::c_int as libc::c_uint;
                                                        (*parser).item_offset =
                                                            0 as libc::c_int as size_t;
                                                        (*parser).state.UNIX.main = PL_UNIX_TIME;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PREPART1;
                                                    }
                                                } else if Curl_isdigit(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            8922133629962145824 => {
                                match (*parser).state.UNIX.sub.hlinks as libc::c_uint {
                                    0 => {
                                        current_block = 1051223101710680835;
                                        match current_block {
                                            1051223101710680835 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.hlinks =
                                                            PL_UNIX_HLINKS_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh19 = (*parser).item_length;
                                                *fresh19 = (*fresh19).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut hlinks: libc::c_long = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    hlinks = strtol(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p,
                                                        10 as libc::c_int,
                                                    );
                                                    if *p.offset(0 as libc::c_int as isize)
                                                        as libc::c_int
                                                        == '\0' as i32
                                                        && hlinks
                                                            != 9223372036854775807 as libc::c_long
                                                        && hlinks
                                                            != -(9223372036854775807
                                                                as libc::c_long)
                                                                - 1 as libc::c_long
                                                    {
                                                        (*(*parser).file_data).info.flags |= ((1
                                                            as libc::c_int)
                                                            << 7 as libc::c_int)
                                                            as libc::c_uint;
                                                        (*(*parser).file_data).info.hardlinks =
                                                            hlinks;
                                                    }
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).item_offset =
                                                        0 as libc::c_int as size_t;
                                                    (*parser).state.UNIX.main = PL_UNIX_USER;
                                                    (*parser).state.UNIX.sub.user =
                                                        PL_UNIX_USER_PRESPACE;
                                                } else if (c as libc::c_int) < '0' as i32
                                                    || c as libc::c_int > '9' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 11000365710145520394;
                                        match current_block {
                                            1051223101710680835 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.hlinks =
                                                            PL_UNIX_HLINKS_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh19 = (*parser).item_length;
                                                *fresh19 = (*fresh19).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut hlinks: libc::c_long = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    hlinks = strtol(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p,
                                                        10 as libc::c_int,
                                                    );
                                                    if *p.offset(0 as libc::c_int as isize)
                                                        as libc::c_int
                                                        == '\0' as i32
                                                        && hlinks
                                                            != 9223372036854775807 as libc::c_long
                                                        && hlinks
                                                            != -(9223372036854775807
                                                                as libc::c_long)
                                                                - 1 as libc::c_long
                                                    {
                                                        (*(*parser).file_data).info.flags |= ((1
                                                            as libc::c_int)
                                                            << 7 as libc::c_int)
                                                            as libc::c_uint;
                                                        (*(*parser).file_data).info.hardlinks =
                                                            hlinks;
                                                    }
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).item_offset =
                                                        0 as libc::c_int as size_t;
                                                    (*parser).state.UNIX.main = PL_UNIX_USER;
                                                    (*parser).state.UNIX.sub.user =
                                                        PL_UNIX_USER_PRESPACE;
                                                } else if (c as libc::c_int) < '0' as i32
                                                    || c as libc::c_int > '9' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            2548585907665248015 => {
                                let ref mut fresh18 = (*parser).item_length;
                                *fresh18 = (*fresh18).wrapping_add(1);
                                if (*parser).item_length <= 9 as libc::c_int as libc::c_uint {
                                    if (strchr(
                                        b"rwx-tTsS\0" as *const u8 as *const libc::c_char,
                                        c as libc::c_int,
                                    ))
                                    .is_null()
                                    {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                } else if (*parser).item_length == 10 as libc::c_int as libc::c_uint
                                {
                                    let mut perm: libc::c_uint = 0;
                                    if c as libc::c_int != ' ' as i32 {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    } else {
                                        *((*finfo).b_data).offset(10 as libc::c_int as isize) =
                                            0 as libc::c_int as libc::c_char;
                                        perm = ftp_pl_get_permission(
                                            ((*finfo).b_data)
                                                .offset((*parser).item_offset as isize),
                                        )
                                            as libc::c_uint;
                                        if perm & 0x1000000 as libc::c_int as libc::c_uint != 0 {
                                            (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                            current_block = 3906270568117527278;
                                            break;
                                        } else {
                                            (*(*parser).file_data).info.flags |=
                                                ((1 as libc::c_int) << 3 as libc::c_int)
                                                    as libc::c_uint;
                                            (*(*parser).file_data).info.perm = perm;
                                            (*parser).offsets.perm = (*parser).item_offset;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.main = PL_UNIX_HLINKS;
                                            (*parser).state.UNIX.sub.hlinks =
                                                PL_UNIX_HLINKS_PRESPACE;
                                        }
                                    }
                                }
                            }
                            2271266030019697172 => {
                                match c as libc::c_int {
                                    45 => {
                                        (*finfo).filetype = CURLFILETYPE_FILE;
                                    }
                                    100 => {
                                        (*finfo).filetype = CURLFILETYPE_DIRECTORY;
                                    }
                                    108 => {
                                        (*finfo).filetype = CURLFILETYPE_SYMLINK;
                                    }
                                    112 => {
                                        (*finfo).filetype = CURLFILETYPE_NAMEDPIPE;
                                    }
                                    115 => {
                                        (*finfo).filetype = CURLFILETYPE_SOCKET;
                                    }
                                    99 => {
                                        (*finfo).filetype = CURLFILETYPE_DEVICE_CHAR;
                                    }
                                    98 => {
                                        (*finfo).filetype = CURLFILETYPE_DEVICE_BLOCK;
                                    }
                                    68 => {
                                        (*finfo).filetype = CURLFILETYPE_DOOR;
                                    }
                                    _ => {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                }
                                (*parser).state.UNIX.main = PL_UNIX_PERMISSION;
                                (*parser).item_length = 0 as libc::c_int as libc::c_uint;
                                (*parser).item_offset = 1 as libc::c_int as size_t;
                            }
                            11239732194576282906 => {
                                match (*parser).state.UNIX.sub.total_dirsize as libc::c_uint {
                                    0 => {
                                        current_block = 5868443211042008994;
                                        match current_block {
                                            5868443211042008994 => {
                                                if c as libc::c_int == 't' as i32 {
                                                    (*parser).state.UNIX.sub.total_dirsize =
                                                        PL_UNIX_TOTALSIZE_READING;
                                                    let ref mut fresh14 = (*parser).item_length;
                                                    *fresh14 = (*fresh14).wrapping_add(1);
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    (*finfo).b_used = 0 as libc::c_int as size_t;
                                                    continue;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh15 = (*parser).item_length;
                                                *fresh15 = (*fresh15).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    let ref mut fresh16 = (*parser).item_length;
                                                    *fresh16 = (*fresh16).wrapping_sub(1);
                                                    let ref mut fresh17 = (*finfo).b_used;
                                                    *fresh17 = (*fresh17).wrapping_sub(1);
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_length).wrapping_sub(
                                                            1 as libc::c_int as libc::c_uint,
                                                        )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strncmp(
                                                        b"total \0" as *const u8
                                                            as *const libc::c_char,
                                                        (*finfo).b_data,
                                                        6 as libc::c_int as libc::c_ulong,
                                                    ) == 0 as libc::c_int
                                                    {
                                                        let mut endptr: *mut libc::c_char =
                                                            ((*finfo).b_data)
                                                                .offset(6 as libc::c_int as isize);
                                                        while Curl_isspace(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        while Curl_isdigit(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        if *endptr != 0 {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*parser).state.UNIX.main =
                                                                PL_UNIX_FILETYPE;
                                                            (*finfo).b_used =
                                                                0 as libc::c_int as size_t;
                                                        }
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 12794766220424740645;
                                        match current_block {
                                            5868443211042008994 => {
                                                if c as libc::c_int == 't' as i32 {
                                                    (*parser).state.UNIX.sub.total_dirsize =
                                                        PL_UNIX_TOTALSIZE_READING;
                                                    let ref mut fresh14 = (*parser).item_length;
                                                    *fresh14 = (*fresh14).wrapping_add(1);
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    (*finfo).b_used = 0 as libc::c_int as size_t;
                                                    continue;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh15 = (*parser).item_length;
                                                *fresh15 = (*fresh15).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    let ref mut fresh16 = (*parser).item_length;
                                                    *fresh16 = (*fresh16).wrapping_sub(1);
                                                    let ref mut fresh17 = (*finfo).b_used;
                                                    *fresh17 = (*fresh17).wrapping_sub(1);
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_length).wrapping_sub(
                                                            1 as libc::c_int as libc::c_uint,
                                                        )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strncmp(
                                                        b"total \0" as *const u8
                                                            as *const libc::c_char,
                                                        (*finfo).b_data,
                                                        6 as libc::c_int as libc::c_ulong,
                                                    ) == 0 as libc::c_int
                                                    {
                                                        let mut endptr: *mut libc::c_char =
                                                            ((*finfo).b_data)
                                                                .offset(6 as libc::c_int as isize);
                                                        while Curl_isspace(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        while Curl_isdigit(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        if *endptr != 0 {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*parser).state.UNIX.main =
                                                                PL_UNIX_FILETYPE;
                                                            (*finfo).b_used =
                                                                0 as libc::c_int as size_t;
                                                        }
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            12711409943779506440 => {
                                match (*parser).state.UNIX.sub.user as libc::c_uint {
                                    0 => {
                                        if c as libc::c_int != ' ' as i32 {
                                            (*parser).item_offset = ((*finfo).b_used)
                                                .wrapping_sub(1 as libc::c_int as libc::c_ulong);
                                            (*parser).item_length =
                                                1 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.sub.user = PL_UNIX_USER_PARSING;
                                        }
                                    }
                                    1 => {
                                        let ref mut fresh20 = (*parser).item_length;
                                        *fresh20 = (*fresh20).wrapping_add(1);
                                        if c as libc::c_int == ' ' as i32 {
                                            *((*finfo).b_data).offset(
                                                ((*parser).item_offset)
                                                    .wrapping_add(
                                                        (*parser).item_length as libc::c_ulong,
                                                    )
                                                    .wrapping_sub(1 as libc::c_int as libc::c_ulong)
                                                    as isize,
                                            ) = 0 as libc::c_int as libc::c_char;
                                            (*parser).offsets.user = (*parser).item_offset;
                                            (*parser).state.UNIX.main = PL_UNIX_GROUP;
                                            (*parser).state.UNIX.sub.group = PL_UNIX_GROUP_PRESPACE;
                                            (*parser).item_offset = 0 as libc::c_int as size_t;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            _ => match (*parser).state.UNIX.sub.symlink as libc::c_uint {
                                0 => {
                                    current_block = 3947153213232826515;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                1 => {
                                    current_block = 1776290020351736984;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                2 => {
                                    current_block = 14587494051267926558;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                3 => {
                                    current_block = 5402613236608857871;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                4 => {
                                    current_block = 5209973316514186056;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                5 => {
                                    current_block = 3527484645425325286;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                6 => {
                                    current_block = 3075363095485550289;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                7 => {
                                    current_block = 13258967356842108374;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            },
                        }
                    }
                    1 => {
                        current_block = 2271266030019697172;
                        match current_block {
                            288150091726216379 => {
                                match (*parser).state.UNIX.sub.group as libc::c_uint {
                                    0 => {
                                        if c as libc::c_int != ' ' as i32 {
                                            (*parser).item_offset = ((*finfo).b_used)
                                                .wrapping_sub(1 as libc::c_int as libc::c_ulong);
                                            (*parser).item_length =
                                                1 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.sub.group = PL_UNIX_GROUP_NAME;
                                        }
                                    }
                                    1 => {
                                        let ref mut fresh21 = (*parser).item_length;
                                        *fresh21 = (*fresh21).wrapping_add(1);
                                        if c as libc::c_int == ' ' as i32 {
                                            *((*finfo).b_data).offset(
                                                ((*parser).item_offset)
                                                    .wrapping_add(
                                                        (*parser).item_length as libc::c_ulong,
                                                    )
                                                    .wrapping_sub(1 as libc::c_int as libc::c_ulong)
                                                    as isize,
                                            ) = 0 as libc::c_int as libc::c_char;
                                            (*parser).offsets.group = (*parser).item_offset;
                                            (*parser).state.UNIX.main = PL_UNIX_SIZE;
                                            (*parser).state.UNIX.sub.size = PL_UNIX_SIZE_PRESPACE;
                                            (*parser).item_offset = 0 as libc::c_int as size_t;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            12111627280334626048 => {
                                match (*parser).state.UNIX.sub.filename as libc::c_uint {
                                    0 => {
                                        current_block = 6301913710463012629;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 12570238925790259019;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    2 => {
                                        current_block = 12020001026448635048;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            2243364724898231629 => {
                                match (*parser).state.UNIX.sub.time as libc::c_uint {
                                    0 => {
                                        current_block = 8919528876833742864;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 13466321749914267966;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    2 => {
                                        current_block = 13902027429569464800;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    3 => {
                                        current_block = 964279874659303037;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    4 => {
                                        current_block = 8274961190783774511;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    5 => {
                                        current_block = 14633142221952416065;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            15714839002739240143 => {
                                match (*parser).state.UNIX.sub.size as libc::c_uint {
                                    0 => {
                                        current_block = 9897063314188657484;
                                        match current_block {
                                            9897063314188657484 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.size =
                                                            PL_UNIX_SIZE_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh22 = (*parser).item_length;
                                                *fresh22 = (*fresh22).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p_0: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut fsize: curl_off_t = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if curlx_strtoofft(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p_0,
                                                        10 as libc::c_int,
                                                        &mut fsize,
                                                    )
                                                        as u64
                                                        == 0
                                                    {
                                                        if *p_0.offset(0 as libc::c_int as isize)
                                                            as libc::c_int
                                                            == '\0' as i32
                                                            && fsize
                                                                != 0x7fffffffffffffff
                                                                    as libc::c_long
                                                            && fsize
                                                                != -(0x7fffffffffffffff
                                                                    as libc::c_long)
                                                                    - 1 as libc::c_long
                                                        {
                                                            (*(*parser).file_data).info.flags |= ((1
                                                                as libc::c_int)
                                                                << 6 as libc::c_int)
                                                                as libc::c_uint;
                                                            (*(*parser).file_data).info.size =
                                                                fsize;
                                                        }
                                                        (*parser).item_length =
                                                            0 as libc::c_int as libc::c_uint;
                                                        (*parser).item_offset =
                                                            0 as libc::c_int as size_t;
                                                        (*parser).state.UNIX.main = PL_UNIX_TIME;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PREPART1;
                                                    }
                                                } else if Curl_isdigit(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 4620427382343268962;
                                        match current_block {
                                            9897063314188657484 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.size =
                                                            PL_UNIX_SIZE_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh22 = (*parser).item_length;
                                                *fresh22 = (*fresh22).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p_0: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut fsize: curl_off_t = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if curlx_strtoofft(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p_0,
                                                        10 as libc::c_int,
                                                        &mut fsize,
                                                    )
                                                        as u64
                                                        == 0
                                                    {
                                                        if *p_0.offset(0 as libc::c_int as isize)
                                                            as libc::c_int
                                                            == '\0' as i32
                                                            && fsize
                                                                != 0x7fffffffffffffff
                                                                    as libc::c_long
                                                            && fsize
                                                                != -(0x7fffffffffffffff
                                                                    as libc::c_long)
                                                                    - 1 as libc::c_long
                                                        {
                                                            (*(*parser).file_data).info.flags |= ((1
                                                                as libc::c_int)
                                                                << 6 as libc::c_int)
                                                                as libc::c_uint;
                                                            (*(*parser).file_data).info.size =
                                                                fsize;
                                                        }
                                                        (*parser).item_length =
                                                            0 as libc::c_int as libc::c_uint;
                                                        (*parser).item_offset =
                                                            0 as libc::c_int as size_t;
                                                        (*parser).state.UNIX.main = PL_UNIX_TIME;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PREPART1;
                                                    }
                                                } else if Curl_isdigit(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            8922133629962145824 => {
                                match (*parser).state.UNIX.sub.hlinks as libc::c_uint {
                                    0 => {
                                        current_block = 1051223101710680835;
                                        match current_block {
                                            1051223101710680835 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.hlinks =
                                                            PL_UNIX_HLINKS_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh19 = (*parser).item_length;
                                                *fresh19 = (*fresh19).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut hlinks: libc::c_long = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    hlinks = strtol(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p,
                                                        10 as libc::c_int,
                                                    );
                                                    if *p.offset(0 as libc::c_int as isize)
                                                        as libc::c_int
                                                        == '\0' as i32
                                                        && hlinks
                                                            != 9223372036854775807 as libc::c_long
                                                        && hlinks
                                                            != -(9223372036854775807
                                                                as libc::c_long)
                                                                - 1 as libc::c_long
                                                    {
                                                        (*(*parser).file_data).info.flags |= ((1
                                                            as libc::c_int)
                                                            << 7 as libc::c_int)
                                                            as libc::c_uint;
                                                        (*(*parser).file_data).info.hardlinks =
                                                            hlinks;
                                                    }
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).item_offset =
                                                        0 as libc::c_int as size_t;
                                                    (*parser).state.UNIX.main = PL_UNIX_USER;
                                                    (*parser).state.UNIX.sub.user =
                                                        PL_UNIX_USER_PRESPACE;
                                                } else if (c as libc::c_int) < '0' as i32
                                                    || c as libc::c_int > '9' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 11000365710145520394;
                                        match current_block {
                                            1051223101710680835 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.hlinks =
                                                            PL_UNIX_HLINKS_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh19 = (*parser).item_length;
                                                *fresh19 = (*fresh19).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut hlinks: libc::c_long = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    hlinks = strtol(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p,
                                                        10 as libc::c_int,
                                                    );
                                                    if *p.offset(0 as libc::c_int as isize)
                                                        as libc::c_int
                                                        == '\0' as i32
                                                        && hlinks
                                                            != 9223372036854775807 as libc::c_long
                                                        && hlinks
                                                            != -(9223372036854775807
                                                                as libc::c_long)
                                                                - 1 as libc::c_long
                                                    {
                                                        (*(*parser).file_data).info.flags |= ((1
                                                            as libc::c_int)
                                                            << 7 as libc::c_int)
                                                            as libc::c_uint;
                                                        (*(*parser).file_data).info.hardlinks =
                                                            hlinks;
                                                    }
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).item_offset =
                                                        0 as libc::c_int as size_t;
                                                    (*parser).state.UNIX.main = PL_UNIX_USER;
                                                    (*parser).state.UNIX.sub.user =
                                                        PL_UNIX_USER_PRESPACE;
                                                } else if (c as libc::c_int) < '0' as i32
                                                    || c as libc::c_int > '9' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            2548585907665248015 => {
                                let ref mut fresh18 = (*parser).item_length;
                                *fresh18 = (*fresh18).wrapping_add(1);
                                if (*parser).item_length <= 9 as libc::c_int as libc::c_uint {
                                    if (strchr(
                                        b"rwx-tTsS\0" as *const u8 as *const libc::c_char,
                                        c as libc::c_int,
                                    ))
                                    .is_null()
                                    {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                } else if (*parser).item_length == 10 as libc::c_int as libc::c_uint
                                {
                                    let mut perm: libc::c_uint = 0;
                                    if c as libc::c_int != ' ' as i32 {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    } else {
                                        *((*finfo).b_data).offset(10 as libc::c_int as isize) =
                                            0 as libc::c_int as libc::c_char;
                                        perm = ftp_pl_get_permission(
                                            ((*finfo).b_data)
                                                .offset((*parser).item_offset as isize),
                                        )
                                            as libc::c_uint;
                                        if perm & 0x1000000 as libc::c_int as libc::c_uint != 0 {
                                            (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                            current_block = 3906270568117527278;
                                            break;
                                        } else {
                                            (*(*parser).file_data).info.flags |=
                                                ((1 as libc::c_int) << 3 as libc::c_int)
                                                    as libc::c_uint;
                                            (*(*parser).file_data).info.perm = perm;
                                            (*parser).offsets.perm = (*parser).item_offset;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.main = PL_UNIX_HLINKS;
                                            (*parser).state.UNIX.sub.hlinks =
                                                PL_UNIX_HLINKS_PRESPACE;
                                        }
                                    }
                                }
                            }
                            2271266030019697172 => {
                                match c as libc::c_int {
                                    45 => {
                                        (*finfo).filetype = CURLFILETYPE_FILE;
                                    }
                                    100 => {
                                        (*finfo).filetype = CURLFILETYPE_DIRECTORY;
                                    }
                                    108 => {
                                        (*finfo).filetype = CURLFILETYPE_SYMLINK;
                                    }
                                    112 => {
                                        (*finfo).filetype = CURLFILETYPE_NAMEDPIPE;
                                    }
                                    115 => {
                                        (*finfo).filetype = CURLFILETYPE_SOCKET;
                                    }
                                    99 => {
                                        (*finfo).filetype = CURLFILETYPE_DEVICE_CHAR;
                                    }
                                    98 => {
                                        (*finfo).filetype = CURLFILETYPE_DEVICE_BLOCK;
                                    }
                                    68 => {
                                        (*finfo).filetype = CURLFILETYPE_DOOR;
                                    }
                                    _ => {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                }
                                (*parser).state.UNIX.main = PL_UNIX_PERMISSION;
                                (*parser).item_length = 0 as libc::c_int as libc::c_uint;
                                (*parser).item_offset = 1 as libc::c_int as size_t;
                            }
                            11239732194576282906 => {
                                match (*parser).state.UNIX.sub.total_dirsize as libc::c_uint {
                                    0 => {
                                        current_block = 5868443211042008994;
                                        match current_block {
                                            5868443211042008994 => {
                                                if c as libc::c_int == 't' as i32 {
                                                    (*parser).state.UNIX.sub.total_dirsize =
                                                        PL_UNIX_TOTALSIZE_READING;
                                                    let ref mut fresh14 = (*parser).item_length;
                                                    *fresh14 = (*fresh14).wrapping_add(1);
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    (*finfo).b_used = 0 as libc::c_int as size_t;
                                                    continue;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh15 = (*parser).item_length;
                                                *fresh15 = (*fresh15).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    let ref mut fresh16 = (*parser).item_length;
                                                    *fresh16 = (*fresh16).wrapping_sub(1);
                                                    let ref mut fresh17 = (*finfo).b_used;
                                                    *fresh17 = (*fresh17).wrapping_sub(1);
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_length).wrapping_sub(
                                                            1 as libc::c_int as libc::c_uint,
                                                        )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strncmp(
                                                        b"total \0" as *const u8
                                                            as *const libc::c_char,
                                                        (*finfo).b_data,
                                                        6 as libc::c_int as libc::c_ulong,
                                                    ) == 0 as libc::c_int
                                                    {
                                                        let mut endptr: *mut libc::c_char =
                                                            ((*finfo).b_data)
                                                                .offset(6 as libc::c_int as isize);
                                                        while Curl_isspace(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        while Curl_isdigit(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        if *endptr != 0 {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*parser).state.UNIX.main =
                                                                PL_UNIX_FILETYPE;
                                                            (*finfo).b_used =
                                                                0 as libc::c_int as size_t;
                                                        }
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 12794766220424740645;
                                        match current_block {
                                            5868443211042008994 => {
                                                if c as libc::c_int == 't' as i32 {
                                                    (*parser).state.UNIX.sub.total_dirsize =
                                                        PL_UNIX_TOTALSIZE_READING;
                                                    let ref mut fresh14 = (*parser).item_length;
                                                    *fresh14 = (*fresh14).wrapping_add(1);
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    (*finfo).b_used = 0 as libc::c_int as size_t;
                                                    continue;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh15 = (*parser).item_length;
                                                *fresh15 = (*fresh15).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    let ref mut fresh16 = (*parser).item_length;
                                                    *fresh16 = (*fresh16).wrapping_sub(1);
                                                    let ref mut fresh17 = (*finfo).b_used;
                                                    *fresh17 = (*fresh17).wrapping_sub(1);
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_length).wrapping_sub(
                                                            1 as libc::c_int as libc::c_uint,
                                                        )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strncmp(
                                                        b"total \0" as *const u8
                                                            as *const libc::c_char,
                                                        (*finfo).b_data,
                                                        6 as libc::c_int as libc::c_ulong,
                                                    ) == 0 as libc::c_int
                                                    {
                                                        let mut endptr: *mut libc::c_char =
                                                            ((*finfo).b_data)
                                                                .offset(6 as libc::c_int as isize);
                                                        while Curl_isspace(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        while Curl_isdigit(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        if *endptr != 0 {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*parser).state.UNIX.main =
                                                                PL_UNIX_FILETYPE;
                                                            (*finfo).b_used =
                                                                0 as libc::c_int as size_t;
                                                        }
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            12711409943779506440 => {
                                match (*parser).state.UNIX.sub.user as libc::c_uint {
                                    0 => {
                                        if c as libc::c_int != ' ' as i32 {
                                            (*parser).item_offset = ((*finfo).b_used)
                                                .wrapping_sub(1 as libc::c_int as libc::c_ulong);
                                            (*parser).item_length =
                                                1 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.sub.user = PL_UNIX_USER_PARSING;
                                        }
                                    }
                                    1 => {
                                        let ref mut fresh20 = (*parser).item_length;
                                        *fresh20 = (*fresh20).wrapping_add(1);
                                        if c as libc::c_int == ' ' as i32 {
                                            *((*finfo).b_data).offset(
                                                ((*parser).item_offset)
                                                    .wrapping_add(
                                                        (*parser).item_length as libc::c_ulong,
                                                    )
                                                    .wrapping_sub(1 as libc::c_int as libc::c_ulong)
                                                    as isize,
                                            ) = 0 as libc::c_int as libc::c_char;
                                            (*parser).offsets.user = (*parser).item_offset;
                                            (*parser).state.UNIX.main = PL_UNIX_GROUP;
                                            (*parser).state.UNIX.sub.group = PL_UNIX_GROUP_PRESPACE;
                                            (*parser).item_offset = 0 as libc::c_int as size_t;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            _ => match (*parser).state.UNIX.sub.symlink as libc::c_uint {
                                0 => {
                                    current_block = 3947153213232826515;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                1 => {
                                    current_block = 1776290020351736984;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                2 => {
                                    current_block = 14587494051267926558;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                3 => {
                                    current_block = 5402613236608857871;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                4 => {
                                    current_block = 5209973316514186056;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                5 => {
                                    current_block = 3527484645425325286;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                6 => {
                                    current_block = 3075363095485550289;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                7 => {
                                    current_block = 13258967356842108374;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            },
                        }
                    }
                    2 => {
                        current_block = 2548585907665248015;
                        match current_block {
                            288150091726216379 => {
                                match (*parser).state.UNIX.sub.group as libc::c_uint {
                                    0 => {
                                        if c as libc::c_int != ' ' as i32 {
                                            (*parser).item_offset = ((*finfo).b_used)
                                                .wrapping_sub(1 as libc::c_int as libc::c_ulong);
                                            (*parser).item_length =
                                                1 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.sub.group = PL_UNIX_GROUP_NAME;
                                        }
                                    }
                                    1 => {
                                        let ref mut fresh21 = (*parser).item_length;
                                        *fresh21 = (*fresh21).wrapping_add(1);
                                        if c as libc::c_int == ' ' as i32 {
                                            *((*finfo).b_data).offset(
                                                ((*parser).item_offset)
                                                    .wrapping_add(
                                                        (*parser).item_length as libc::c_ulong,
                                                    )
                                                    .wrapping_sub(1 as libc::c_int as libc::c_ulong)
                                                    as isize,
                                            ) = 0 as libc::c_int as libc::c_char;
                                            (*parser).offsets.group = (*parser).item_offset;
                                            (*parser).state.UNIX.main = PL_UNIX_SIZE;
                                            (*parser).state.UNIX.sub.size = PL_UNIX_SIZE_PRESPACE;
                                            (*parser).item_offset = 0 as libc::c_int as size_t;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            12111627280334626048 => {
                                match (*parser).state.UNIX.sub.filename as libc::c_uint {
                                    0 => {
                                        current_block = 6301913710463012629;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 12570238925790259019;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    2 => {
                                        current_block = 12020001026448635048;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            2243364724898231629 => {
                                match (*parser).state.UNIX.sub.time as libc::c_uint {
                                    0 => {
                                        current_block = 8919528876833742864;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 13466321749914267966;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    2 => {
                                        current_block = 13902027429569464800;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    3 => {
                                        current_block = 964279874659303037;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    4 => {
                                        current_block = 8274961190783774511;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    5 => {
                                        current_block = 14633142221952416065;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            15714839002739240143 => {
                                match (*parser).state.UNIX.sub.size as libc::c_uint {
                                    0 => {
                                        current_block = 9897063314188657484;
                                        match current_block {
                                            9897063314188657484 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.size =
                                                            PL_UNIX_SIZE_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh22 = (*parser).item_length;
                                                *fresh22 = (*fresh22).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p_0: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut fsize: curl_off_t = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if curlx_strtoofft(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p_0,
                                                        10 as libc::c_int,
                                                        &mut fsize,
                                                    )
                                                        as u64
                                                        == 0
                                                    {
                                                        if *p_0.offset(0 as libc::c_int as isize)
                                                            as libc::c_int
                                                            == '\0' as i32
                                                            && fsize
                                                                != 0x7fffffffffffffff
                                                                    as libc::c_long
                                                            && fsize
                                                                != -(0x7fffffffffffffff
                                                                    as libc::c_long)
                                                                    - 1 as libc::c_long
                                                        {
                                                            (*(*parser).file_data).info.flags |= ((1
                                                                as libc::c_int)
                                                                << 6 as libc::c_int)
                                                                as libc::c_uint;
                                                            (*(*parser).file_data).info.size =
                                                                fsize;
                                                        }
                                                        (*parser).item_length =
                                                            0 as libc::c_int as libc::c_uint;
                                                        (*parser).item_offset =
                                                            0 as libc::c_int as size_t;
                                                        (*parser).state.UNIX.main = PL_UNIX_TIME;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PREPART1;
                                                    }
                                                } else if Curl_isdigit(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 4620427382343268962;
                                        match current_block {
                                            9897063314188657484 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.size =
                                                            PL_UNIX_SIZE_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh22 = (*parser).item_length;
                                                *fresh22 = (*fresh22).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p_0: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut fsize: curl_off_t = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if curlx_strtoofft(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p_0,
                                                        10 as libc::c_int,
                                                        &mut fsize,
                                                    )
                                                        as u64
                                                        == 0
                                                    {
                                                        if *p_0.offset(0 as libc::c_int as isize)
                                                            as libc::c_int
                                                            == '\0' as i32
                                                            && fsize
                                                                != 0x7fffffffffffffff
                                                                    as libc::c_long
                                                            && fsize
                                                                != -(0x7fffffffffffffff
                                                                    as libc::c_long)
                                                                    - 1 as libc::c_long
                                                        {
                                                            (*(*parser).file_data).info.flags |= ((1
                                                                as libc::c_int)
                                                                << 6 as libc::c_int)
                                                                as libc::c_uint;
                                                            (*(*parser).file_data).info.size =
                                                                fsize;
                                                        }
                                                        (*parser).item_length =
                                                            0 as libc::c_int as libc::c_uint;
                                                        (*parser).item_offset =
                                                            0 as libc::c_int as size_t;
                                                        (*parser).state.UNIX.main = PL_UNIX_TIME;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PREPART1;
                                                    }
                                                } else if Curl_isdigit(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            8922133629962145824 => {
                                match (*parser).state.UNIX.sub.hlinks as libc::c_uint {
                                    0 => {
                                        current_block = 1051223101710680835;
                                        match current_block {
                                            1051223101710680835 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.hlinks =
                                                            PL_UNIX_HLINKS_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh19 = (*parser).item_length;
                                                *fresh19 = (*fresh19).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut hlinks: libc::c_long = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    hlinks = strtol(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p,
                                                        10 as libc::c_int,
                                                    );
                                                    if *p.offset(0 as libc::c_int as isize)
                                                        as libc::c_int
                                                        == '\0' as i32
                                                        && hlinks
                                                            != 9223372036854775807 as libc::c_long
                                                        && hlinks
                                                            != -(9223372036854775807
                                                                as libc::c_long)
                                                                - 1 as libc::c_long
                                                    {
                                                        (*(*parser).file_data).info.flags |= ((1
                                                            as libc::c_int)
                                                            << 7 as libc::c_int)
                                                            as libc::c_uint;
                                                        (*(*parser).file_data).info.hardlinks =
                                                            hlinks;
                                                    }
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).item_offset =
                                                        0 as libc::c_int as size_t;
                                                    (*parser).state.UNIX.main = PL_UNIX_USER;
                                                    (*parser).state.UNIX.sub.user =
                                                        PL_UNIX_USER_PRESPACE;
                                                } else if (c as libc::c_int) < '0' as i32
                                                    || c as libc::c_int > '9' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 11000365710145520394;
                                        match current_block {
                                            1051223101710680835 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.hlinks =
                                                            PL_UNIX_HLINKS_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh19 = (*parser).item_length;
                                                *fresh19 = (*fresh19).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut hlinks: libc::c_long = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    hlinks = strtol(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p,
                                                        10 as libc::c_int,
                                                    );
                                                    if *p.offset(0 as libc::c_int as isize)
                                                        as libc::c_int
                                                        == '\0' as i32
                                                        && hlinks
                                                            != 9223372036854775807 as libc::c_long
                                                        && hlinks
                                                            != -(9223372036854775807
                                                                as libc::c_long)
                                                                - 1 as libc::c_long
                                                    {
                                                        (*(*parser).file_data).info.flags |= ((1
                                                            as libc::c_int)
                                                            << 7 as libc::c_int)
                                                            as libc::c_uint;
                                                        (*(*parser).file_data).info.hardlinks =
                                                            hlinks;
                                                    }
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).item_offset =
                                                        0 as libc::c_int as size_t;
                                                    (*parser).state.UNIX.main = PL_UNIX_USER;
                                                    (*parser).state.UNIX.sub.user =
                                                        PL_UNIX_USER_PRESPACE;
                                                } else if (c as libc::c_int) < '0' as i32
                                                    || c as libc::c_int > '9' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            2548585907665248015 => {
                                let ref mut fresh18 = (*parser).item_length;
                                *fresh18 = (*fresh18).wrapping_add(1);
                                if (*parser).item_length <= 9 as libc::c_int as libc::c_uint {
                                    if (strchr(
                                        b"rwx-tTsS\0" as *const u8 as *const libc::c_char,
                                        c as libc::c_int,
                                    ))
                                    .is_null()
                                    {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                } else if (*parser).item_length == 10 as libc::c_int as libc::c_uint
                                {
                                    let mut perm: libc::c_uint = 0;
                                    if c as libc::c_int != ' ' as i32 {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    } else {
                                        *((*finfo).b_data).offset(10 as libc::c_int as isize) =
                                            0 as libc::c_int as libc::c_char;
                                        perm = ftp_pl_get_permission(
                                            ((*finfo).b_data)
                                                .offset((*parser).item_offset as isize),
                                        )
                                            as libc::c_uint;
                                        if perm & 0x1000000 as libc::c_int as libc::c_uint != 0 {
                                            (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                            current_block = 3906270568117527278;
                                            break;
                                        } else {
                                            (*(*parser).file_data).info.flags |=
                                                ((1 as libc::c_int) << 3 as libc::c_int)
                                                    as libc::c_uint;
                                            (*(*parser).file_data).info.perm = perm;
                                            (*parser).offsets.perm = (*parser).item_offset;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.main = PL_UNIX_HLINKS;
                                            (*parser).state.UNIX.sub.hlinks =
                                                PL_UNIX_HLINKS_PRESPACE;
                                        }
                                    }
                                }
                            }
                            2271266030019697172 => {
                                match c as libc::c_int {
                                    45 => {
                                        (*finfo).filetype = CURLFILETYPE_FILE;
                                    }
                                    100 => {
                                        (*finfo).filetype = CURLFILETYPE_DIRECTORY;
                                    }
                                    108 => {
                                        (*finfo).filetype = CURLFILETYPE_SYMLINK;
                                    }
                                    112 => {
                                        (*finfo).filetype = CURLFILETYPE_NAMEDPIPE;
                                    }
                                    115 => {
                                        (*finfo).filetype = CURLFILETYPE_SOCKET;
                                    }
                                    99 => {
                                        (*finfo).filetype = CURLFILETYPE_DEVICE_CHAR;
                                    }
                                    98 => {
                                        (*finfo).filetype = CURLFILETYPE_DEVICE_BLOCK;
                                    }
                                    68 => {
                                        (*finfo).filetype = CURLFILETYPE_DOOR;
                                    }
                                    _ => {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                }
                                (*parser).state.UNIX.main = PL_UNIX_PERMISSION;
                                (*parser).item_length = 0 as libc::c_int as libc::c_uint;
                                (*parser).item_offset = 1 as libc::c_int as size_t;
                            }
                            11239732194576282906 => {
                                match (*parser).state.UNIX.sub.total_dirsize as libc::c_uint {
                                    0 => {
                                        current_block = 5868443211042008994;
                                        match current_block {
                                            5868443211042008994 => {
                                                if c as libc::c_int == 't' as i32 {
                                                    (*parser).state.UNIX.sub.total_dirsize =
                                                        PL_UNIX_TOTALSIZE_READING;
                                                    let ref mut fresh14 = (*parser).item_length;
                                                    *fresh14 = (*fresh14).wrapping_add(1);
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    (*finfo).b_used = 0 as libc::c_int as size_t;
                                                    continue;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh15 = (*parser).item_length;
                                                *fresh15 = (*fresh15).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    let ref mut fresh16 = (*parser).item_length;
                                                    *fresh16 = (*fresh16).wrapping_sub(1);
                                                    let ref mut fresh17 = (*finfo).b_used;
                                                    *fresh17 = (*fresh17).wrapping_sub(1);
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_length).wrapping_sub(
                                                            1 as libc::c_int as libc::c_uint,
                                                        )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strncmp(
                                                        b"total \0" as *const u8
                                                            as *const libc::c_char,
                                                        (*finfo).b_data,
                                                        6 as libc::c_int as libc::c_ulong,
                                                    ) == 0 as libc::c_int
                                                    {
                                                        let mut endptr: *mut libc::c_char =
                                                            ((*finfo).b_data)
                                                                .offset(6 as libc::c_int as isize);
                                                        while Curl_isspace(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        while Curl_isdigit(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        if *endptr != 0 {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*parser).state.UNIX.main =
                                                                PL_UNIX_FILETYPE;
                                                            (*finfo).b_used =
                                                                0 as libc::c_int as size_t;
                                                        }
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 12794766220424740645;
                                        match current_block {
                                            5868443211042008994 => {
                                                if c as libc::c_int == 't' as i32 {
                                                    (*parser).state.UNIX.sub.total_dirsize =
                                                        PL_UNIX_TOTALSIZE_READING;
                                                    let ref mut fresh14 = (*parser).item_length;
                                                    *fresh14 = (*fresh14).wrapping_add(1);
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    (*finfo).b_used = 0 as libc::c_int as size_t;
                                                    continue;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh15 = (*parser).item_length;
                                                *fresh15 = (*fresh15).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    let ref mut fresh16 = (*parser).item_length;
                                                    *fresh16 = (*fresh16).wrapping_sub(1);
                                                    let ref mut fresh17 = (*finfo).b_used;
                                                    *fresh17 = (*fresh17).wrapping_sub(1);
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_length).wrapping_sub(
                                                            1 as libc::c_int as libc::c_uint,
                                                        )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strncmp(
                                                        b"total \0" as *const u8
                                                            as *const libc::c_char,
                                                        (*finfo).b_data,
                                                        6 as libc::c_int as libc::c_ulong,
                                                    ) == 0 as libc::c_int
                                                    {
                                                        let mut endptr: *mut libc::c_char =
                                                            ((*finfo).b_data)
                                                                .offset(6 as libc::c_int as isize);
                                                        while Curl_isspace(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        while Curl_isdigit(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        if *endptr != 0 {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*parser).state.UNIX.main =
                                                                PL_UNIX_FILETYPE;
                                                            (*finfo).b_used =
                                                                0 as libc::c_int as size_t;
                                                        }
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            12711409943779506440 => {
                                match (*parser).state.UNIX.sub.user as libc::c_uint {
                                    0 => {
                                        if c as libc::c_int != ' ' as i32 {
                                            (*parser).item_offset = ((*finfo).b_used)
                                                .wrapping_sub(1 as libc::c_int as libc::c_ulong);
                                            (*parser).item_length =
                                                1 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.sub.user = PL_UNIX_USER_PARSING;
                                        }
                                    }
                                    1 => {
                                        let ref mut fresh20 = (*parser).item_length;
                                        *fresh20 = (*fresh20).wrapping_add(1);
                                        if c as libc::c_int == ' ' as i32 {
                                            *((*finfo).b_data).offset(
                                                ((*parser).item_offset)
                                                    .wrapping_add(
                                                        (*parser).item_length as libc::c_ulong,
                                                    )
                                                    .wrapping_sub(1 as libc::c_int as libc::c_ulong)
                                                    as isize,
                                            ) = 0 as libc::c_int as libc::c_char;
                                            (*parser).offsets.user = (*parser).item_offset;
                                            (*parser).state.UNIX.main = PL_UNIX_GROUP;
                                            (*parser).state.UNIX.sub.group = PL_UNIX_GROUP_PRESPACE;
                                            (*parser).item_offset = 0 as libc::c_int as size_t;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            _ => match (*parser).state.UNIX.sub.symlink as libc::c_uint {
                                0 => {
                                    current_block = 3947153213232826515;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                1 => {
                                    current_block = 1776290020351736984;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                2 => {
                                    current_block = 14587494051267926558;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                3 => {
                                    current_block = 5402613236608857871;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                4 => {
                                    current_block = 5209973316514186056;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                5 => {
                                    current_block = 3527484645425325286;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                6 => {
                                    current_block = 3075363095485550289;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                7 => {
                                    current_block = 13258967356842108374;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            },
                        }
                    }
                    3 => {
                        current_block = 8922133629962145824;
                        match current_block {
                            288150091726216379 => {
                                match (*parser).state.UNIX.sub.group as libc::c_uint {
                                    0 => {
                                        if c as libc::c_int != ' ' as i32 {
                                            (*parser).item_offset = ((*finfo).b_used)
                                                .wrapping_sub(1 as libc::c_int as libc::c_ulong);
                                            (*parser).item_length =
                                                1 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.sub.group = PL_UNIX_GROUP_NAME;
                                        }
                                    }
                                    1 => {
                                        let ref mut fresh21 = (*parser).item_length;
                                        *fresh21 = (*fresh21).wrapping_add(1);
                                        if c as libc::c_int == ' ' as i32 {
                                            *((*finfo).b_data).offset(
                                                ((*parser).item_offset)
                                                    .wrapping_add(
                                                        (*parser).item_length as libc::c_ulong,
                                                    )
                                                    .wrapping_sub(1 as libc::c_int as libc::c_ulong)
                                                    as isize,
                                            ) = 0 as libc::c_int as libc::c_char;
                                            (*parser).offsets.group = (*parser).item_offset;
                                            (*parser).state.UNIX.main = PL_UNIX_SIZE;
                                            (*parser).state.UNIX.sub.size = PL_UNIX_SIZE_PRESPACE;
                                            (*parser).item_offset = 0 as libc::c_int as size_t;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            12111627280334626048 => {
                                match (*parser).state.UNIX.sub.filename as libc::c_uint {
                                    0 => {
                                        current_block = 6301913710463012629;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 12570238925790259019;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    2 => {
                                        current_block = 12020001026448635048;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            2243364724898231629 => {
                                match (*parser).state.UNIX.sub.time as libc::c_uint {
                                    0 => {
                                        current_block = 8919528876833742864;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 13466321749914267966;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    2 => {
                                        current_block = 13902027429569464800;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    3 => {
                                        current_block = 964279874659303037;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    4 => {
                                        current_block = 8274961190783774511;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    5 => {
                                        current_block = 14633142221952416065;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            15714839002739240143 => {
                                match (*parser).state.UNIX.sub.size as libc::c_uint {
                                    0 => {
                                        current_block = 9897063314188657484;
                                        match current_block {
                                            9897063314188657484 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.size =
                                                            PL_UNIX_SIZE_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh22 = (*parser).item_length;
                                                *fresh22 = (*fresh22).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p_0: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut fsize: curl_off_t = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if curlx_strtoofft(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p_0,
                                                        10 as libc::c_int,
                                                        &mut fsize,
                                                    )
                                                        as u64
                                                        == 0
                                                    {
                                                        if *p_0.offset(0 as libc::c_int as isize)
                                                            as libc::c_int
                                                            == '\0' as i32
                                                            && fsize
                                                                != 0x7fffffffffffffff
                                                                    as libc::c_long
                                                            && fsize
                                                                != -(0x7fffffffffffffff
                                                                    as libc::c_long)
                                                                    - 1 as libc::c_long
                                                        {
                                                            (*(*parser).file_data).info.flags |= ((1
                                                                as libc::c_int)
                                                                << 6 as libc::c_int)
                                                                as libc::c_uint;
                                                            (*(*parser).file_data).info.size =
                                                                fsize;
                                                        }
                                                        (*parser).item_length =
                                                            0 as libc::c_int as libc::c_uint;
                                                        (*parser).item_offset =
                                                            0 as libc::c_int as size_t;
                                                        (*parser).state.UNIX.main = PL_UNIX_TIME;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PREPART1;
                                                    }
                                                } else if Curl_isdigit(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 4620427382343268962;
                                        match current_block {
                                            9897063314188657484 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.size =
                                                            PL_UNIX_SIZE_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh22 = (*parser).item_length;
                                                *fresh22 = (*fresh22).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p_0: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut fsize: curl_off_t = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if curlx_strtoofft(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p_0,
                                                        10 as libc::c_int,
                                                        &mut fsize,
                                                    )
                                                        as u64
                                                        == 0
                                                    {
                                                        if *p_0.offset(0 as libc::c_int as isize)
                                                            as libc::c_int
                                                            == '\0' as i32
                                                            && fsize
                                                                != 0x7fffffffffffffff
                                                                    as libc::c_long
                                                            && fsize
                                                                != -(0x7fffffffffffffff
                                                                    as libc::c_long)
                                                                    - 1 as libc::c_long
                                                        {
                                                            (*(*parser).file_data).info.flags |= ((1
                                                                as libc::c_int)
                                                                << 6 as libc::c_int)
                                                                as libc::c_uint;
                                                            (*(*parser).file_data).info.size =
                                                                fsize;
                                                        }
                                                        (*parser).item_length =
                                                            0 as libc::c_int as libc::c_uint;
                                                        (*parser).item_offset =
                                                            0 as libc::c_int as size_t;
                                                        (*parser).state.UNIX.main = PL_UNIX_TIME;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PREPART1;
                                                    }
                                                } else if Curl_isdigit(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            8922133629962145824 => {
                                match (*parser).state.UNIX.sub.hlinks as libc::c_uint {
                                    0 => {
                                        current_block = 1051223101710680835;
                                        match current_block {
                                            1051223101710680835 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.hlinks =
                                                            PL_UNIX_HLINKS_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh19 = (*parser).item_length;
                                                *fresh19 = (*fresh19).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut hlinks: libc::c_long = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    hlinks = strtol(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p,
                                                        10 as libc::c_int,
                                                    );
                                                    if *p.offset(0 as libc::c_int as isize)
                                                        as libc::c_int
                                                        == '\0' as i32
                                                        && hlinks
                                                            != 9223372036854775807 as libc::c_long
                                                        && hlinks
                                                            != -(9223372036854775807
                                                                as libc::c_long)
                                                                - 1 as libc::c_long
                                                    {
                                                        (*(*parser).file_data).info.flags |= ((1
                                                            as libc::c_int)
                                                            << 7 as libc::c_int)
                                                            as libc::c_uint;
                                                        (*(*parser).file_data).info.hardlinks =
                                                            hlinks;
                                                    }
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).item_offset =
                                                        0 as libc::c_int as size_t;
                                                    (*parser).state.UNIX.main = PL_UNIX_USER;
                                                    (*parser).state.UNIX.sub.user =
                                                        PL_UNIX_USER_PRESPACE;
                                                } else if (c as libc::c_int) < '0' as i32
                                                    || c as libc::c_int > '9' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 11000365710145520394;
                                        match current_block {
                                            1051223101710680835 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.hlinks =
                                                            PL_UNIX_HLINKS_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh19 = (*parser).item_length;
                                                *fresh19 = (*fresh19).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut hlinks: libc::c_long = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    hlinks = strtol(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p,
                                                        10 as libc::c_int,
                                                    );
                                                    if *p.offset(0 as libc::c_int as isize)
                                                        as libc::c_int
                                                        == '\0' as i32
                                                        && hlinks
                                                            != 9223372036854775807 as libc::c_long
                                                        && hlinks
                                                            != -(9223372036854775807
                                                                as libc::c_long)
                                                                - 1 as libc::c_long
                                                    {
                                                        (*(*parser).file_data).info.flags |= ((1
                                                            as libc::c_int)
                                                            << 7 as libc::c_int)
                                                            as libc::c_uint;
                                                        (*(*parser).file_data).info.hardlinks =
                                                            hlinks;
                                                    }
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).item_offset =
                                                        0 as libc::c_int as size_t;
                                                    (*parser).state.UNIX.main = PL_UNIX_USER;
                                                    (*parser).state.UNIX.sub.user =
                                                        PL_UNIX_USER_PRESPACE;
                                                } else if (c as libc::c_int) < '0' as i32
                                                    || c as libc::c_int > '9' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            2548585907665248015 => {
                                let ref mut fresh18 = (*parser).item_length;
                                *fresh18 = (*fresh18).wrapping_add(1);
                                if (*parser).item_length <= 9 as libc::c_int as libc::c_uint {
                                    if (strchr(
                                        b"rwx-tTsS\0" as *const u8 as *const libc::c_char,
                                        c as libc::c_int,
                                    ))
                                    .is_null()
                                    {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                } else if (*parser).item_length == 10 as libc::c_int as libc::c_uint
                                {
                                    let mut perm: libc::c_uint = 0;
                                    if c as libc::c_int != ' ' as i32 {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    } else {
                                        *((*finfo).b_data).offset(10 as libc::c_int as isize) =
                                            0 as libc::c_int as libc::c_char;
                                        perm = ftp_pl_get_permission(
                                            ((*finfo).b_data)
                                                .offset((*parser).item_offset as isize),
                                        )
                                            as libc::c_uint;
                                        if perm & 0x1000000 as libc::c_int as libc::c_uint != 0 {
                                            (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                            current_block = 3906270568117527278;
                                            break;
                                        } else {
                                            (*(*parser).file_data).info.flags |=
                                                ((1 as libc::c_int) << 3 as libc::c_int)
                                                    as libc::c_uint;
                                            (*(*parser).file_data).info.perm = perm;
                                            (*parser).offsets.perm = (*parser).item_offset;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.main = PL_UNIX_HLINKS;
                                            (*parser).state.UNIX.sub.hlinks =
                                                PL_UNIX_HLINKS_PRESPACE;
                                        }
                                    }
                                }
                            }
                            2271266030019697172 => {
                                match c as libc::c_int {
                                    45 => {
                                        (*finfo).filetype = CURLFILETYPE_FILE;
                                    }
                                    100 => {
                                        (*finfo).filetype = CURLFILETYPE_DIRECTORY;
                                    }
                                    108 => {
                                        (*finfo).filetype = CURLFILETYPE_SYMLINK;
                                    }
                                    112 => {
                                        (*finfo).filetype = CURLFILETYPE_NAMEDPIPE;
                                    }
                                    115 => {
                                        (*finfo).filetype = CURLFILETYPE_SOCKET;
                                    }
                                    99 => {
                                        (*finfo).filetype = CURLFILETYPE_DEVICE_CHAR;
                                    }
                                    98 => {
                                        (*finfo).filetype = CURLFILETYPE_DEVICE_BLOCK;
                                    }
                                    68 => {
                                        (*finfo).filetype = CURLFILETYPE_DOOR;
                                    }
                                    _ => {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                }
                                (*parser).state.UNIX.main = PL_UNIX_PERMISSION;
                                (*parser).item_length = 0 as libc::c_int as libc::c_uint;
                                (*parser).item_offset = 1 as libc::c_int as size_t;
                            }
                            11239732194576282906 => {
                                match (*parser).state.UNIX.sub.total_dirsize as libc::c_uint {
                                    0 => {
                                        current_block = 5868443211042008994;
                                        match current_block {
                                            5868443211042008994 => {
                                                if c as libc::c_int == 't' as i32 {
                                                    (*parser).state.UNIX.sub.total_dirsize =
                                                        PL_UNIX_TOTALSIZE_READING;
                                                    let ref mut fresh14 = (*parser).item_length;
                                                    *fresh14 = (*fresh14).wrapping_add(1);
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    (*finfo).b_used = 0 as libc::c_int as size_t;
                                                    continue;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh15 = (*parser).item_length;
                                                *fresh15 = (*fresh15).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    let ref mut fresh16 = (*parser).item_length;
                                                    *fresh16 = (*fresh16).wrapping_sub(1);
                                                    let ref mut fresh17 = (*finfo).b_used;
                                                    *fresh17 = (*fresh17).wrapping_sub(1);
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_length).wrapping_sub(
                                                            1 as libc::c_int as libc::c_uint,
                                                        )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strncmp(
                                                        b"total \0" as *const u8
                                                            as *const libc::c_char,
                                                        (*finfo).b_data,
                                                        6 as libc::c_int as libc::c_ulong,
                                                    ) == 0 as libc::c_int
                                                    {
                                                        let mut endptr: *mut libc::c_char =
                                                            ((*finfo).b_data)
                                                                .offset(6 as libc::c_int as isize);
                                                        while Curl_isspace(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        while Curl_isdigit(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        if *endptr != 0 {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*parser).state.UNIX.main =
                                                                PL_UNIX_FILETYPE;
                                                            (*finfo).b_used =
                                                                0 as libc::c_int as size_t;
                                                        }
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 12794766220424740645;
                                        match current_block {
                                            5868443211042008994 => {
                                                if c as libc::c_int == 't' as i32 {
                                                    (*parser).state.UNIX.sub.total_dirsize =
                                                        PL_UNIX_TOTALSIZE_READING;
                                                    let ref mut fresh14 = (*parser).item_length;
                                                    *fresh14 = (*fresh14).wrapping_add(1);
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    (*finfo).b_used = 0 as libc::c_int as size_t;
                                                    continue;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh15 = (*parser).item_length;
                                                *fresh15 = (*fresh15).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    let ref mut fresh16 = (*parser).item_length;
                                                    *fresh16 = (*fresh16).wrapping_sub(1);
                                                    let ref mut fresh17 = (*finfo).b_used;
                                                    *fresh17 = (*fresh17).wrapping_sub(1);
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_length).wrapping_sub(
                                                            1 as libc::c_int as libc::c_uint,
                                                        )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strncmp(
                                                        b"total \0" as *const u8
                                                            as *const libc::c_char,
                                                        (*finfo).b_data,
                                                        6 as libc::c_int as libc::c_ulong,
                                                    ) == 0 as libc::c_int
                                                    {
                                                        let mut endptr: *mut libc::c_char =
                                                            ((*finfo).b_data)
                                                                .offset(6 as libc::c_int as isize);
                                                        while Curl_isspace(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        while Curl_isdigit(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        if *endptr != 0 {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*parser).state.UNIX.main =
                                                                PL_UNIX_FILETYPE;
                                                            (*finfo).b_used =
                                                                0 as libc::c_int as size_t;
                                                        }
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            12711409943779506440 => {
                                match (*parser).state.UNIX.sub.user as libc::c_uint {
                                    0 => {
                                        if c as libc::c_int != ' ' as i32 {
                                            (*parser).item_offset = ((*finfo).b_used)
                                                .wrapping_sub(1 as libc::c_int as libc::c_ulong);
                                            (*parser).item_length =
                                                1 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.sub.user = PL_UNIX_USER_PARSING;
                                        }
                                    }
                                    1 => {
                                        let ref mut fresh20 = (*parser).item_length;
                                        *fresh20 = (*fresh20).wrapping_add(1);
                                        if c as libc::c_int == ' ' as i32 {
                                            *((*finfo).b_data).offset(
                                                ((*parser).item_offset)
                                                    .wrapping_add(
                                                        (*parser).item_length as libc::c_ulong,
                                                    )
                                                    .wrapping_sub(1 as libc::c_int as libc::c_ulong)
                                                    as isize,
                                            ) = 0 as libc::c_int as libc::c_char;
                                            (*parser).offsets.user = (*parser).item_offset;
                                            (*parser).state.UNIX.main = PL_UNIX_GROUP;
                                            (*parser).state.UNIX.sub.group = PL_UNIX_GROUP_PRESPACE;
                                            (*parser).item_offset = 0 as libc::c_int as size_t;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            _ => match (*parser).state.UNIX.sub.symlink as libc::c_uint {
                                0 => {
                                    current_block = 3947153213232826515;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                1 => {
                                    current_block = 1776290020351736984;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                2 => {
                                    current_block = 14587494051267926558;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                3 => {
                                    current_block = 5402613236608857871;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                4 => {
                                    current_block = 5209973316514186056;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                5 => {
                                    current_block = 3527484645425325286;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                6 => {
                                    current_block = 3075363095485550289;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                7 => {
                                    current_block = 13258967356842108374;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            },
                        }
                    }
                    4 => {
                        current_block = 12711409943779506440;
                        match current_block {
                            288150091726216379 => {
                                match (*parser).state.UNIX.sub.group as libc::c_uint {
                                    0 => {
                                        if c as libc::c_int != ' ' as i32 {
                                            (*parser).item_offset = ((*finfo).b_used)
                                                .wrapping_sub(1 as libc::c_int as libc::c_ulong);
                                            (*parser).item_length =
                                                1 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.sub.group = PL_UNIX_GROUP_NAME;
                                        }
                                    }
                                    1 => {
                                        let ref mut fresh21 = (*parser).item_length;
                                        *fresh21 = (*fresh21).wrapping_add(1);
                                        if c as libc::c_int == ' ' as i32 {
                                            *((*finfo).b_data).offset(
                                                ((*parser).item_offset)
                                                    .wrapping_add(
                                                        (*parser).item_length as libc::c_ulong,
                                                    )
                                                    .wrapping_sub(1 as libc::c_int as libc::c_ulong)
                                                    as isize,
                                            ) = 0 as libc::c_int as libc::c_char;
                                            (*parser).offsets.group = (*parser).item_offset;
                                            (*parser).state.UNIX.main = PL_UNIX_SIZE;
                                            (*parser).state.UNIX.sub.size = PL_UNIX_SIZE_PRESPACE;
                                            (*parser).item_offset = 0 as libc::c_int as size_t;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            12111627280334626048 => {
                                match (*parser).state.UNIX.sub.filename as libc::c_uint {
                                    0 => {
                                        current_block = 6301913710463012629;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 12570238925790259019;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    2 => {
                                        current_block = 12020001026448635048;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            2243364724898231629 => {
                                match (*parser).state.UNIX.sub.time as libc::c_uint {
                                    0 => {
                                        current_block = 8919528876833742864;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 13466321749914267966;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    2 => {
                                        current_block = 13902027429569464800;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    3 => {
                                        current_block = 964279874659303037;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    4 => {
                                        current_block = 8274961190783774511;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    5 => {
                                        current_block = 14633142221952416065;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            15714839002739240143 => {
                                match (*parser).state.UNIX.sub.size as libc::c_uint {
                                    0 => {
                                        current_block = 9897063314188657484;
                                        match current_block {
                                            9897063314188657484 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.size =
                                                            PL_UNIX_SIZE_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh22 = (*parser).item_length;
                                                *fresh22 = (*fresh22).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p_0: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut fsize: curl_off_t = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if curlx_strtoofft(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p_0,
                                                        10 as libc::c_int,
                                                        &mut fsize,
                                                    )
                                                        as u64
                                                        == 0
                                                    {
                                                        if *p_0.offset(0 as libc::c_int as isize)
                                                            as libc::c_int
                                                            == '\0' as i32
                                                            && fsize
                                                                != 0x7fffffffffffffff
                                                                    as libc::c_long
                                                            && fsize
                                                                != -(0x7fffffffffffffff
                                                                    as libc::c_long)
                                                                    - 1 as libc::c_long
                                                        {
                                                            (*(*parser).file_data).info.flags |= ((1
                                                                as libc::c_int)
                                                                << 6 as libc::c_int)
                                                                as libc::c_uint;
                                                            (*(*parser).file_data).info.size =
                                                                fsize;
                                                        }
                                                        (*parser).item_length =
                                                            0 as libc::c_int as libc::c_uint;
                                                        (*parser).item_offset =
                                                            0 as libc::c_int as size_t;
                                                        (*parser).state.UNIX.main = PL_UNIX_TIME;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PREPART1;
                                                    }
                                                } else if Curl_isdigit(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 4620427382343268962;
                                        match current_block {
                                            9897063314188657484 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.size =
                                                            PL_UNIX_SIZE_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh22 = (*parser).item_length;
                                                *fresh22 = (*fresh22).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p_0: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut fsize: curl_off_t = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if curlx_strtoofft(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p_0,
                                                        10 as libc::c_int,
                                                        &mut fsize,
                                                    )
                                                        as u64
                                                        == 0
                                                    {
                                                        if *p_0.offset(0 as libc::c_int as isize)
                                                            as libc::c_int
                                                            == '\0' as i32
                                                            && fsize
                                                                != 0x7fffffffffffffff
                                                                    as libc::c_long
                                                            && fsize
                                                                != -(0x7fffffffffffffff
                                                                    as libc::c_long)
                                                                    - 1 as libc::c_long
                                                        {
                                                            (*(*parser).file_data).info.flags |= ((1
                                                                as libc::c_int)
                                                                << 6 as libc::c_int)
                                                                as libc::c_uint;
                                                            (*(*parser).file_data).info.size =
                                                                fsize;
                                                        }
                                                        (*parser).item_length =
                                                            0 as libc::c_int as libc::c_uint;
                                                        (*parser).item_offset =
                                                            0 as libc::c_int as size_t;
                                                        (*parser).state.UNIX.main = PL_UNIX_TIME;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PREPART1;
                                                    }
                                                } else if Curl_isdigit(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            8922133629962145824 => {
                                match (*parser).state.UNIX.sub.hlinks as libc::c_uint {
                                    0 => {
                                        current_block = 1051223101710680835;
                                        match current_block {
                                            1051223101710680835 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.hlinks =
                                                            PL_UNIX_HLINKS_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh19 = (*parser).item_length;
                                                *fresh19 = (*fresh19).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut hlinks: libc::c_long = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    hlinks = strtol(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p,
                                                        10 as libc::c_int,
                                                    );
                                                    if *p.offset(0 as libc::c_int as isize)
                                                        as libc::c_int
                                                        == '\0' as i32
                                                        && hlinks
                                                            != 9223372036854775807 as libc::c_long
                                                        && hlinks
                                                            != -(9223372036854775807
                                                                as libc::c_long)
                                                                - 1 as libc::c_long
                                                    {
                                                        (*(*parser).file_data).info.flags |= ((1
                                                            as libc::c_int)
                                                            << 7 as libc::c_int)
                                                            as libc::c_uint;
                                                        (*(*parser).file_data).info.hardlinks =
                                                            hlinks;
                                                    }
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).item_offset =
                                                        0 as libc::c_int as size_t;
                                                    (*parser).state.UNIX.main = PL_UNIX_USER;
                                                    (*parser).state.UNIX.sub.user =
                                                        PL_UNIX_USER_PRESPACE;
                                                } else if (c as libc::c_int) < '0' as i32
                                                    || c as libc::c_int > '9' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 11000365710145520394;
                                        match current_block {
                                            1051223101710680835 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.hlinks =
                                                            PL_UNIX_HLINKS_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh19 = (*parser).item_length;
                                                *fresh19 = (*fresh19).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut hlinks: libc::c_long = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    hlinks = strtol(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p,
                                                        10 as libc::c_int,
                                                    );
                                                    if *p.offset(0 as libc::c_int as isize)
                                                        as libc::c_int
                                                        == '\0' as i32
                                                        && hlinks
                                                            != 9223372036854775807 as libc::c_long
                                                        && hlinks
                                                            != -(9223372036854775807
                                                                as libc::c_long)
                                                                - 1 as libc::c_long
                                                    {
                                                        (*(*parser).file_data).info.flags |= ((1
                                                            as libc::c_int)
                                                            << 7 as libc::c_int)
                                                            as libc::c_uint;
                                                        (*(*parser).file_data).info.hardlinks =
                                                            hlinks;
                                                    }
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).item_offset =
                                                        0 as libc::c_int as size_t;
                                                    (*parser).state.UNIX.main = PL_UNIX_USER;
                                                    (*parser).state.UNIX.sub.user =
                                                        PL_UNIX_USER_PRESPACE;
                                                } else if (c as libc::c_int) < '0' as i32
                                                    || c as libc::c_int > '9' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            2548585907665248015 => {
                                let ref mut fresh18 = (*parser).item_length;
                                *fresh18 = (*fresh18).wrapping_add(1);
                                if (*parser).item_length <= 9 as libc::c_int as libc::c_uint {
                                    if (strchr(
                                        b"rwx-tTsS\0" as *const u8 as *const libc::c_char,
                                        c as libc::c_int,
                                    ))
                                    .is_null()
                                    {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                } else if (*parser).item_length == 10 as libc::c_int as libc::c_uint
                                {
                                    let mut perm: libc::c_uint = 0;
                                    if c as libc::c_int != ' ' as i32 {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    } else {
                                        *((*finfo).b_data).offset(10 as libc::c_int as isize) =
                                            0 as libc::c_int as libc::c_char;
                                        perm = ftp_pl_get_permission(
                                            ((*finfo).b_data)
                                                .offset((*parser).item_offset as isize),
                                        )
                                            as libc::c_uint;
                                        if perm & 0x1000000 as libc::c_int as libc::c_uint != 0 {
                                            (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                            current_block = 3906270568117527278;
                                            break;
                                        } else {
                                            (*(*parser).file_data).info.flags |=
                                                ((1 as libc::c_int) << 3 as libc::c_int)
                                                    as libc::c_uint;
                                            (*(*parser).file_data).info.perm = perm;
                                            (*parser).offsets.perm = (*parser).item_offset;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.main = PL_UNIX_HLINKS;
                                            (*parser).state.UNIX.sub.hlinks =
                                                PL_UNIX_HLINKS_PRESPACE;
                                        }
                                    }
                                }
                            }
                            2271266030019697172 => {
                                match c as libc::c_int {
                                    45 => {
                                        (*finfo).filetype = CURLFILETYPE_FILE;
                                    }
                                    100 => {
                                        (*finfo).filetype = CURLFILETYPE_DIRECTORY;
                                    }
                                    108 => {
                                        (*finfo).filetype = CURLFILETYPE_SYMLINK;
                                    }
                                    112 => {
                                        (*finfo).filetype = CURLFILETYPE_NAMEDPIPE;
                                    }
                                    115 => {
                                        (*finfo).filetype = CURLFILETYPE_SOCKET;
                                    }
                                    99 => {
                                        (*finfo).filetype = CURLFILETYPE_DEVICE_CHAR;
                                    }
                                    98 => {
                                        (*finfo).filetype = CURLFILETYPE_DEVICE_BLOCK;
                                    }
                                    68 => {
                                        (*finfo).filetype = CURLFILETYPE_DOOR;
                                    }
                                    _ => {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                }
                                (*parser).state.UNIX.main = PL_UNIX_PERMISSION;
                                (*parser).item_length = 0 as libc::c_int as libc::c_uint;
                                (*parser).item_offset = 1 as libc::c_int as size_t;
                            }
                            11239732194576282906 => {
                                match (*parser).state.UNIX.sub.total_dirsize as libc::c_uint {
                                    0 => {
                                        current_block = 5868443211042008994;
                                        match current_block {
                                            5868443211042008994 => {
                                                if c as libc::c_int == 't' as i32 {
                                                    (*parser).state.UNIX.sub.total_dirsize =
                                                        PL_UNIX_TOTALSIZE_READING;
                                                    let ref mut fresh14 = (*parser).item_length;
                                                    *fresh14 = (*fresh14).wrapping_add(1);
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    (*finfo).b_used = 0 as libc::c_int as size_t;
                                                    continue;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh15 = (*parser).item_length;
                                                *fresh15 = (*fresh15).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    let ref mut fresh16 = (*parser).item_length;
                                                    *fresh16 = (*fresh16).wrapping_sub(1);
                                                    let ref mut fresh17 = (*finfo).b_used;
                                                    *fresh17 = (*fresh17).wrapping_sub(1);
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_length).wrapping_sub(
                                                            1 as libc::c_int as libc::c_uint,
                                                        )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strncmp(
                                                        b"total \0" as *const u8
                                                            as *const libc::c_char,
                                                        (*finfo).b_data,
                                                        6 as libc::c_int as libc::c_ulong,
                                                    ) == 0 as libc::c_int
                                                    {
                                                        let mut endptr: *mut libc::c_char =
                                                            ((*finfo).b_data)
                                                                .offset(6 as libc::c_int as isize);
                                                        while Curl_isspace(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        while Curl_isdigit(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        if *endptr != 0 {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*parser).state.UNIX.main =
                                                                PL_UNIX_FILETYPE;
                                                            (*finfo).b_used =
                                                                0 as libc::c_int as size_t;
                                                        }
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 12794766220424740645;
                                        match current_block {
                                            5868443211042008994 => {
                                                if c as libc::c_int == 't' as i32 {
                                                    (*parser).state.UNIX.sub.total_dirsize =
                                                        PL_UNIX_TOTALSIZE_READING;
                                                    let ref mut fresh14 = (*parser).item_length;
                                                    *fresh14 = (*fresh14).wrapping_add(1);
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    (*finfo).b_used = 0 as libc::c_int as size_t;
                                                    continue;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh15 = (*parser).item_length;
                                                *fresh15 = (*fresh15).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    let ref mut fresh16 = (*parser).item_length;
                                                    *fresh16 = (*fresh16).wrapping_sub(1);
                                                    let ref mut fresh17 = (*finfo).b_used;
                                                    *fresh17 = (*fresh17).wrapping_sub(1);
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_length).wrapping_sub(
                                                            1 as libc::c_int as libc::c_uint,
                                                        )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strncmp(
                                                        b"total \0" as *const u8
                                                            as *const libc::c_char,
                                                        (*finfo).b_data,
                                                        6 as libc::c_int as libc::c_ulong,
                                                    ) == 0 as libc::c_int
                                                    {
                                                        let mut endptr: *mut libc::c_char =
                                                            ((*finfo).b_data)
                                                                .offset(6 as libc::c_int as isize);
                                                        while Curl_isspace(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        while Curl_isdigit(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        if *endptr != 0 {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*parser).state.UNIX.main =
                                                                PL_UNIX_FILETYPE;
                                                            (*finfo).b_used =
                                                                0 as libc::c_int as size_t;
                                                        }
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            12711409943779506440 => {
                                match (*parser).state.UNIX.sub.user as libc::c_uint {
                                    0 => {
                                        if c as libc::c_int != ' ' as i32 {
                                            (*parser).item_offset = ((*finfo).b_used)
                                                .wrapping_sub(1 as libc::c_int as libc::c_ulong);
                                            (*parser).item_length =
                                                1 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.sub.user = PL_UNIX_USER_PARSING;
                                        }
                                    }
                                    1 => {
                                        let ref mut fresh20 = (*parser).item_length;
                                        *fresh20 = (*fresh20).wrapping_add(1);
                                        if c as libc::c_int == ' ' as i32 {
                                            *((*finfo).b_data).offset(
                                                ((*parser).item_offset)
                                                    .wrapping_add(
                                                        (*parser).item_length as libc::c_ulong,
                                                    )
                                                    .wrapping_sub(1 as libc::c_int as libc::c_ulong)
                                                    as isize,
                                            ) = 0 as libc::c_int as libc::c_char;
                                            (*parser).offsets.user = (*parser).item_offset;
                                            (*parser).state.UNIX.main = PL_UNIX_GROUP;
                                            (*parser).state.UNIX.sub.group = PL_UNIX_GROUP_PRESPACE;
                                            (*parser).item_offset = 0 as libc::c_int as size_t;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            _ => match (*parser).state.UNIX.sub.symlink as libc::c_uint {
                                0 => {
                                    current_block = 3947153213232826515;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                1 => {
                                    current_block = 1776290020351736984;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                2 => {
                                    current_block = 14587494051267926558;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                3 => {
                                    current_block = 5402613236608857871;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                4 => {
                                    current_block = 5209973316514186056;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                5 => {
                                    current_block = 3527484645425325286;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                6 => {
                                    current_block = 3075363095485550289;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                7 => {
                                    current_block = 13258967356842108374;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            },
                        }
                    }
                    5 => {
                        current_block = 288150091726216379;
                        match current_block {
                            288150091726216379 => {
                                match (*parser).state.UNIX.sub.group as libc::c_uint {
                                    0 => {
                                        if c as libc::c_int != ' ' as i32 {
                                            (*parser).item_offset = ((*finfo).b_used)
                                                .wrapping_sub(1 as libc::c_int as libc::c_ulong);
                                            (*parser).item_length =
                                                1 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.sub.group = PL_UNIX_GROUP_NAME;
                                        }
                                    }
                                    1 => {
                                        let ref mut fresh21 = (*parser).item_length;
                                        *fresh21 = (*fresh21).wrapping_add(1);
                                        if c as libc::c_int == ' ' as i32 {
                                            *((*finfo).b_data).offset(
                                                ((*parser).item_offset)
                                                    .wrapping_add(
                                                        (*parser).item_length as libc::c_ulong,
                                                    )
                                                    .wrapping_sub(1 as libc::c_int as libc::c_ulong)
                                                    as isize,
                                            ) = 0 as libc::c_int as libc::c_char;
                                            (*parser).offsets.group = (*parser).item_offset;
                                            (*parser).state.UNIX.main = PL_UNIX_SIZE;
                                            (*parser).state.UNIX.sub.size = PL_UNIX_SIZE_PRESPACE;
                                            (*parser).item_offset = 0 as libc::c_int as size_t;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            12111627280334626048 => {
                                match (*parser).state.UNIX.sub.filename as libc::c_uint {
                                    0 => {
                                        current_block = 6301913710463012629;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 12570238925790259019;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    2 => {
                                        current_block = 12020001026448635048;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            2243364724898231629 => {
                                match (*parser).state.UNIX.sub.time as libc::c_uint {
                                    0 => {
                                        current_block = 8919528876833742864;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 13466321749914267966;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    2 => {
                                        current_block = 13902027429569464800;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    3 => {
                                        current_block = 964279874659303037;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    4 => {
                                        current_block = 8274961190783774511;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    5 => {
                                        current_block = 14633142221952416065;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            15714839002739240143 => {
                                match (*parser).state.UNIX.sub.size as libc::c_uint {
                                    0 => {
                                        current_block = 9897063314188657484;
                                        match current_block {
                                            9897063314188657484 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.size =
                                                            PL_UNIX_SIZE_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh22 = (*parser).item_length;
                                                *fresh22 = (*fresh22).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p_0: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut fsize: curl_off_t = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if curlx_strtoofft(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p_0,
                                                        10 as libc::c_int,
                                                        &mut fsize,
                                                    )
                                                        as u64
                                                        == 0
                                                    {
                                                        if *p_0.offset(0 as libc::c_int as isize)
                                                            as libc::c_int
                                                            == '\0' as i32
                                                            && fsize
                                                                != 0x7fffffffffffffff
                                                                    as libc::c_long
                                                            && fsize
                                                                != -(0x7fffffffffffffff
                                                                    as libc::c_long)
                                                                    - 1 as libc::c_long
                                                        {
                                                            (*(*parser).file_data).info.flags |= ((1
                                                                as libc::c_int)
                                                                << 6 as libc::c_int)
                                                                as libc::c_uint;
                                                            (*(*parser).file_data).info.size =
                                                                fsize;
                                                        }
                                                        (*parser).item_length =
                                                            0 as libc::c_int as libc::c_uint;
                                                        (*parser).item_offset =
                                                            0 as libc::c_int as size_t;
                                                        (*parser).state.UNIX.main = PL_UNIX_TIME;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PREPART1;
                                                    }
                                                } else if Curl_isdigit(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 4620427382343268962;
                                        match current_block {
                                            9897063314188657484 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.size =
                                                            PL_UNIX_SIZE_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh22 = (*parser).item_length;
                                                *fresh22 = (*fresh22).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p_0: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut fsize: curl_off_t = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if curlx_strtoofft(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p_0,
                                                        10 as libc::c_int,
                                                        &mut fsize,
                                                    )
                                                        as u64
                                                        == 0
                                                    {
                                                        if *p_0.offset(0 as libc::c_int as isize)
                                                            as libc::c_int
                                                            == '\0' as i32
                                                            && fsize
                                                                != 0x7fffffffffffffff
                                                                    as libc::c_long
                                                            && fsize
                                                                != -(0x7fffffffffffffff
                                                                    as libc::c_long)
                                                                    - 1 as libc::c_long
                                                        {
                                                            (*(*parser).file_data).info.flags |= ((1
                                                                as libc::c_int)
                                                                << 6 as libc::c_int)
                                                                as libc::c_uint;
                                                            (*(*parser).file_data).info.size =
                                                                fsize;
                                                        }
                                                        (*parser).item_length =
                                                            0 as libc::c_int as libc::c_uint;
                                                        (*parser).item_offset =
                                                            0 as libc::c_int as size_t;
                                                        (*parser).state.UNIX.main = PL_UNIX_TIME;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PREPART1;
                                                    }
                                                } else if Curl_isdigit(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            8922133629962145824 => {
                                match (*parser).state.UNIX.sub.hlinks as libc::c_uint {
                                    0 => {
                                        current_block = 1051223101710680835;
                                        match current_block {
                                            1051223101710680835 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.hlinks =
                                                            PL_UNIX_HLINKS_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh19 = (*parser).item_length;
                                                *fresh19 = (*fresh19).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut hlinks: libc::c_long = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    hlinks = strtol(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p,
                                                        10 as libc::c_int,
                                                    );
                                                    if *p.offset(0 as libc::c_int as isize)
                                                        as libc::c_int
                                                        == '\0' as i32
                                                        && hlinks
                                                            != 9223372036854775807 as libc::c_long
                                                        && hlinks
                                                            != -(9223372036854775807
                                                                as libc::c_long)
                                                                - 1 as libc::c_long
                                                    {
                                                        (*(*parser).file_data).info.flags |= ((1
                                                            as libc::c_int)
                                                            << 7 as libc::c_int)
                                                            as libc::c_uint;
                                                        (*(*parser).file_data).info.hardlinks =
                                                            hlinks;
                                                    }
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).item_offset =
                                                        0 as libc::c_int as size_t;
                                                    (*parser).state.UNIX.main = PL_UNIX_USER;
                                                    (*parser).state.UNIX.sub.user =
                                                        PL_UNIX_USER_PRESPACE;
                                                } else if (c as libc::c_int) < '0' as i32
                                                    || c as libc::c_int > '9' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 11000365710145520394;
                                        match current_block {
                                            1051223101710680835 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.hlinks =
                                                            PL_UNIX_HLINKS_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh19 = (*parser).item_length;
                                                *fresh19 = (*fresh19).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut hlinks: libc::c_long = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    hlinks = strtol(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p,
                                                        10 as libc::c_int,
                                                    );
                                                    if *p.offset(0 as libc::c_int as isize)
                                                        as libc::c_int
                                                        == '\0' as i32
                                                        && hlinks
                                                            != 9223372036854775807 as libc::c_long
                                                        && hlinks
                                                            != -(9223372036854775807
                                                                as libc::c_long)
                                                                - 1 as libc::c_long
                                                    {
                                                        (*(*parser).file_data).info.flags |= ((1
                                                            as libc::c_int)
                                                            << 7 as libc::c_int)
                                                            as libc::c_uint;
                                                        (*(*parser).file_data).info.hardlinks =
                                                            hlinks;
                                                    }
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).item_offset =
                                                        0 as libc::c_int as size_t;
                                                    (*parser).state.UNIX.main = PL_UNIX_USER;
                                                    (*parser).state.UNIX.sub.user =
                                                        PL_UNIX_USER_PRESPACE;
                                                } else if (c as libc::c_int) < '0' as i32
                                                    || c as libc::c_int > '9' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            2548585907665248015 => {
                                let ref mut fresh18 = (*parser).item_length;
                                *fresh18 = (*fresh18).wrapping_add(1);
                                if (*parser).item_length <= 9 as libc::c_int as libc::c_uint {
                                    if (strchr(
                                        b"rwx-tTsS\0" as *const u8 as *const libc::c_char,
                                        c as libc::c_int,
                                    ))
                                    .is_null()
                                    {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                } else if (*parser).item_length == 10 as libc::c_int as libc::c_uint
                                {
                                    let mut perm: libc::c_uint = 0;
                                    if c as libc::c_int != ' ' as i32 {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    } else {
                                        *((*finfo).b_data).offset(10 as libc::c_int as isize) =
                                            0 as libc::c_int as libc::c_char;
                                        perm = ftp_pl_get_permission(
                                            ((*finfo).b_data)
                                                .offset((*parser).item_offset as isize),
                                        )
                                            as libc::c_uint;
                                        if perm & 0x1000000 as libc::c_int as libc::c_uint != 0 {
                                            (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                            current_block = 3906270568117527278;
                                            break;
                                        } else {
                                            (*(*parser).file_data).info.flags |=
                                                ((1 as libc::c_int) << 3 as libc::c_int)
                                                    as libc::c_uint;
                                            (*(*parser).file_data).info.perm = perm;
                                            (*parser).offsets.perm = (*parser).item_offset;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.main = PL_UNIX_HLINKS;
                                            (*parser).state.UNIX.sub.hlinks =
                                                PL_UNIX_HLINKS_PRESPACE;
                                        }
                                    }
                                }
                            }
                            2271266030019697172 => {
                                match c as libc::c_int {
                                    45 => {
                                        (*finfo).filetype = CURLFILETYPE_FILE;
                                    }
                                    100 => {
                                        (*finfo).filetype = CURLFILETYPE_DIRECTORY;
                                    }
                                    108 => {
                                        (*finfo).filetype = CURLFILETYPE_SYMLINK;
                                    }
                                    112 => {
                                        (*finfo).filetype = CURLFILETYPE_NAMEDPIPE;
                                    }
                                    115 => {
                                        (*finfo).filetype = CURLFILETYPE_SOCKET;
                                    }
                                    99 => {
                                        (*finfo).filetype = CURLFILETYPE_DEVICE_CHAR;
                                    }
                                    98 => {
                                        (*finfo).filetype = CURLFILETYPE_DEVICE_BLOCK;
                                    }
                                    68 => {
                                        (*finfo).filetype = CURLFILETYPE_DOOR;
                                    }
                                    _ => {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                }
                                (*parser).state.UNIX.main = PL_UNIX_PERMISSION;
                                (*parser).item_length = 0 as libc::c_int as libc::c_uint;
                                (*parser).item_offset = 1 as libc::c_int as size_t;
                            }
                            11239732194576282906 => {
                                match (*parser).state.UNIX.sub.total_dirsize as libc::c_uint {
                                    0 => {
                                        current_block = 5868443211042008994;
                                        match current_block {
                                            5868443211042008994 => {
                                                if c as libc::c_int == 't' as i32 {
                                                    (*parser).state.UNIX.sub.total_dirsize =
                                                        PL_UNIX_TOTALSIZE_READING;
                                                    let ref mut fresh14 = (*parser).item_length;
                                                    *fresh14 = (*fresh14).wrapping_add(1);
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    (*finfo).b_used = 0 as libc::c_int as size_t;
                                                    continue;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh15 = (*parser).item_length;
                                                *fresh15 = (*fresh15).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    let ref mut fresh16 = (*parser).item_length;
                                                    *fresh16 = (*fresh16).wrapping_sub(1);
                                                    let ref mut fresh17 = (*finfo).b_used;
                                                    *fresh17 = (*fresh17).wrapping_sub(1);
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_length).wrapping_sub(
                                                            1 as libc::c_int as libc::c_uint,
                                                        )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strncmp(
                                                        b"total \0" as *const u8
                                                            as *const libc::c_char,
                                                        (*finfo).b_data,
                                                        6 as libc::c_int as libc::c_ulong,
                                                    ) == 0 as libc::c_int
                                                    {
                                                        let mut endptr: *mut libc::c_char =
                                                            ((*finfo).b_data)
                                                                .offset(6 as libc::c_int as isize);
                                                        while Curl_isspace(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        while Curl_isdigit(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        if *endptr != 0 {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*parser).state.UNIX.main =
                                                                PL_UNIX_FILETYPE;
                                                            (*finfo).b_used =
                                                                0 as libc::c_int as size_t;
                                                        }
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 12794766220424740645;
                                        match current_block {
                                            5868443211042008994 => {
                                                if c as libc::c_int == 't' as i32 {
                                                    (*parser).state.UNIX.sub.total_dirsize =
                                                        PL_UNIX_TOTALSIZE_READING;
                                                    let ref mut fresh14 = (*parser).item_length;
                                                    *fresh14 = (*fresh14).wrapping_add(1);
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    (*finfo).b_used = 0 as libc::c_int as size_t;
                                                    continue;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh15 = (*parser).item_length;
                                                *fresh15 = (*fresh15).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    let ref mut fresh16 = (*parser).item_length;
                                                    *fresh16 = (*fresh16).wrapping_sub(1);
                                                    let ref mut fresh17 = (*finfo).b_used;
                                                    *fresh17 = (*fresh17).wrapping_sub(1);
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_length).wrapping_sub(
                                                            1 as libc::c_int as libc::c_uint,
                                                        )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strncmp(
                                                        b"total \0" as *const u8
                                                            as *const libc::c_char,
                                                        (*finfo).b_data,
                                                        6 as libc::c_int as libc::c_ulong,
                                                    ) == 0 as libc::c_int
                                                    {
                                                        let mut endptr: *mut libc::c_char =
                                                            ((*finfo).b_data)
                                                                .offset(6 as libc::c_int as isize);
                                                        while Curl_isspace(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        while Curl_isdigit(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        if *endptr != 0 {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*parser).state.UNIX.main =
                                                                PL_UNIX_FILETYPE;
                                                            (*finfo).b_used =
                                                                0 as libc::c_int as size_t;
                                                        }
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            12711409943779506440 => {
                                match (*parser).state.UNIX.sub.user as libc::c_uint {
                                    0 => {
                                        if c as libc::c_int != ' ' as i32 {
                                            (*parser).item_offset = ((*finfo).b_used)
                                                .wrapping_sub(1 as libc::c_int as libc::c_ulong);
                                            (*parser).item_length =
                                                1 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.sub.user = PL_UNIX_USER_PARSING;
                                        }
                                    }
                                    1 => {
                                        let ref mut fresh20 = (*parser).item_length;
                                        *fresh20 = (*fresh20).wrapping_add(1);
                                        if c as libc::c_int == ' ' as i32 {
                                            *((*finfo).b_data).offset(
                                                ((*parser).item_offset)
                                                    .wrapping_add(
                                                        (*parser).item_length as libc::c_ulong,
                                                    )
                                                    .wrapping_sub(1 as libc::c_int as libc::c_ulong)
                                                    as isize,
                                            ) = 0 as libc::c_int as libc::c_char;
                                            (*parser).offsets.user = (*parser).item_offset;
                                            (*parser).state.UNIX.main = PL_UNIX_GROUP;
                                            (*parser).state.UNIX.sub.group = PL_UNIX_GROUP_PRESPACE;
                                            (*parser).item_offset = 0 as libc::c_int as size_t;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            _ => match (*parser).state.UNIX.sub.symlink as libc::c_uint {
                                0 => {
                                    current_block = 3947153213232826515;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                1 => {
                                    current_block = 1776290020351736984;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                2 => {
                                    current_block = 14587494051267926558;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                3 => {
                                    current_block = 5402613236608857871;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                4 => {
                                    current_block = 5209973316514186056;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                5 => {
                                    current_block = 3527484645425325286;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                6 => {
                                    current_block = 3075363095485550289;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                7 => {
                                    current_block = 13258967356842108374;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            },
                        }
                    }
                    6 => {
                        current_block = 15714839002739240143;
                        match current_block {
                            288150091726216379 => {
                                match (*parser).state.UNIX.sub.group as libc::c_uint {
                                    0 => {
                                        if c as libc::c_int != ' ' as i32 {
                                            (*parser).item_offset = ((*finfo).b_used)
                                                .wrapping_sub(1 as libc::c_int as libc::c_ulong);
                                            (*parser).item_length =
                                                1 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.sub.group = PL_UNIX_GROUP_NAME;
                                        }
                                    }
                                    1 => {
                                        let ref mut fresh21 = (*parser).item_length;
                                        *fresh21 = (*fresh21).wrapping_add(1);
                                        if c as libc::c_int == ' ' as i32 {
                                            *((*finfo).b_data).offset(
                                                ((*parser).item_offset)
                                                    .wrapping_add(
                                                        (*parser).item_length as libc::c_ulong,
                                                    )
                                                    .wrapping_sub(1 as libc::c_int as libc::c_ulong)
                                                    as isize,
                                            ) = 0 as libc::c_int as libc::c_char;
                                            (*parser).offsets.group = (*parser).item_offset;
                                            (*parser).state.UNIX.main = PL_UNIX_SIZE;
                                            (*parser).state.UNIX.sub.size = PL_UNIX_SIZE_PRESPACE;
                                            (*parser).item_offset = 0 as libc::c_int as size_t;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            12111627280334626048 => {
                                match (*parser).state.UNIX.sub.filename as libc::c_uint {
                                    0 => {
                                        current_block = 6301913710463012629;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 12570238925790259019;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    2 => {
                                        current_block = 12020001026448635048;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            2243364724898231629 => {
                                match (*parser).state.UNIX.sub.time as libc::c_uint {
                                    0 => {
                                        current_block = 8919528876833742864;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 13466321749914267966;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    2 => {
                                        current_block = 13902027429569464800;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    3 => {
                                        current_block = 964279874659303037;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    4 => {
                                        current_block = 8274961190783774511;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    5 => {
                                        current_block = 14633142221952416065;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            15714839002739240143 => {
                                match (*parser).state.UNIX.sub.size as libc::c_uint {
                                    0 => {
                                        current_block = 9897063314188657484;
                                        match current_block {
                                            9897063314188657484 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.size =
                                                            PL_UNIX_SIZE_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh22 = (*parser).item_length;
                                                *fresh22 = (*fresh22).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p_0: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut fsize: curl_off_t = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if curlx_strtoofft(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p_0,
                                                        10 as libc::c_int,
                                                        &mut fsize,
                                                    )
                                                        as u64
                                                        == 0
                                                    {
                                                        if *p_0.offset(0 as libc::c_int as isize)
                                                            as libc::c_int
                                                            == '\0' as i32
                                                            && fsize
                                                                != 0x7fffffffffffffff
                                                                    as libc::c_long
                                                            && fsize
                                                                != -(0x7fffffffffffffff
                                                                    as libc::c_long)
                                                                    - 1 as libc::c_long
                                                        {
                                                            (*(*parser).file_data).info.flags |= ((1
                                                                as libc::c_int)
                                                                << 6 as libc::c_int)
                                                                as libc::c_uint;
                                                            (*(*parser).file_data).info.size =
                                                                fsize;
                                                        }
                                                        (*parser).item_length =
                                                            0 as libc::c_int as libc::c_uint;
                                                        (*parser).item_offset =
                                                            0 as libc::c_int as size_t;
                                                        (*parser).state.UNIX.main = PL_UNIX_TIME;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PREPART1;
                                                    }
                                                } else if Curl_isdigit(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 4620427382343268962;
                                        match current_block {
                                            9897063314188657484 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.size =
                                                            PL_UNIX_SIZE_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh22 = (*parser).item_length;
                                                *fresh22 = (*fresh22).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p_0: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut fsize: curl_off_t = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if curlx_strtoofft(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p_0,
                                                        10 as libc::c_int,
                                                        &mut fsize,
                                                    )
                                                        as u64
                                                        == 0
                                                    {
                                                        if *p_0.offset(0 as libc::c_int as isize)
                                                            as libc::c_int
                                                            == '\0' as i32
                                                            && fsize
                                                                != 0x7fffffffffffffff
                                                                    as libc::c_long
                                                            && fsize
                                                                != -(0x7fffffffffffffff
                                                                    as libc::c_long)
                                                                    - 1 as libc::c_long
                                                        {
                                                            (*(*parser).file_data).info.flags |= ((1
                                                                as libc::c_int)
                                                                << 6 as libc::c_int)
                                                                as libc::c_uint;
                                                            (*(*parser).file_data).info.size =
                                                                fsize;
                                                        }
                                                        (*parser).item_length =
                                                            0 as libc::c_int as libc::c_uint;
                                                        (*parser).item_offset =
                                                            0 as libc::c_int as size_t;
                                                        (*parser).state.UNIX.main = PL_UNIX_TIME;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PREPART1;
                                                    }
                                                } else if Curl_isdigit(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            8922133629962145824 => {
                                match (*parser).state.UNIX.sub.hlinks as libc::c_uint {
                                    0 => {
                                        current_block = 1051223101710680835;
                                        match current_block {
                                            1051223101710680835 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.hlinks =
                                                            PL_UNIX_HLINKS_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh19 = (*parser).item_length;
                                                *fresh19 = (*fresh19).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut hlinks: libc::c_long = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    hlinks = strtol(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p,
                                                        10 as libc::c_int,
                                                    );
                                                    if *p.offset(0 as libc::c_int as isize)
                                                        as libc::c_int
                                                        == '\0' as i32
                                                        && hlinks
                                                            != 9223372036854775807 as libc::c_long
                                                        && hlinks
                                                            != -(9223372036854775807
                                                                as libc::c_long)
                                                                - 1 as libc::c_long
                                                    {
                                                        (*(*parser).file_data).info.flags |= ((1
                                                            as libc::c_int)
                                                            << 7 as libc::c_int)
                                                            as libc::c_uint;
                                                        (*(*parser).file_data).info.hardlinks =
                                                            hlinks;
                                                    }
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).item_offset =
                                                        0 as libc::c_int as size_t;
                                                    (*parser).state.UNIX.main = PL_UNIX_USER;
                                                    (*parser).state.UNIX.sub.user =
                                                        PL_UNIX_USER_PRESPACE;
                                                } else if (c as libc::c_int) < '0' as i32
                                                    || c as libc::c_int > '9' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 11000365710145520394;
                                        match current_block {
                                            1051223101710680835 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.hlinks =
                                                            PL_UNIX_HLINKS_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh19 = (*parser).item_length;
                                                *fresh19 = (*fresh19).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut hlinks: libc::c_long = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    hlinks = strtol(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p,
                                                        10 as libc::c_int,
                                                    );
                                                    if *p.offset(0 as libc::c_int as isize)
                                                        as libc::c_int
                                                        == '\0' as i32
                                                        && hlinks
                                                            != 9223372036854775807 as libc::c_long
                                                        && hlinks
                                                            != -(9223372036854775807
                                                                as libc::c_long)
                                                                - 1 as libc::c_long
                                                    {
                                                        (*(*parser).file_data).info.flags |= ((1
                                                            as libc::c_int)
                                                            << 7 as libc::c_int)
                                                            as libc::c_uint;
                                                        (*(*parser).file_data).info.hardlinks =
                                                            hlinks;
                                                    }
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).item_offset =
                                                        0 as libc::c_int as size_t;
                                                    (*parser).state.UNIX.main = PL_UNIX_USER;
                                                    (*parser).state.UNIX.sub.user =
                                                        PL_UNIX_USER_PRESPACE;
                                                } else if (c as libc::c_int) < '0' as i32
                                                    || c as libc::c_int > '9' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            2548585907665248015 => {
                                let ref mut fresh18 = (*parser).item_length;
                                *fresh18 = (*fresh18).wrapping_add(1);
                                if (*parser).item_length <= 9 as libc::c_int as libc::c_uint {
                                    if (strchr(
                                        b"rwx-tTsS\0" as *const u8 as *const libc::c_char,
                                        c as libc::c_int,
                                    ))
                                    .is_null()
                                    {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                } else if (*parser).item_length == 10 as libc::c_int as libc::c_uint
                                {
                                    let mut perm: libc::c_uint = 0;
                                    if c as libc::c_int != ' ' as i32 {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    } else {
                                        *((*finfo).b_data).offset(10 as libc::c_int as isize) =
                                            0 as libc::c_int as libc::c_char;
                                        perm = ftp_pl_get_permission(
                                            ((*finfo).b_data)
                                                .offset((*parser).item_offset as isize),
                                        )
                                            as libc::c_uint;
                                        if perm & 0x1000000 as libc::c_int as libc::c_uint != 0 {
                                            (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                            current_block = 3906270568117527278;
                                            break;
                                        } else {
                                            (*(*parser).file_data).info.flags |=
                                                ((1 as libc::c_int) << 3 as libc::c_int)
                                                    as libc::c_uint;
                                            (*(*parser).file_data).info.perm = perm;
                                            (*parser).offsets.perm = (*parser).item_offset;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.main = PL_UNIX_HLINKS;
                                            (*parser).state.UNIX.sub.hlinks =
                                                PL_UNIX_HLINKS_PRESPACE;
                                        }
                                    }
                                }
                            }
                            2271266030019697172 => {
                                match c as libc::c_int {
                                    45 => {
                                        (*finfo).filetype = CURLFILETYPE_FILE;
                                    }
                                    100 => {
                                        (*finfo).filetype = CURLFILETYPE_DIRECTORY;
                                    }
                                    108 => {
                                        (*finfo).filetype = CURLFILETYPE_SYMLINK;
                                    }
                                    112 => {
                                        (*finfo).filetype = CURLFILETYPE_NAMEDPIPE;
                                    }
                                    115 => {
                                        (*finfo).filetype = CURLFILETYPE_SOCKET;
                                    }
                                    99 => {
                                        (*finfo).filetype = CURLFILETYPE_DEVICE_CHAR;
                                    }
                                    98 => {
                                        (*finfo).filetype = CURLFILETYPE_DEVICE_BLOCK;
                                    }
                                    68 => {
                                        (*finfo).filetype = CURLFILETYPE_DOOR;
                                    }
                                    _ => {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                }
                                (*parser).state.UNIX.main = PL_UNIX_PERMISSION;
                                (*parser).item_length = 0 as libc::c_int as libc::c_uint;
                                (*parser).item_offset = 1 as libc::c_int as size_t;
                            }
                            11239732194576282906 => {
                                match (*parser).state.UNIX.sub.total_dirsize as libc::c_uint {
                                    0 => {
                                        current_block = 5868443211042008994;
                                        match current_block {
                                            5868443211042008994 => {
                                                if c as libc::c_int == 't' as i32 {
                                                    (*parser).state.UNIX.sub.total_dirsize =
                                                        PL_UNIX_TOTALSIZE_READING;
                                                    let ref mut fresh14 = (*parser).item_length;
                                                    *fresh14 = (*fresh14).wrapping_add(1);
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    (*finfo).b_used = 0 as libc::c_int as size_t;
                                                    continue;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh15 = (*parser).item_length;
                                                *fresh15 = (*fresh15).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    let ref mut fresh16 = (*parser).item_length;
                                                    *fresh16 = (*fresh16).wrapping_sub(1);
                                                    let ref mut fresh17 = (*finfo).b_used;
                                                    *fresh17 = (*fresh17).wrapping_sub(1);
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_length).wrapping_sub(
                                                            1 as libc::c_int as libc::c_uint,
                                                        )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strncmp(
                                                        b"total \0" as *const u8
                                                            as *const libc::c_char,
                                                        (*finfo).b_data,
                                                        6 as libc::c_int as libc::c_ulong,
                                                    ) == 0 as libc::c_int
                                                    {
                                                        let mut endptr: *mut libc::c_char =
                                                            ((*finfo).b_data)
                                                                .offset(6 as libc::c_int as isize);
                                                        while Curl_isspace(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        while Curl_isdigit(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        if *endptr != 0 {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*parser).state.UNIX.main =
                                                                PL_UNIX_FILETYPE;
                                                            (*finfo).b_used =
                                                                0 as libc::c_int as size_t;
                                                        }
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 12794766220424740645;
                                        match current_block {
                                            5868443211042008994 => {
                                                if c as libc::c_int == 't' as i32 {
                                                    (*parser).state.UNIX.sub.total_dirsize =
                                                        PL_UNIX_TOTALSIZE_READING;
                                                    let ref mut fresh14 = (*parser).item_length;
                                                    *fresh14 = (*fresh14).wrapping_add(1);
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    (*finfo).b_used = 0 as libc::c_int as size_t;
                                                    continue;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh15 = (*parser).item_length;
                                                *fresh15 = (*fresh15).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    let ref mut fresh16 = (*parser).item_length;
                                                    *fresh16 = (*fresh16).wrapping_sub(1);
                                                    let ref mut fresh17 = (*finfo).b_used;
                                                    *fresh17 = (*fresh17).wrapping_sub(1);
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_length).wrapping_sub(
                                                            1 as libc::c_int as libc::c_uint,
                                                        )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strncmp(
                                                        b"total \0" as *const u8
                                                            as *const libc::c_char,
                                                        (*finfo).b_data,
                                                        6 as libc::c_int as libc::c_ulong,
                                                    ) == 0 as libc::c_int
                                                    {
                                                        let mut endptr: *mut libc::c_char =
                                                            ((*finfo).b_data)
                                                                .offset(6 as libc::c_int as isize);
                                                        while Curl_isspace(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        while Curl_isdigit(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        if *endptr != 0 {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*parser).state.UNIX.main =
                                                                PL_UNIX_FILETYPE;
                                                            (*finfo).b_used =
                                                                0 as libc::c_int as size_t;
                                                        }
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            12711409943779506440 => {
                                match (*parser).state.UNIX.sub.user as libc::c_uint {
                                    0 => {
                                        if c as libc::c_int != ' ' as i32 {
                                            (*parser).item_offset = ((*finfo).b_used)
                                                .wrapping_sub(1 as libc::c_int as libc::c_ulong);
                                            (*parser).item_length =
                                                1 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.sub.user = PL_UNIX_USER_PARSING;
                                        }
                                    }
                                    1 => {
                                        let ref mut fresh20 = (*parser).item_length;
                                        *fresh20 = (*fresh20).wrapping_add(1);
                                        if c as libc::c_int == ' ' as i32 {
                                            *((*finfo).b_data).offset(
                                                ((*parser).item_offset)
                                                    .wrapping_add(
                                                        (*parser).item_length as libc::c_ulong,
                                                    )
                                                    .wrapping_sub(1 as libc::c_int as libc::c_ulong)
                                                    as isize,
                                            ) = 0 as libc::c_int as libc::c_char;
                                            (*parser).offsets.user = (*parser).item_offset;
                                            (*parser).state.UNIX.main = PL_UNIX_GROUP;
                                            (*parser).state.UNIX.sub.group = PL_UNIX_GROUP_PRESPACE;
                                            (*parser).item_offset = 0 as libc::c_int as size_t;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            _ => match (*parser).state.UNIX.sub.symlink as libc::c_uint {
                                0 => {
                                    current_block = 3947153213232826515;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                1 => {
                                    current_block = 1776290020351736984;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                2 => {
                                    current_block = 14587494051267926558;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                3 => {
                                    current_block = 5402613236608857871;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                4 => {
                                    current_block = 5209973316514186056;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                5 => {
                                    current_block = 3527484645425325286;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                6 => {
                                    current_block = 3075363095485550289;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                7 => {
                                    current_block = 13258967356842108374;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            },
                        }
                    }
                    7 => {
                        current_block = 2243364724898231629;
                        match current_block {
                            288150091726216379 => {
                                match (*parser).state.UNIX.sub.group as libc::c_uint {
                                    0 => {
                                        if c as libc::c_int != ' ' as i32 {
                                            (*parser).item_offset = ((*finfo).b_used)
                                                .wrapping_sub(1 as libc::c_int as libc::c_ulong);
                                            (*parser).item_length =
                                                1 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.sub.group = PL_UNIX_GROUP_NAME;
                                        }
                                    }
                                    1 => {
                                        let ref mut fresh21 = (*parser).item_length;
                                        *fresh21 = (*fresh21).wrapping_add(1);
                                        if c as libc::c_int == ' ' as i32 {
                                            *((*finfo).b_data).offset(
                                                ((*parser).item_offset)
                                                    .wrapping_add(
                                                        (*parser).item_length as libc::c_ulong,
                                                    )
                                                    .wrapping_sub(1 as libc::c_int as libc::c_ulong)
                                                    as isize,
                                            ) = 0 as libc::c_int as libc::c_char;
                                            (*parser).offsets.group = (*parser).item_offset;
                                            (*parser).state.UNIX.main = PL_UNIX_SIZE;
                                            (*parser).state.UNIX.sub.size = PL_UNIX_SIZE_PRESPACE;
                                            (*parser).item_offset = 0 as libc::c_int as size_t;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            12111627280334626048 => {
                                match (*parser).state.UNIX.sub.filename as libc::c_uint {
                                    0 => {
                                        current_block = 6301913710463012629;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 12570238925790259019;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    2 => {
                                        current_block = 12020001026448635048;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            2243364724898231629 => {
                                match (*parser).state.UNIX.sub.time as libc::c_uint {
                                    0 => {
                                        current_block = 8919528876833742864;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 13466321749914267966;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    2 => {
                                        current_block = 13902027429569464800;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    3 => {
                                        current_block = 964279874659303037;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    4 => {
                                        current_block = 8274961190783774511;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    5 => {
                                        current_block = 14633142221952416065;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            15714839002739240143 => {
                                match (*parser).state.UNIX.sub.size as libc::c_uint {
                                    0 => {
                                        current_block = 9897063314188657484;
                                        match current_block {
                                            9897063314188657484 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.size =
                                                            PL_UNIX_SIZE_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh22 = (*parser).item_length;
                                                *fresh22 = (*fresh22).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p_0: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut fsize: curl_off_t = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if curlx_strtoofft(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p_0,
                                                        10 as libc::c_int,
                                                        &mut fsize,
                                                    )
                                                        as u64
                                                        == 0
                                                    {
                                                        if *p_0.offset(0 as libc::c_int as isize)
                                                            as libc::c_int
                                                            == '\0' as i32
                                                            && fsize
                                                                != 0x7fffffffffffffff
                                                                    as libc::c_long
                                                            && fsize
                                                                != -(0x7fffffffffffffff
                                                                    as libc::c_long)
                                                                    - 1 as libc::c_long
                                                        {
                                                            (*(*parser).file_data).info.flags |= ((1
                                                                as libc::c_int)
                                                                << 6 as libc::c_int)
                                                                as libc::c_uint;
                                                            (*(*parser).file_data).info.size =
                                                                fsize;
                                                        }
                                                        (*parser).item_length =
                                                            0 as libc::c_int as libc::c_uint;
                                                        (*parser).item_offset =
                                                            0 as libc::c_int as size_t;
                                                        (*parser).state.UNIX.main = PL_UNIX_TIME;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PREPART1;
                                                    }
                                                } else if Curl_isdigit(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 4620427382343268962;
                                        match current_block {
                                            9897063314188657484 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.size =
                                                            PL_UNIX_SIZE_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh22 = (*parser).item_length;
                                                *fresh22 = (*fresh22).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p_0: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut fsize: curl_off_t = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if curlx_strtoofft(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p_0,
                                                        10 as libc::c_int,
                                                        &mut fsize,
                                                    )
                                                        as u64
                                                        == 0
                                                    {
                                                        if *p_0.offset(0 as libc::c_int as isize)
                                                            as libc::c_int
                                                            == '\0' as i32
                                                            && fsize
                                                                != 0x7fffffffffffffff
                                                                    as libc::c_long
                                                            && fsize
                                                                != -(0x7fffffffffffffff
                                                                    as libc::c_long)
                                                                    - 1 as libc::c_long
                                                        {
                                                            (*(*parser).file_data).info.flags |= ((1
                                                                as libc::c_int)
                                                                << 6 as libc::c_int)
                                                                as libc::c_uint;
                                                            (*(*parser).file_data).info.size =
                                                                fsize;
                                                        }
                                                        (*parser).item_length =
                                                            0 as libc::c_int as libc::c_uint;
                                                        (*parser).item_offset =
                                                            0 as libc::c_int as size_t;
                                                        (*parser).state.UNIX.main = PL_UNIX_TIME;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PREPART1;
                                                    }
                                                } else if Curl_isdigit(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            8922133629962145824 => {
                                match (*parser).state.UNIX.sub.hlinks as libc::c_uint {
                                    0 => {
                                        current_block = 1051223101710680835;
                                        match current_block {
                                            1051223101710680835 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.hlinks =
                                                            PL_UNIX_HLINKS_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh19 = (*parser).item_length;
                                                *fresh19 = (*fresh19).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut hlinks: libc::c_long = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    hlinks = strtol(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p,
                                                        10 as libc::c_int,
                                                    );
                                                    if *p.offset(0 as libc::c_int as isize)
                                                        as libc::c_int
                                                        == '\0' as i32
                                                        && hlinks
                                                            != 9223372036854775807 as libc::c_long
                                                        && hlinks
                                                            != -(9223372036854775807
                                                                as libc::c_long)
                                                                - 1 as libc::c_long
                                                    {
                                                        (*(*parser).file_data).info.flags |= ((1
                                                            as libc::c_int)
                                                            << 7 as libc::c_int)
                                                            as libc::c_uint;
                                                        (*(*parser).file_data).info.hardlinks =
                                                            hlinks;
                                                    }
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).item_offset =
                                                        0 as libc::c_int as size_t;
                                                    (*parser).state.UNIX.main = PL_UNIX_USER;
                                                    (*parser).state.UNIX.sub.user =
                                                        PL_UNIX_USER_PRESPACE;
                                                } else if (c as libc::c_int) < '0' as i32
                                                    || c as libc::c_int > '9' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 11000365710145520394;
                                        match current_block {
                                            1051223101710680835 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.hlinks =
                                                            PL_UNIX_HLINKS_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh19 = (*parser).item_length;
                                                *fresh19 = (*fresh19).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut hlinks: libc::c_long = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    hlinks = strtol(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p,
                                                        10 as libc::c_int,
                                                    );
                                                    if *p.offset(0 as libc::c_int as isize)
                                                        as libc::c_int
                                                        == '\0' as i32
                                                        && hlinks
                                                            != 9223372036854775807 as libc::c_long
                                                        && hlinks
                                                            != -(9223372036854775807
                                                                as libc::c_long)
                                                                - 1 as libc::c_long
                                                    {
                                                        (*(*parser).file_data).info.flags |= ((1
                                                            as libc::c_int)
                                                            << 7 as libc::c_int)
                                                            as libc::c_uint;
                                                        (*(*parser).file_data).info.hardlinks =
                                                            hlinks;
                                                    }
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).item_offset =
                                                        0 as libc::c_int as size_t;
                                                    (*parser).state.UNIX.main = PL_UNIX_USER;
                                                    (*parser).state.UNIX.sub.user =
                                                        PL_UNIX_USER_PRESPACE;
                                                } else if (c as libc::c_int) < '0' as i32
                                                    || c as libc::c_int > '9' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            2548585907665248015 => {
                                let ref mut fresh18 = (*parser).item_length;
                                *fresh18 = (*fresh18).wrapping_add(1);
                                if (*parser).item_length <= 9 as libc::c_int as libc::c_uint {
                                    if (strchr(
                                        b"rwx-tTsS\0" as *const u8 as *const libc::c_char,
                                        c as libc::c_int,
                                    ))
                                    .is_null()
                                    {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                } else if (*parser).item_length == 10 as libc::c_int as libc::c_uint
                                {
                                    let mut perm: libc::c_uint = 0;
                                    if c as libc::c_int != ' ' as i32 {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    } else {
                                        *((*finfo).b_data).offset(10 as libc::c_int as isize) =
                                            0 as libc::c_int as libc::c_char;
                                        perm = ftp_pl_get_permission(
                                            ((*finfo).b_data)
                                                .offset((*parser).item_offset as isize),
                                        )
                                            as libc::c_uint;
                                        if perm & 0x1000000 as libc::c_int as libc::c_uint != 0 {
                                            (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                            current_block = 3906270568117527278;
                                            break;
                                        } else {
                                            (*(*parser).file_data).info.flags |=
                                                ((1 as libc::c_int) << 3 as libc::c_int)
                                                    as libc::c_uint;
                                            (*(*parser).file_data).info.perm = perm;
                                            (*parser).offsets.perm = (*parser).item_offset;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.main = PL_UNIX_HLINKS;
                                            (*parser).state.UNIX.sub.hlinks =
                                                PL_UNIX_HLINKS_PRESPACE;
                                        }
                                    }
                                }
                            }
                            2271266030019697172 => {
                                match c as libc::c_int {
                                    45 => {
                                        (*finfo).filetype = CURLFILETYPE_FILE;
                                    }
                                    100 => {
                                        (*finfo).filetype = CURLFILETYPE_DIRECTORY;
                                    }
                                    108 => {
                                        (*finfo).filetype = CURLFILETYPE_SYMLINK;
                                    }
                                    112 => {
                                        (*finfo).filetype = CURLFILETYPE_NAMEDPIPE;
                                    }
                                    115 => {
                                        (*finfo).filetype = CURLFILETYPE_SOCKET;
                                    }
                                    99 => {
                                        (*finfo).filetype = CURLFILETYPE_DEVICE_CHAR;
                                    }
                                    98 => {
                                        (*finfo).filetype = CURLFILETYPE_DEVICE_BLOCK;
                                    }
                                    68 => {
                                        (*finfo).filetype = CURLFILETYPE_DOOR;
                                    }
                                    _ => {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                }
                                (*parser).state.UNIX.main = PL_UNIX_PERMISSION;
                                (*parser).item_length = 0 as libc::c_int as libc::c_uint;
                                (*parser).item_offset = 1 as libc::c_int as size_t;
                            }
                            11239732194576282906 => {
                                match (*parser).state.UNIX.sub.total_dirsize as libc::c_uint {
                                    0 => {
                                        current_block = 5868443211042008994;
                                        match current_block {
                                            5868443211042008994 => {
                                                if c as libc::c_int == 't' as i32 {
                                                    (*parser).state.UNIX.sub.total_dirsize =
                                                        PL_UNIX_TOTALSIZE_READING;
                                                    let ref mut fresh14 = (*parser).item_length;
                                                    *fresh14 = (*fresh14).wrapping_add(1);
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    (*finfo).b_used = 0 as libc::c_int as size_t;
                                                    continue;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh15 = (*parser).item_length;
                                                *fresh15 = (*fresh15).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    let ref mut fresh16 = (*parser).item_length;
                                                    *fresh16 = (*fresh16).wrapping_sub(1);
                                                    let ref mut fresh17 = (*finfo).b_used;
                                                    *fresh17 = (*fresh17).wrapping_sub(1);
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_length).wrapping_sub(
                                                            1 as libc::c_int as libc::c_uint,
                                                        )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strncmp(
                                                        b"total \0" as *const u8
                                                            as *const libc::c_char,
                                                        (*finfo).b_data,
                                                        6 as libc::c_int as libc::c_ulong,
                                                    ) == 0 as libc::c_int
                                                    {
                                                        let mut endptr: *mut libc::c_char =
                                                            ((*finfo).b_data)
                                                                .offset(6 as libc::c_int as isize);
                                                        while Curl_isspace(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        while Curl_isdigit(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        if *endptr != 0 {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*parser).state.UNIX.main =
                                                                PL_UNIX_FILETYPE;
                                                            (*finfo).b_used =
                                                                0 as libc::c_int as size_t;
                                                        }
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 12794766220424740645;
                                        match current_block {
                                            5868443211042008994 => {
                                                if c as libc::c_int == 't' as i32 {
                                                    (*parser).state.UNIX.sub.total_dirsize =
                                                        PL_UNIX_TOTALSIZE_READING;
                                                    let ref mut fresh14 = (*parser).item_length;
                                                    *fresh14 = (*fresh14).wrapping_add(1);
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    (*finfo).b_used = 0 as libc::c_int as size_t;
                                                    continue;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh15 = (*parser).item_length;
                                                *fresh15 = (*fresh15).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    let ref mut fresh16 = (*parser).item_length;
                                                    *fresh16 = (*fresh16).wrapping_sub(1);
                                                    let ref mut fresh17 = (*finfo).b_used;
                                                    *fresh17 = (*fresh17).wrapping_sub(1);
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_length).wrapping_sub(
                                                            1 as libc::c_int as libc::c_uint,
                                                        )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strncmp(
                                                        b"total \0" as *const u8
                                                            as *const libc::c_char,
                                                        (*finfo).b_data,
                                                        6 as libc::c_int as libc::c_ulong,
                                                    ) == 0 as libc::c_int
                                                    {
                                                        let mut endptr: *mut libc::c_char =
                                                            ((*finfo).b_data)
                                                                .offset(6 as libc::c_int as isize);
                                                        while Curl_isspace(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        while Curl_isdigit(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        if *endptr != 0 {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*parser).state.UNIX.main =
                                                                PL_UNIX_FILETYPE;
                                                            (*finfo).b_used =
                                                                0 as libc::c_int as size_t;
                                                        }
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            12711409943779506440 => {
                                match (*parser).state.UNIX.sub.user as libc::c_uint {
                                    0 => {
                                        if c as libc::c_int != ' ' as i32 {
                                            (*parser).item_offset = ((*finfo).b_used)
                                                .wrapping_sub(1 as libc::c_int as libc::c_ulong);
                                            (*parser).item_length =
                                                1 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.sub.user = PL_UNIX_USER_PARSING;
                                        }
                                    }
                                    1 => {
                                        let ref mut fresh20 = (*parser).item_length;
                                        *fresh20 = (*fresh20).wrapping_add(1);
                                        if c as libc::c_int == ' ' as i32 {
                                            *((*finfo).b_data).offset(
                                                ((*parser).item_offset)
                                                    .wrapping_add(
                                                        (*parser).item_length as libc::c_ulong,
                                                    )
                                                    .wrapping_sub(1 as libc::c_int as libc::c_ulong)
                                                    as isize,
                                            ) = 0 as libc::c_int as libc::c_char;
                                            (*parser).offsets.user = (*parser).item_offset;
                                            (*parser).state.UNIX.main = PL_UNIX_GROUP;
                                            (*parser).state.UNIX.sub.group = PL_UNIX_GROUP_PRESPACE;
                                            (*parser).item_offset = 0 as libc::c_int as size_t;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            _ => match (*parser).state.UNIX.sub.symlink as libc::c_uint {
                                0 => {
                                    current_block = 3947153213232826515;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                1 => {
                                    current_block = 1776290020351736984;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                2 => {
                                    current_block = 14587494051267926558;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                3 => {
                                    current_block = 5402613236608857871;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                4 => {
                                    current_block = 5209973316514186056;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                5 => {
                                    current_block = 3527484645425325286;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                6 => {
                                    current_block = 3075363095485550289;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                7 => {
                                    current_block = 13258967356842108374;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            },
                        }
                    }
                    8 => {
                        current_block = 12111627280334626048;
                        match current_block {
                            288150091726216379 => {
                                match (*parser).state.UNIX.sub.group as libc::c_uint {
                                    0 => {
                                        if c as libc::c_int != ' ' as i32 {
                                            (*parser).item_offset = ((*finfo).b_used)
                                                .wrapping_sub(1 as libc::c_int as libc::c_ulong);
                                            (*parser).item_length =
                                                1 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.sub.group = PL_UNIX_GROUP_NAME;
                                        }
                                    }
                                    1 => {
                                        let ref mut fresh21 = (*parser).item_length;
                                        *fresh21 = (*fresh21).wrapping_add(1);
                                        if c as libc::c_int == ' ' as i32 {
                                            *((*finfo).b_data).offset(
                                                ((*parser).item_offset)
                                                    .wrapping_add(
                                                        (*parser).item_length as libc::c_ulong,
                                                    )
                                                    .wrapping_sub(1 as libc::c_int as libc::c_ulong)
                                                    as isize,
                                            ) = 0 as libc::c_int as libc::c_char;
                                            (*parser).offsets.group = (*parser).item_offset;
                                            (*parser).state.UNIX.main = PL_UNIX_SIZE;
                                            (*parser).state.UNIX.sub.size = PL_UNIX_SIZE_PRESPACE;
                                            (*parser).item_offset = 0 as libc::c_int as size_t;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            12111627280334626048 => {
                                match (*parser).state.UNIX.sub.filename as libc::c_uint {
                                    0 => {
                                        current_block = 6301913710463012629;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 12570238925790259019;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    2 => {
                                        current_block = 12020001026448635048;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            2243364724898231629 => {
                                match (*parser).state.UNIX.sub.time as libc::c_uint {
                                    0 => {
                                        current_block = 8919528876833742864;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 13466321749914267966;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    2 => {
                                        current_block = 13902027429569464800;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    3 => {
                                        current_block = 964279874659303037;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    4 => {
                                        current_block = 8274961190783774511;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    5 => {
                                        current_block = 14633142221952416065;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            15714839002739240143 => {
                                match (*parser).state.UNIX.sub.size as libc::c_uint {
                                    0 => {
                                        current_block = 9897063314188657484;
                                        match current_block {
                                            9897063314188657484 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.size =
                                                            PL_UNIX_SIZE_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh22 = (*parser).item_length;
                                                *fresh22 = (*fresh22).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p_0: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut fsize: curl_off_t = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if curlx_strtoofft(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p_0,
                                                        10 as libc::c_int,
                                                        &mut fsize,
                                                    )
                                                        as u64
                                                        == 0
                                                    {
                                                        if *p_0.offset(0 as libc::c_int as isize)
                                                            as libc::c_int
                                                            == '\0' as i32
                                                            && fsize
                                                                != 0x7fffffffffffffff
                                                                    as libc::c_long
                                                            && fsize
                                                                != -(0x7fffffffffffffff
                                                                    as libc::c_long)
                                                                    - 1 as libc::c_long
                                                        {
                                                            (*(*parser).file_data).info.flags |= ((1
                                                                as libc::c_int)
                                                                << 6 as libc::c_int)
                                                                as libc::c_uint;
                                                            (*(*parser).file_data).info.size =
                                                                fsize;
                                                        }
                                                        (*parser).item_length =
                                                            0 as libc::c_int as libc::c_uint;
                                                        (*parser).item_offset =
                                                            0 as libc::c_int as size_t;
                                                        (*parser).state.UNIX.main = PL_UNIX_TIME;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PREPART1;
                                                    }
                                                } else if Curl_isdigit(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 4620427382343268962;
                                        match current_block {
                                            9897063314188657484 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.size =
                                                            PL_UNIX_SIZE_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh22 = (*parser).item_length;
                                                *fresh22 = (*fresh22).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p_0: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut fsize: curl_off_t = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if curlx_strtoofft(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p_0,
                                                        10 as libc::c_int,
                                                        &mut fsize,
                                                    )
                                                        as u64
                                                        == 0
                                                    {
                                                        if *p_0.offset(0 as libc::c_int as isize)
                                                            as libc::c_int
                                                            == '\0' as i32
                                                            && fsize
                                                                != 0x7fffffffffffffff
                                                                    as libc::c_long
                                                            && fsize
                                                                != -(0x7fffffffffffffff
                                                                    as libc::c_long)
                                                                    - 1 as libc::c_long
                                                        {
                                                            (*(*parser).file_data).info.flags |= ((1
                                                                as libc::c_int)
                                                                << 6 as libc::c_int)
                                                                as libc::c_uint;
                                                            (*(*parser).file_data).info.size =
                                                                fsize;
                                                        }
                                                        (*parser).item_length =
                                                            0 as libc::c_int as libc::c_uint;
                                                        (*parser).item_offset =
                                                            0 as libc::c_int as size_t;
                                                        (*parser).state.UNIX.main = PL_UNIX_TIME;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PREPART1;
                                                    }
                                                } else if Curl_isdigit(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            8922133629962145824 => {
                                match (*parser).state.UNIX.sub.hlinks as libc::c_uint {
                                    0 => {
                                        current_block = 1051223101710680835;
                                        match current_block {
                                            1051223101710680835 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.hlinks =
                                                            PL_UNIX_HLINKS_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh19 = (*parser).item_length;
                                                *fresh19 = (*fresh19).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut hlinks: libc::c_long = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    hlinks = strtol(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p,
                                                        10 as libc::c_int,
                                                    );
                                                    if *p.offset(0 as libc::c_int as isize)
                                                        as libc::c_int
                                                        == '\0' as i32
                                                        && hlinks
                                                            != 9223372036854775807 as libc::c_long
                                                        && hlinks
                                                            != -(9223372036854775807
                                                                as libc::c_long)
                                                                - 1 as libc::c_long
                                                    {
                                                        (*(*parser).file_data).info.flags |= ((1
                                                            as libc::c_int)
                                                            << 7 as libc::c_int)
                                                            as libc::c_uint;
                                                        (*(*parser).file_data).info.hardlinks =
                                                            hlinks;
                                                    }
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).item_offset =
                                                        0 as libc::c_int as size_t;
                                                    (*parser).state.UNIX.main = PL_UNIX_USER;
                                                    (*parser).state.UNIX.sub.user =
                                                        PL_UNIX_USER_PRESPACE;
                                                } else if (c as libc::c_int) < '0' as i32
                                                    || c as libc::c_int > '9' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 11000365710145520394;
                                        match current_block {
                                            1051223101710680835 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.hlinks =
                                                            PL_UNIX_HLINKS_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh19 = (*parser).item_length;
                                                *fresh19 = (*fresh19).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut hlinks: libc::c_long = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    hlinks = strtol(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p,
                                                        10 as libc::c_int,
                                                    );
                                                    if *p.offset(0 as libc::c_int as isize)
                                                        as libc::c_int
                                                        == '\0' as i32
                                                        && hlinks
                                                            != 9223372036854775807 as libc::c_long
                                                        && hlinks
                                                            != -(9223372036854775807
                                                                as libc::c_long)
                                                                - 1 as libc::c_long
                                                    {
                                                        (*(*parser).file_data).info.flags |= ((1
                                                            as libc::c_int)
                                                            << 7 as libc::c_int)
                                                            as libc::c_uint;
                                                        (*(*parser).file_data).info.hardlinks =
                                                            hlinks;
                                                    }
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).item_offset =
                                                        0 as libc::c_int as size_t;
                                                    (*parser).state.UNIX.main = PL_UNIX_USER;
                                                    (*parser).state.UNIX.sub.user =
                                                        PL_UNIX_USER_PRESPACE;
                                                } else if (c as libc::c_int) < '0' as i32
                                                    || c as libc::c_int > '9' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            2548585907665248015 => {
                                let ref mut fresh18 = (*parser).item_length;
                                *fresh18 = (*fresh18).wrapping_add(1);
                                if (*parser).item_length <= 9 as libc::c_int as libc::c_uint {
                                    if (strchr(
                                        b"rwx-tTsS\0" as *const u8 as *const libc::c_char,
                                        c as libc::c_int,
                                    ))
                                    .is_null()
                                    {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                } else if (*parser).item_length == 10 as libc::c_int as libc::c_uint
                                {
                                    let mut perm: libc::c_uint = 0;
                                    if c as libc::c_int != ' ' as i32 {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    } else {
                                        *((*finfo).b_data).offset(10 as libc::c_int as isize) =
                                            0 as libc::c_int as libc::c_char;
                                        perm = ftp_pl_get_permission(
                                            ((*finfo).b_data)
                                                .offset((*parser).item_offset as isize),
                                        )
                                            as libc::c_uint;
                                        if perm & 0x1000000 as libc::c_int as libc::c_uint != 0 {
                                            (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                            current_block = 3906270568117527278;
                                            break;
                                        } else {
                                            (*(*parser).file_data).info.flags |=
                                                ((1 as libc::c_int) << 3 as libc::c_int)
                                                    as libc::c_uint;
                                            (*(*parser).file_data).info.perm = perm;
                                            (*parser).offsets.perm = (*parser).item_offset;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.main = PL_UNIX_HLINKS;
                                            (*parser).state.UNIX.sub.hlinks =
                                                PL_UNIX_HLINKS_PRESPACE;
                                        }
                                    }
                                }
                            }
                            2271266030019697172 => {
                                match c as libc::c_int {
                                    45 => {
                                        (*finfo).filetype = CURLFILETYPE_FILE;
                                    }
                                    100 => {
                                        (*finfo).filetype = CURLFILETYPE_DIRECTORY;
                                    }
                                    108 => {
                                        (*finfo).filetype = CURLFILETYPE_SYMLINK;
                                    }
                                    112 => {
                                        (*finfo).filetype = CURLFILETYPE_NAMEDPIPE;
                                    }
                                    115 => {
                                        (*finfo).filetype = CURLFILETYPE_SOCKET;
                                    }
                                    99 => {
                                        (*finfo).filetype = CURLFILETYPE_DEVICE_CHAR;
                                    }
                                    98 => {
                                        (*finfo).filetype = CURLFILETYPE_DEVICE_BLOCK;
                                    }
                                    68 => {
                                        (*finfo).filetype = CURLFILETYPE_DOOR;
                                    }
                                    _ => {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                }
                                (*parser).state.UNIX.main = PL_UNIX_PERMISSION;
                                (*parser).item_length = 0 as libc::c_int as libc::c_uint;
                                (*parser).item_offset = 1 as libc::c_int as size_t;
                            }
                            11239732194576282906 => {
                                match (*parser).state.UNIX.sub.total_dirsize as libc::c_uint {
                                    0 => {
                                        current_block = 5868443211042008994;
                                        match current_block {
                                            5868443211042008994 => {
                                                if c as libc::c_int == 't' as i32 {
                                                    (*parser).state.UNIX.sub.total_dirsize =
                                                        PL_UNIX_TOTALSIZE_READING;
                                                    let ref mut fresh14 = (*parser).item_length;
                                                    *fresh14 = (*fresh14).wrapping_add(1);
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    (*finfo).b_used = 0 as libc::c_int as size_t;
                                                    continue;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh15 = (*parser).item_length;
                                                *fresh15 = (*fresh15).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    let ref mut fresh16 = (*parser).item_length;
                                                    *fresh16 = (*fresh16).wrapping_sub(1);
                                                    let ref mut fresh17 = (*finfo).b_used;
                                                    *fresh17 = (*fresh17).wrapping_sub(1);
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_length).wrapping_sub(
                                                            1 as libc::c_int as libc::c_uint,
                                                        )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strncmp(
                                                        b"total \0" as *const u8
                                                            as *const libc::c_char,
                                                        (*finfo).b_data,
                                                        6 as libc::c_int as libc::c_ulong,
                                                    ) == 0 as libc::c_int
                                                    {
                                                        let mut endptr: *mut libc::c_char =
                                                            ((*finfo).b_data)
                                                                .offset(6 as libc::c_int as isize);
                                                        while Curl_isspace(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        while Curl_isdigit(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        if *endptr != 0 {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*parser).state.UNIX.main =
                                                                PL_UNIX_FILETYPE;
                                                            (*finfo).b_used =
                                                                0 as libc::c_int as size_t;
                                                        }
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 12794766220424740645;
                                        match current_block {
                                            5868443211042008994 => {
                                                if c as libc::c_int == 't' as i32 {
                                                    (*parser).state.UNIX.sub.total_dirsize =
                                                        PL_UNIX_TOTALSIZE_READING;
                                                    let ref mut fresh14 = (*parser).item_length;
                                                    *fresh14 = (*fresh14).wrapping_add(1);
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    (*finfo).b_used = 0 as libc::c_int as size_t;
                                                    continue;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh15 = (*parser).item_length;
                                                *fresh15 = (*fresh15).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    let ref mut fresh16 = (*parser).item_length;
                                                    *fresh16 = (*fresh16).wrapping_sub(1);
                                                    let ref mut fresh17 = (*finfo).b_used;
                                                    *fresh17 = (*fresh17).wrapping_sub(1);
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_length).wrapping_sub(
                                                            1 as libc::c_int as libc::c_uint,
                                                        )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strncmp(
                                                        b"total \0" as *const u8
                                                            as *const libc::c_char,
                                                        (*finfo).b_data,
                                                        6 as libc::c_int as libc::c_ulong,
                                                    ) == 0 as libc::c_int
                                                    {
                                                        let mut endptr: *mut libc::c_char =
                                                            ((*finfo).b_data)
                                                                .offset(6 as libc::c_int as isize);
                                                        while Curl_isspace(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        while Curl_isdigit(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        if *endptr != 0 {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*parser).state.UNIX.main =
                                                                PL_UNIX_FILETYPE;
                                                            (*finfo).b_used =
                                                                0 as libc::c_int as size_t;
                                                        }
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            12711409943779506440 => {
                                match (*parser).state.UNIX.sub.user as libc::c_uint {
                                    0 => {
                                        if c as libc::c_int != ' ' as i32 {
                                            (*parser).item_offset = ((*finfo).b_used)
                                                .wrapping_sub(1 as libc::c_int as libc::c_ulong);
                                            (*parser).item_length =
                                                1 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.sub.user = PL_UNIX_USER_PARSING;
                                        }
                                    }
                                    1 => {
                                        let ref mut fresh20 = (*parser).item_length;
                                        *fresh20 = (*fresh20).wrapping_add(1);
                                        if c as libc::c_int == ' ' as i32 {
                                            *((*finfo).b_data).offset(
                                                ((*parser).item_offset)
                                                    .wrapping_add(
                                                        (*parser).item_length as libc::c_ulong,
                                                    )
                                                    .wrapping_sub(1 as libc::c_int as libc::c_ulong)
                                                    as isize,
                                            ) = 0 as libc::c_int as libc::c_char;
                                            (*parser).offsets.user = (*parser).item_offset;
                                            (*parser).state.UNIX.main = PL_UNIX_GROUP;
                                            (*parser).state.UNIX.sub.group = PL_UNIX_GROUP_PRESPACE;
                                            (*parser).item_offset = 0 as libc::c_int as size_t;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            _ => match (*parser).state.UNIX.sub.symlink as libc::c_uint {
                                0 => {
                                    current_block = 3947153213232826515;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                1 => {
                                    current_block = 1776290020351736984;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                2 => {
                                    current_block = 14587494051267926558;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                3 => {
                                    current_block = 5402613236608857871;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                4 => {
                                    current_block = 5209973316514186056;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                5 => {
                                    current_block = 3527484645425325286;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                6 => {
                                    current_block = 3075363095485550289;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                7 => {
                                    current_block = 13258967356842108374;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            },
                        }
                    }
                    9 => {
                        current_block = 15857602148807820308;
                        match current_block {
                            288150091726216379 => {
                                match (*parser).state.UNIX.sub.group as libc::c_uint {
                                    0 => {
                                        if c as libc::c_int != ' ' as i32 {
                                            (*parser).item_offset = ((*finfo).b_used)
                                                .wrapping_sub(1 as libc::c_int as libc::c_ulong);
                                            (*parser).item_length =
                                                1 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.sub.group = PL_UNIX_GROUP_NAME;
                                        }
                                    }
                                    1 => {
                                        let ref mut fresh21 = (*parser).item_length;
                                        *fresh21 = (*fresh21).wrapping_add(1);
                                        if c as libc::c_int == ' ' as i32 {
                                            *((*finfo).b_data).offset(
                                                ((*parser).item_offset)
                                                    .wrapping_add(
                                                        (*parser).item_length as libc::c_ulong,
                                                    )
                                                    .wrapping_sub(1 as libc::c_int as libc::c_ulong)
                                                    as isize,
                                            ) = 0 as libc::c_int as libc::c_char;
                                            (*parser).offsets.group = (*parser).item_offset;
                                            (*parser).state.UNIX.main = PL_UNIX_SIZE;
                                            (*parser).state.UNIX.sub.size = PL_UNIX_SIZE_PRESPACE;
                                            (*parser).item_offset = 0 as libc::c_int as size_t;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            12111627280334626048 => {
                                match (*parser).state.UNIX.sub.filename as libc::c_uint {
                                    0 => {
                                        current_block = 6301913710463012629;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 12570238925790259019;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    2 => {
                                        current_block = 12020001026448635048;
                                        match current_block {
                                            6301913710463012629 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_NAME;
                                                }
                                            }
                                            12570238925790259019 => {
                                                let ref mut fresh28 = (*parser).item_length;
                                                *fresh28 = (*fresh28).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    (*parser).state.UNIX.sub.filename =
                                                        PL_UNIX_FILENAME_WINDOWSEOL;
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.filename =
                                                        (*parser).item_offset;
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    result = ftp_pl_insert_finfo(data, infop);
                                                    if result as u64 != 0 {
                                                        (*parser).error = result;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                } else {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            2243364724898231629 => {
                                match (*parser).state.UNIX.sub.time as libc::c_uint {
                                    0 => {
                                        current_block = 8919528876833742864;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 13466321749914267966;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    2 => {
                                        current_block = 13902027429569464800;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    3 => {
                                        current_block = 964279874659303037;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    4 => {
                                        current_block = 8274961190783774511;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    5 => {
                                        current_block = 14633142221952416065;
                                        match current_block {
                                            8919528876833742864 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART1;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            8274961190783774511 => {
                                                let ref mut fresh26 = (*parser).item_length;
                                                *fresh26 = (*fresh26).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART3;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            964279874659303037 => {
                                                let ref mut fresh25 = (*parser).item_length;
                                                *fresh25 = (*fresh25).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART3;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            13902027429569464800 => {
                                                let ref mut fresh24 = (*parser).item_length;
                                                *fresh24 = (*fresh24).wrapping_add(1);
                                                if c as libc::c_int != ' ' as i32 {
                                                    if Curl_isalnum(
                                                        c as libc::c_uchar as libc::c_int,
                                                    ) != 0
                                                    {
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PART2;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            13466321749914267966 => {
                                                let ref mut fresh23 = (*parser).item_length;
                                                *fresh23 = (*fresh23).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).state.UNIX.sub.time =
                                                        PL_UNIX_TIME_PREPART2;
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh27 = (*parser).item_length;
                                                *fresh27 = (*fresh27).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    if (*finfo).filetype as libc::c_uint
                                                        == CURLFILETYPE_SYMLINK as libc::c_int
                                                            as libc::c_uint
                                                    {
                                                        (*parser).state.UNIX.main = PL_UNIX_SYMLINK;
                                                        (*parser).state.UNIX.sub.symlink =
                                                            PL_UNIX_SYMLINK_PRESPACE;
                                                    } else {
                                                        (*parser).state.UNIX.main =
                                                            PL_UNIX_FILENAME;
                                                        (*parser).state.UNIX.sub.filename =
                                                            PL_UNIX_FILENAME_PRESPACE;
                                                    }
                                                } else if Curl_isalnum(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                    && c as libc::c_int != '.' as i32
                                                    && c as libc::c_int != ':' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            15714839002739240143 => {
                                match (*parser).state.UNIX.sub.size as libc::c_uint {
                                    0 => {
                                        current_block = 9897063314188657484;
                                        match current_block {
                                            9897063314188657484 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.size =
                                                            PL_UNIX_SIZE_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh22 = (*parser).item_length;
                                                *fresh22 = (*fresh22).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p_0: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut fsize: curl_off_t = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if curlx_strtoofft(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p_0,
                                                        10 as libc::c_int,
                                                        &mut fsize,
                                                    )
                                                        as u64
                                                        == 0
                                                    {
                                                        if *p_0.offset(0 as libc::c_int as isize)
                                                            as libc::c_int
                                                            == '\0' as i32
                                                            && fsize
                                                                != 0x7fffffffffffffff
                                                                    as libc::c_long
                                                            && fsize
                                                                != -(0x7fffffffffffffff
                                                                    as libc::c_long)
                                                                    - 1 as libc::c_long
                                                        {
                                                            (*(*parser).file_data).info.flags |= ((1
                                                                as libc::c_int)
                                                                << 6 as libc::c_int)
                                                                as libc::c_uint;
                                                            (*(*parser).file_data).info.size =
                                                                fsize;
                                                        }
                                                        (*parser).item_length =
                                                            0 as libc::c_int as libc::c_uint;
                                                        (*parser).item_offset =
                                                            0 as libc::c_int as size_t;
                                                        (*parser).state.UNIX.main = PL_UNIX_TIME;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PREPART1;
                                                    }
                                                } else if Curl_isdigit(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 4620427382343268962;
                                        match current_block {
                                            9897063314188657484 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.size =
                                                            PL_UNIX_SIZE_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh22 = (*parser).item_length;
                                                *fresh22 = (*fresh22).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p_0: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut fsize: curl_off_t = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if curlx_strtoofft(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p_0,
                                                        10 as libc::c_int,
                                                        &mut fsize,
                                                    )
                                                        as u64
                                                        == 0
                                                    {
                                                        if *p_0.offset(0 as libc::c_int as isize)
                                                            as libc::c_int
                                                            == '\0' as i32
                                                            && fsize
                                                                != 0x7fffffffffffffff
                                                                    as libc::c_long
                                                            && fsize
                                                                != -(0x7fffffffffffffff
                                                                    as libc::c_long)
                                                                    - 1 as libc::c_long
                                                        {
                                                            (*(*parser).file_data).info.flags |= ((1
                                                                as libc::c_int)
                                                                << 6 as libc::c_int)
                                                                as libc::c_uint;
                                                            (*(*parser).file_data).info.size =
                                                                fsize;
                                                        }
                                                        (*parser).item_length =
                                                            0 as libc::c_int as libc::c_uint;
                                                        (*parser).item_offset =
                                                            0 as libc::c_int as size_t;
                                                        (*parser).state.UNIX.main = PL_UNIX_TIME;
                                                        (*parser).state.UNIX.sub.time =
                                                            PL_UNIX_TIME_PREPART1;
                                                    }
                                                } else if Curl_isdigit(
                                                    c as libc::c_uchar as libc::c_int,
                                                ) == 0
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            8922133629962145824 => {
                                match (*parser).state.UNIX.sub.hlinks as libc::c_uint {
                                    0 => {
                                        current_block = 1051223101710680835;
                                        match current_block {
                                            1051223101710680835 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.hlinks =
                                                            PL_UNIX_HLINKS_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh19 = (*parser).item_length;
                                                *fresh19 = (*fresh19).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut hlinks: libc::c_long = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    hlinks = strtol(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p,
                                                        10 as libc::c_int,
                                                    );
                                                    if *p.offset(0 as libc::c_int as isize)
                                                        as libc::c_int
                                                        == '\0' as i32
                                                        && hlinks
                                                            != 9223372036854775807 as libc::c_long
                                                        && hlinks
                                                            != -(9223372036854775807
                                                                as libc::c_long)
                                                                - 1 as libc::c_long
                                                    {
                                                        (*(*parser).file_data).info.flags |= ((1
                                                            as libc::c_int)
                                                            << 7 as libc::c_int)
                                                            as libc::c_uint;
                                                        (*(*parser).file_data).info.hardlinks =
                                                            hlinks;
                                                    }
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).item_offset =
                                                        0 as libc::c_int as size_t;
                                                    (*parser).state.UNIX.main = PL_UNIX_USER;
                                                    (*parser).state.UNIX.sub.user =
                                                        PL_UNIX_USER_PRESPACE;
                                                } else if (c as libc::c_int) < '0' as i32
                                                    || c as libc::c_int > '9' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 11000365710145520394;
                                        match current_block {
                                            1051223101710680835 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    if c as libc::c_int >= '0' as i32
                                                        && c as libc::c_int <= '9' as i32
                                                    {
                                                        (*parser).item_offset = ((*finfo).b_used)
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            );
                                                        (*parser).item_length =
                                                            1 as libc::c_int as libc::c_uint;
                                                        (*parser).state.UNIX.sub.hlinks =
                                                            PL_UNIX_HLINKS_NUMBER;
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh19 = (*parser).item_length;
                                                *fresh19 = (*fresh19).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    let mut p: *mut libc::c_char =
                                                        0 as *mut libc::c_char;
                                                    let mut hlinks: libc::c_long = 0;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    hlinks = strtol(
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                        &mut p,
                                                        10 as libc::c_int,
                                                    );
                                                    if *p.offset(0 as libc::c_int as isize)
                                                        as libc::c_int
                                                        == '\0' as i32
                                                        && hlinks
                                                            != 9223372036854775807 as libc::c_long
                                                        && hlinks
                                                            != -(9223372036854775807
                                                                as libc::c_long)
                                                                - 1 as libc::c_long
                                                    {
                                                        (*(*parser).file_data).info.flags |= ((1
                                                            as libc::c_int)
                                                            << 7 as libc::c_int)
                                                            as libc::c_uint;
                                                        (*(*parser).file_data).info.hardlinks =
                                                            hlinks;
                                                    }
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).item_offset =
                                                        0 as libc::c_int as size_t;
                                                    (*parser).state.UNIX.main = PL_UNIX_USER;
                                                    (*parser).state.UNIX.sub.user =
                                                        PL_UNIX_USER_PRESPACE;
                                                } else if (c as libc::c_int) < '0' as i32
                                                    || c as libc::c_int > '9' as i32
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            2548585907665248015 => {
                                let ref mut fresh18 = (*parser).item_length;
                                *fresh18 = (*fresh18).wrapping_add(1);
                                if (*parser).item_length <= 9 as libc::c_int as libc::c_uint {
                                    if (strchr(
                                        b"rwx-tTsS\0" as *const u8 as *const libc::c_char,
                                        c as libc::c_int,
                                    ))
                                    .is_null()
                                    {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                } else if (*parser).item_length == 10 as libc::c_int as libc::c_uint
                                {
                                    let mut perm: libc::c_uint = 0;
                                    if c as libc::c_int != ' ' as i32 {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    } else {
                                        *((*finfo).b_data).offset(10 as libc::c_int as isize) =
                                            0 as libc::c_int as libc::c_char;
                                        perm = ftp_pl_get_permission(
                                            ((*finfo).b_data)
                                                .offset((*parser).item_offset as isize),
                                        )
                                            as libc::c_uint;
                                        if perm & 0x1000000 as libc::c_int as libc::c_uint != 0 {
                                            (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                            current_block = 3906270568117527278;
                                            break;
                                        } else {
                                            (*(*parser).file_data).info.flags |=
                                                ((1 as libc::c_int) << 3 as libc::c_int)
                                                    as libc::c_uint;
                                            (*(*parser).file_data).info.perm = perm;
                                            (*parser).offsets.perm = (*parser).item_offset;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.main = PL_UNIX_HLINKS;
                                            (*parser).state.UNIX.sub.hlinks =
                                                PL_UNIX_HLINKS_PRESPACE;
                                        }
                                    }
                                }
                            }
                            2271266030019697172 => {
                                match c as libc::c_int {
                                    45 => {
                                        (*finfo).filetype = CURLFILETYPE_FILE;
                                    }
                                    100 => {
                                        (*finfo).filetype = CURLFILETYPE_DIRECTORY;
                                    }
                                    108 => {
                                        (*finfo).filetype = CURLFILETYPE_SYMLINK;
                                    }
                                    112 => {
                                        (*finfo).filetype = CURLFILETYPE_NAMEDPIPE;
                                    }
                                    115 => {
                                        (*finfo).filetype = CURLFILETYPE_SOCKET;
                                    }
                                    99 => {
                                        (*finfo).filetype = CURLFILETYPE_DEVICE_CHAR;
                                    }
                                    98 => {
                                        (*finfo).filetype = CURLFILETYPE_DEVICE_BLOCK;
                                    }
                                    68 => {
                                        (*finfo).filetype = CURLFILETYPE_DOOR;
                                    }
                                    _ => {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                }
                                (*parser).state.UNIX.main = PL_UNIX_PERMISSION;
                                (*parser).item_length = 0 as libc::c_int as libc::c_uint;
                                (*parser).item_offset = 1 as libc::c_int as size_t;
                            }
                            11239732194576282906 => {
                                match (*parser).state.UNIX.sub.total_dirsize as libc::c_uint {
                                    0 => {
                                        current_block = 5868443211042008994;
                                        match current_block {
                                            5868443211042008994 => {
                                                if c as libc::c_int == 't' as i32 {
                                                    (*parser).state.UNIX.sub.total_dirsize =
                                                        PL_UNIX_TOTALSIZE_READING;
                                                    let ref mut fresh14 = (*parser).item_length;
                                                    *fresh14 = (*fresh14).wrapping_add(1);
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    (*finfo).b_used = 0 as libc::c_int as size_t;
                                                    continue;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh15 = (*parser).item_length;
                                                *fresh15 = (*fresh15).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    let ref mut fresh16 = (*parser).item_length;
                                                    *fresh16 = (*fresh16).wrapping_sub(1);
                                                    let ref mut fresh17 = (*finfo).b_used;
                                                    *fresh17 = (*fresh17).wrapping_sub(1);
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_length).wrapping_sub(
                                                            1 as libc::c_int as libc::c_uint,
                                                        )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strncmp(
                                                        b"total \0" as *const u8
                                                            as *const libc::c_char,
                                                        (*finfo).b_data,
                                                        6 as libc::c_int as libc::c_ulong,
                                                    ) == 0 as libc::c_int
                                                    {
                                                        let mut endptr: *mut libc::c_char =
                                                            ((*finfo).b_data)
                                                                .offset(6 as libc::c_int as isize);
                                                        while Curl_isspace(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        while Curl_isdigit(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        if *endptr != 0 {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*parser).state.UNIX.main =
                                                                PL_UNIX_FILETYPE;
                                                            (*finfo).b_used =
                                                                0 as libc::c_int as size_t;
                                                        }
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 12794766220424740645;
                                        match current_block {
                                            5868443211042008994 => {
                                                if c as libc::c_int == 't' as i32 {
                                                    (*parser).state.UNIX.sub.total_dirsize =
                                                        PL_UNIX_TOTALSIZE_READING;
                                                    let ref mut fresh14 = (*parser).item_length;
                                                    *fresh14 = (*fresh14).wrapping_add(1);
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                    (*finfo).b_used = 0 as libc::c_int as size_t;
                                                    continue;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh15 = (*parser).item_length;
                                                *fresh15 = (*fresh15).wrapping_add(1);
                                                if c as libc::c_int == '\r' as i32 {
                                                    let ref mut fresh16 = (*parser).item_length;
                                                    *fresh16 = (*fresh16).wrapping_sub(1);
                                                    let ref mut fresh17 = (*finfo).b_used;
                                                    *fresh17 = (*fresh17).wrapping_sub(1);
                                                } else if c as libc::c_int == '\n' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_length).wrapping_sub(
                                                            1 as libc::c_int as libc::c_uint,
                                                        )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strncmp(
                                                        b"total \0" as *const u8
                                                            as *const libc::c_char,
                                                        (*finfo).b_data,
                                                        6 as libc::c_int as libc::c_ulong,
                                                    ) == 0 as libc::c_int
                                                    {
                                                        let mut endptr: *mut libc::c_char =
                                                            ((*finfo).b_data)
                                                                .offset(6 as libc::c_int as isize);
                                                        while Curl_isspace(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        while Curl_isdigit(
                                                            *endptr as libc::c_uchar as libc::c_int,
                                                        ) != 0
                                                        {
                                                            endptr = endptr.offset(1);
                                                        }
                                                        if *endptr != 0 {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*parser).state.UNIX.main =
                                                                PL_UNIX_FILETYPE;
                                                            (*finfo).b_used =
                                                                0 as libc::c_int as size_t;
                                                        }
                                                    } else {
                                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                        current_block = 3906270568117527278;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            12711409943779506440 => {
                                match (*parser).state.UNIX.sub.user as libc::c_uint {
                                    0 => {
                                        if c as libc::c_int != ' ' as i32 {
                                            (*parser).item_offset = ((*finfo).b_used)
                                                .wrapping_sub(1 as libc::c_int as libc::c_ulong);
                                            (*parser).item_length =
                                                1 as libc::c_int as libc::c_uint;
                                            (*parser).state.UNIX.sub.user = PL_UNIX_USER_PARSING;
                                        }
                                    }
                                    1 => {
                                        let ref mut fresh20 = (*parser).item_length;
                                        *fresh20 = (*fresh20).wrapping_add(1);
                                        if c as libc::c_int == ' ' as i32 {
                                            *((*finfo).b_data).offset(
                                                ((*parser).item_offset)
                                                    .wrapping_add(
                                                        (*parser).item_length as libc::c_ulong,
                                                    )
                                                    .wrapping_sub(1 as libc::c_int as libc::c_ulong)
                                                    as isize,
                                            ) = 0 as libc::c_int as libc::c_char;
                                            (*parser).offsets.user = (*parser).item_offset;
                                            (*parser).state.UNIX.main = PL_UNIX_GROUP;
                                            (*parser).state.UNIX.sub.group = PL_UNIX_GROUP_PRESPACE;
                                            (*parser).item_offset = 0 as libc::c_int as size_t;
                                            (*parser).item_length =
                                                0 as libc::c_int as libc::c_uint;
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            _ => match (*parser).state.UNIX.sub.symlink as libc::c_uint {
                                0 => {
                                    current_block = 3947153213232826515;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                1 => {
                                    current_block = 1776290020351736984;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                2 => {
                                    current_block = 14587494051267926558;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                3 => {
                                    current_block = 5402613236608857871;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                4 => {
                                    current_block = 5209973316514186056;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                5 => {
                                    current_block = 3527484645425325286;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                6 => {
                                    current_block = 3075363095485550289;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                7 => {
                                    current_block = 13258967356842108374;
                                    match current_block {
                                        3947153213232826515 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        3075363095485550289 => {
                                            let ref mut fresh33 = (*parser).item_length;
                                            *fresh33 = (*fresh33).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_WINDOWSEOL;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            }
                                        }
                                        3527484645425325286 => {
                                            if c as libc::c_int != '\r' as i32
                                                && c as libc::c_int != '\n' as i32
                                            {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_TARGET;
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        5209973316514186056 => {
                                            let ref mut fresh32 = (*parser).item_length;
                                            *fresh32 = (*fresh32).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET4;
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            4 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                (*parser).item_length =
                                                    0 as libc::c_int as libc::c_uint;
                                                (*parser).item_offset = 0 as libc::c_int as size_t;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        5402613236608857871 => {
                                            let ref mut fresh31 = (*parser).item_length;
                                            *fresh31 = (*fresh31).wrapping_add(1);
                                            if c as libc::c_int == '>' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET3;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        14587494051267926558 => {
                                            let ref mut fresh30 = (*parser).item_length;
                                            *fresh30 = (*fresh30).wrapping_add(1);
                                            if c as libc::c_int == '-' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET2;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            } else {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_NAME;
                                            }
                                        }
                                        1776290020351736984 => {
                                            let ref mut fresh29 = (*parser).item_length;
                                            *fresh29 = (*fresh29).wrapping_add(1);
                                            if c as libc::c_int == ' ' as i32 {
                                                (*parser).state.UNIX.sub.symlink =
                                                    PL_UNIX_SYMLINK_PRETARGET1;
                                            } else if c as libc::c_int == '\r' as i32
                                                || c as libc::c_int == '\n' as i32
                                            {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                *((*finfo).b_data).offset(
                                                    ((*parser).item_offset)
                                                        .wrapping_add(
                                                            (*parser).item_length as libc::c_ulong,
                                                        )
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                (*parser).offsets.symlink_target =
                                                    (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.UNIX.main = PL_UNIX_FILETYPE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            },
                        }
                    }
                    _ => {}
                },
                2 => match (*parser).state.NT.main as libc::c_uint {
                    0 => {
                        current_block = 17707972700779680636;
                        match current_block {
                            17707972700779680636 => {
                                let ref mut fresh34 = (*parser).item_length;
                                *fresh34 = (*fresh34).wrapping_add(1);
                                if (*parser).item_length < 9 as libc::c_int as libc::c_uint {
                                    if (strchr(
                                        b"0123456789-\0" as *const u8 as *const libc::c_char,
                                        c as libc::c_int,
                                    ))
                                    .is_null()
                                    {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                } else if (*parser).item_length == 9 as libc::c_int as libc::c_uint
                                {
                                    if c as libc::c_int == ' ' as i32 {
                                        (*parser).state.NT.main = PL_WINNT_TIME;
                                        (*parser).state.NT.sub.time = PL_WINNT_TIME_PRESPACE;
                                    } else {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                } else {
                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                    current_block = 3906270568117527278;
                                    break;
                                }
                            }
                            18092414586857746248 => {
                                match (*parser).state.NT.sub.dirorsize as libc::c_uint {
                                    0 => {
                                        current_block = 9613402660712159213;
                                        match current_block {
                                            9613402660712159213 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.NT.sub.dirorsize =
                                                        PL_WINNT_DIRORSIZE_CONTENT;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh36 = (*parser).item_length;
                                                *fresh36 = (*fresh36).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strcmp(
                                                        b"<DIR>\0" as *const u8
                                                            as *const libc::c_char,
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                    ) == 0 as libc::c_int
                                                    {
                                                        (*finfo).filetype = CURLFILETYPE_DIRECTORY;
                                                        (*finfo).size =
                                                            0 as libc::c_int as curl_off_t;
                                                    } else {
                                                        let mut endptr_0: *mut libc::c_char =
                                                            0 as *mut libc::c_char;
                                                        if curlx_strtoofft(
                                                            ((*finfo).b_data).offset(
                                                                (*parser).item_offset as isize,
                                                            ),
                                                            &mut endptr_0,
                                                            10 as libc::c_int,
                                                            &mut (*finfo).size,
                                                        )
                                                            as u64
                                                            != 0
                                                        {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*(*parser).file_data).info.filetype =
                                                                CURLFILETYPE_FILE;
                                                        }
                                                    }
                                                    (*(*parser).file_data).info.flags |=
                                                        ((1 as libc::c_int) << 6 as libc::c_int)
                                                            as libc::c_uint;
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).state.NT.main = PL_WINNT_FILENAME;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 9908056074704077750;
                                        match current_block {
                                            9613402660712159213 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.NT.sub.dirorsize =
                                                        PL_WINNT_DIRORSIZE_CONTENT;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh36 = (*parser).item_length;
                                                *fresh36 = (*fresh36).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strcmp(
                                                        b"<DIR>\0" as *const u8
                                                            as *const libc::c_char,
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                    ) == 0 as libc::c_int
                                                    {
                                                        (*finfo).filetype = CURLFILETYPE_DIRECTORY;
                                                        (*finfo).size =
                                                            0 as libc::c_int as curl_off_t;
                                                    } else {
                                                        let mut endptr_0: *mut libc::c_char =
                                                            0 as *mut libc::c_char;
                                                        if curlx_strtoofft(
                                                            ((*finfo).b_data).offset(
                                                                (*parser).item_offset as isize,
                                                            ),
                                                            &mut endptr_0,
                                                            10 as libc::c_int,
                                                            &mut (*finfo).size,
                                                        )
                                                            as u64
                                                            != 0
                                                        {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*(*parser).file_data).info.filetype =
                                                                CURLFILETYPE_FILE;
                                                        }
                                                    }
                                                    (*(*parser).file_data).info.flags |=
                                                        ((1 as libc::c_int) << 6 as libc::c_int)
                                                            as libc::c_uint;
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).state.NT.main = PL_WINNT_FILENAME;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            10481430367825200761 => {
                                let ref mut fresh35 = (*parser).item_length;
                                *fresh35 = (*fresh35).wrapping_add(1);
                                match (*parser).state.NT.sub.time as libc::c_uint {
                                    0 => {
                                        current_block = 6632167196092433588;
                                        match current_block {
                                            6632167196092433588 => {
                                                if Curl_isspace(c as libc::c_uchar as libc::c_int)
                                                    == 0
                                                {
                                                    (*parser).state.NT.sub.time =
                                                        PL_WINNT_TIME_TIME;
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).state.NT.main = PL_WINNT_DIRORSIZE;
                                                    (*parser).state.NT.sub.dirorsize =
                                                        PL_WINNT_DIRORSIZE_PRESPACE;
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                } else if (strchr(
                                                    b"APM0123456789:\0" as *const u8
                                                        as *const libc::c_char,
                                                    c as libc::c_int,
                                                ))
                                                .is_null()
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 9745345715264783250;
                                        match current_block {
                                            6632167196092433588 => {
                                                if Curl_isspace(c as libc::c_uchar as libc::c_int)
                                                    == 0
                                                {
                                                    (*parser).state.NT.sub.time =
                                                        PL_WINNT_TIME_TIME;
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).state.NT.main = PL_WINNT_DIRORSIZE;
                                                    (*parser).state.NT.sub.dirorsize =
                                                        PL_WINNT_DIRORSIZE_PRESPACE;
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                } else if (strchr(
                                                    b"APM0123456789:\0" as *const u8
                                                        as *const libc::c_char,
                                                    c as libc::c_int,
                                                ))
                                                .is_null()
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            _ => match (*parser).state.NT.sub.filename as libc::c_uint {
                                0 => {
                                    current_block = 9994454523505608529;
                                    match current_block {
                                        9994454523505608529 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.NT.sub.filename =
                                                    PL_WINNT_FILENAME_CONTENT;
                                            }
                                        }
                                        8694099455291365990 => {
                                            let ref mut fresh37 = (*parser).item_length;
                                            *fresh37 = (*fresh37).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.NT.sub.filename =
                                                    PL_WINNT_FILENAME_WINEOL;
                                                *((*finfo).b_data).offset(
                                                    ((*finfo).b_used).wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                *((*finfo).b_data).offset(
                                                    ((*finfo).b_used).wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.NT.main = PL_WINNT_DATE;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.NT.main = PL_WINNT_DATE;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                1 => {
                                    current_block = 8694099455291365990;
                                    match current_block {
                                        9994454523505608529 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.NT.sub.filename =
                                                    PL_WINNT_FILENAME_CONTENT;
                                            }
                                        }
                                        8694099455291365990 => {
                                            let ref mut fresh37 = (*parser).item_length;
                                            *fresh37 = (*fresh37).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.NT.sub.filename =
                                                    PL_WINNT_FILENAME_WINEOL;
                                                *((*finfo).b_data).offset(
                                                    ((*finfo).b_used).wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                *((*finfo).b_data).offset(
                                                    ((*finfo).b_used).wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.NT.main = PL_WINNT_DATE;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.NT.main = PL_WINNT_DATE;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                2 => {
                                    current_block = 2994588406877586124;
                                    match current_block {
                                        9994454523505608529 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.NT.sub.filename =
                                                    PL_WINNT_FILENAME_CONTENT;
                                            }
                                        }
                                        8694099455291365990 => {
                                            let ref mut fresh37 = (*parser).item_length;
                                            *fresh37 = (*fresh37).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.NT.sub.filename =
                                                    PL_WINNT_FILENAME_WINEOL;
                                                *((*finfo).b_data).offset(
                                                    ((*finfo).b_used).wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                *((*finfo).b_data).offset(
                                                    ((*finfo).b_used).wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.NT.main = PL_WINNT_DATE;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.NT.main = PL_WINNT_DATE;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            },
                        }
                    }
                    1 => {
                        current_block = 10481430367825200761;
                        match current_block {
                            17707972700779680636 => {
                                let ref mut fresh34 = (*parser).item_length;
                                *fresh34 = (*fresh34).wrapping_add(1);
                                if (*parser).item_length < 9 as libc::c_int as libc::c_uint {
                                    if (strchr(
                                        b"0123456789-\0" as *const u8 as *const libc::c_char,
                                        c as libc::c_int,
                                    ))
                                    .is_null()
                                    {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                } else if (*parser).item_length == 9 as libc::c_int as libc::c_uint
                                {
                                    if c as libc::c_int == ' ' as i32 {
                                        (*parser).state.NT.main = PL_WINNT_TIME;
                                        (*parser).state.NT.sub.time = PL_WINNT_TIME_PRESPACE;
                                    } else {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                } else {
                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                    current_block = 3906270568117527278;
                                    break;
                                }
                            }
                            18092414586857746248 => {
                                match (*parser).state.NT.sub.dirorsize as libc::c_uint {
                                    0 => {
                                        current_block = 9613402660712159213;
                                        match current_block {
                                            9613402660712159213 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.NT.sub.dirorsize =
                                                        PL_WINNT_DIRORSIZE_CONTENT;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh36 = (*parser).item_length;
                                                *fresh36 = (*fresh36).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strcmp(
                                                        b"<DIR>\0" as *const u8
                                                            as *const libc::c_char,
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                    ) == 0 as libc::c_int
                                                    {
                                                        (*finfo).filetype = CURLFILETYPE_DIRECTORY;
                                                        (*finfo).size =
                                                            0 as libc::c_int as curl_off_t;
                                                    } else {
                                                        let mut endptr_0: *mut libc::c_char =
                                                            0 as *mut libc::c_char;
                                                        if curlx_strtoofft(
                                                            ((*finfo).b_data).offset(
                                                                (*parser).item_offset as isize,
                                                            ),
                                                            &mut endptr_0,
                                                            10 as libc::c_int,
                                                            &mut (*finfo).size,
                                                        )
                                                            as u64
                                                            != 0
                                                        {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*(*parser).file_data).info.filetype =
                                                                CURLFILETYPE_FILE;
                                                        }
                                                    }
                                                    (*(*parser).file_data).info.flags |=
                                                        ((1 as libc::c_int) << 6 as libc::c_int)
                                                            as libc::c_uint;
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).state.NT.main = PL_WINNT_FILENAME;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 9908056074704077750;
                                        match current_block {
                                            9613402660712159213 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.NT.sub.dirorsize =
                                                        PL_WINNT_DIRORSIZE_CONTENT;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh36 = (*parser).item_length;
                                                *fresh36 = (*fresh36).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strcmp(
                                                        b"<DIR>\0" as *const u8
                                                            as *const libc::c_char,
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                    ) == 0 as libc::c_int
                                                    {
                                                        (*finfo).filetype = CURLFILETYPE_DIRECTORY;
                                                        (*finfo).size =
                                                            0 as libc::c_int as curl_off_t;
                                                    } else {
                                                        let mut endptr_0: *mut libc::c_char =
                                                            0 as *mut libc::c_char;
                                                        if curlx_strtoofft(
                                                            ((*finfo).b_data).offset(
                                                                (*parser).item_offset as isize,
                                                            ),
                                                            &mut endptr_0,
                                                            10 as libc::c_int,
                                                            &mut (*finfo).size,
                                                        )
                                                            as u64
                                                            != 0
                                                        {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*(*parser).file_data).info.filetype =
                                                                CURLFILETYPE_FILE;
                                                        }
                                                    }
                                                    (*(*parser).file_data).info.flags |=
                                                        ((1 as libc::c_int) << 6 as libc::c_int)
                                                            as libc::c_uint;
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).state.NT.main = PL_WINNT_FILENAME;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            10481430367825200761 => {
                                let ref mut fresh35 = (*parser).item_length;
                                *fresh35 = (*fresh35).wrapping_add(1);
                                match (*parser).state.NT.sub.time as libc::c_uint {
                                    0 => {
                                        current_block = 6632167196092433588;
                                        match current_block {
                                            6632167196092433588 => {
                                                if Curl_isspace(c as libc::c_uchar as libc::c_int)
                                                    == 0
                                                {
                                                    (*parser).state.NT.sub.time =
                                                        PL_WINNT_TIME_TIME;
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).state.NT.main = PL_WINNT_DIRORSIZE;
                                                    (*parser).state.NT.sub.dirorsize =
                                                        PL_WINNT_DIRORSIZE_PRESPACE;
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                } else if (strchr(
                                                    b"APM0123456789:\0" as *const u8
                                                        as *const libc::c_char,
                                                    c as libc::c_int,
                                                ))
                                                .is_null()
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 9745345715264783250;
                                        match current_block {
                                            6632167196092433588 => {
                                                if Curl_isspace(c as libc::c_uchar as libc::c_int)
                                                    == 0
                                                {
                                                    (*parser).state.NT.sub.time =
                                                        PL_WINNT_TIME_TIME;
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).state.NT.main = PL_WINNT_DIRORSIZE;
                                                    (*parser).state.NT.sub.dirorsize =
                                                        PL_WINNT_DIRORSIZE_PRESPACE;
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                } else if (strchr(
                                                    b"APM0123456789:\0" as *const u8
                                                        as *const libc::c_char,
                                                    c as libc::c_int,
                                                ))
                                                .is_null()
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            _ => match (*parser).state.NT.sub.filename as libc::c_uint {
                                0 => {
                                    current_block = 9994454523505608529;
                                    match current_block {
                                        9994454523505608529 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.NT.sub.filename =
                                                    PL_WINNT_FILENAME_CONTENT;
                                            }
                                        }
                                        8694099455291365990 => {
                                            let ref mut fresh37 = (*parser).item_length;
                                            *fresh37 = (*fresh37).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.NT.sub.filename =
                                                    PL_WINNT_FILENAME_WINEOL;
                                                *((*finfo).b_data).offset(
                                                    ((*finfo).b_used).wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                *((*finfo).b_data).offset(
                                                    ((*finfo).b_used).wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.NT.main = PL_WINNT_DATE;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.NT.main = PL_WINNT_DATE;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                1 => {
                                    current_block = 8694099455291365990;
                                    match current_block {
                                        9994454523505608529 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.NT.sub.filename =
                                                    PL_WINNT_FILENAME_CONTENT;
                                            }
                                        }
                                        8694099455291365990 => {
                                            let ref mut fresh37 = (*parser).item_length;
                                            *fresh37 = (*fresh37).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.NT.sub.filename =
                                                    PL_WINNT_FILENAME_WINEOL;
                                                *((*finfo).b_data).offset(
                                                    ((*finfo).b_used).wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                *((*finfo).b_data).offset(
                                                    ((*finfo).b_used).wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.NT.main = PL_WINNT_DATE;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.NT.main = PL_WINNT_DATE;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                2 => {
                                    current_block = 2994588406877586124;
                                    match current_block {
                                        9994454523505608529 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.NT.sub.filename =
                                                    PL_WINNT_FILENAME_CONTENT;
                                            }
                                        }
                                        8694099455291365990 => {
                                            let ref mut fresh37 = (*parser).item_length;
                                            *fresh37 = (*fresh37).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.NT.sub.filename =
                                                    PL_WINNT_FILENAME_WINEOL;
                                                *((*finfo).b_data).offset(
                                                    ((*finfo).b_used).wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                *((*finfo).b_data).offset(
                                                    ((*finfo).b_used).wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.NT.main = PL_WINNT_DATE;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.NT.main = PL_WINNT_DATE;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            },
                        }
                    }
                    2 => {
                        current_block = 18092414586857746248;
                        match current_block {
                            17707972700779680636 => {
                                let ref mut fresh34 = (*parser).item_length;
                                *fresh34 = (*fresh34).wrapping_add(1);
                                if (*parser).item_length < 9 as libc::c_int as libc::c_uint {
                                    if (strchr(
                                        b"0123456789-\0" as *const u8 as *const libc::c_char,
                                        c as libc::c_int,
                                    ))
                                    .is_null()
                                    {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                } else if (*parser).item_length == 9 as libc::c_int as libc::c_uint
                                {
                                    if c as libc::c_int == ' ' as i32 {
                                        (*parser).state.NT.main = PL_WINNT_TIME;
                                        (*parser).state.NT.sub.time = PL_WINNT_TIME_PRESPACE;
                                    } else {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                } else {
                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                    current_block = 3906270568117527278;
                                    break;
                                }
                            }
                            18092414586857746248 => {
                                match (*parser).state.NT.sub.dirorsize as libc::c_uint {
                                    0 => {
                                        current_block = 9613402660712159213;
                                        match current_block {
                                            9613402660712159213 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.NT.sub.dirorsize =
                                                        PL_WINNT_DIRORSIZE_CONTENT;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh36 = (*parser).item_length;
                                                *fresh36 = (*fresh36).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strcmp(
                                                        b"<DIR>\0" as *const u8
                                                            as *const libc::c_char,
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                    ) == 0 as libc::c_int
                                                    {
                                                        (*finfo).filetype = CURLFILETYPE_DIRECTORY;
                                                        (*finfo).size =
                                                            0 as libc::c_int as curl_off_t;
                                                    } else {
                                                        let mut endptr_0: *mut libc::c_char =
                                                            0 as *mut libc::c_char;
                                                        if curlx_strtoofft(
                                                            ((*finfo).b_data).offset(
                                                                (*parser).item_offset as isize,
                                                            ),
                                                            &mut endptr_0,
                                                            10 as libc::c_int,
                                                            &mut (*finfo).size,
                                                        )
                                                            as u64
                                                            != 0
                                                        {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*(*parser).file_data).info.filetype =
                                                                CURLFILETYPE_FILE;
                                                        }
                                                    }
                                                    (*(*parser).file_data).info.flags |=
                                                        ((1 as libc::c_int) << 6 as libc::c_int)
                                                            as libc::c_uint;
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).state.NT.main = PL_WINNT_FILENAME;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 9908056074704077750;
                                        match current_block {
                                            9613402660712159213 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.NT.sub.dirorsize =
                                                        PL_WINNT_DIRORSIZE_CONTENT;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh36 = (*parser).item_length;
                                                *fresh36 = (*fresh36).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strcmp(
                                                        b"<DIR>\0" as *const u8
                                                            as *const libc::c_char,
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                    ) == 0 as libc::c_int
                                                    {
                                                        (*finfo).filetype = CURLFILETYPE_DIRECTORY;
                                                        (*finfo).size =
                                                            0 as libc::c_int as curl_off_t;
                                                    } else {
                                                        let mut endptr_0: *mut libc::c_char =
                                                            0 as *mut libc::c_char;
                                                        if curlx_strtoofft(
                                                            ((*finfo).b_data).offset(
                                                                (*parser).item_offset as isize,
                                                            ),
                                                            &mut endptr_0,
                                                            10 as libc::c_int,
                                                            &mut (*finfo).size,
                                                        )
                                                            as u64
                                                            != 0
                                                        {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*(*parser).file_data).info.filetype =
                                                                CURLFILETYPE_FILE;
                                                        }
                                                    }
                                                    (*(*parser).file_data).info.flags |=
                                                        ((1 as libc::c_int) << 6 as libc::c_int)
                                                            as libc::c_uint;
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).state.NT.main = PL_WINNT_FILENAME;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            10481430367825200761 => {
                                let ref mut fresh35 = (*parser).item_length;
                                *fresh35 = (*fresh35).wrapping_add(1);
                                match (*parser).state.NT.sub.time as libc::c_uint {
                                    0 => {
                                        current_block = 6632167196092433588;
                                        match current_block {
                                            6632167196092433588 => {
                                                if Curl_isspace(c as libc::c_uchar as libc::c_int)
                                                    == 0
                                                {
                                                    (*parser).state.NT.sub.time =
                                                        PL_WINNT_TIME_TIME;
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).state.NT.main = PL_WINNT_DIRORSIZE;
                                                    (*parser).state.NT.sub.dirorsize =
                                                        PL_WINNT_DIRORSIZE_PRESPACE;
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                } else if (strchr(
                                                    b"APM0123456789:\0" as *const u8
                                                        as *const libc::c_char,
                                                    c as libc::c_int,
                                                ))
                                                .is_null()
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 9745345715264783250;
                                        match current_block {
                                            6632167196092433588 => {
                                                if Curl_isspace(c as libc::c_uchar as libc::c_int)
                                                    == 0
                                                {
                                                    (*parser).state.NT.sub.time =
                                                        PL_WINNT_TIME_TIME;
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).state.NT.main = PL_WINNT_DIRORSIZE;
                                                    (*parser).state.NT.sub.dirorsize =
                                                        PL_WINNT_DIRORSIZE_PRESPACE;
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                } else if (strchr(
                                                    b"APM0123456789:\0" as *const u8
                                                        as *const libc::c_char,
                                                    c as libc::c_int,
                                                ))
                                                .is_null()
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            _ => match (*parser).state.NT.sub.filename as libc::c_uint {
                                0 => {
                                    current_block = 9994454523505608529;
                                    match current_block {
                                        9994454523505608529 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.NT.sub.filename =
                                                    PL_WINNT_FILENAME_CONTENT;
                                            }
                                        }
                                        8694099455291365990 => {
                                            let ref mut fresh37 = (*parser).item_length;
                                            *fresh37 = (*fresh37).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.NT.sub.filename =
                                                    PL_WINNT_FILENAME_WINEOL;
                                                *((*finfo).b_data).offset(
                                                    ((*finfo).b_used).wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                *((*finfo).b_data).offset(
                                                    ((*finfo).b_used).wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.NT.main = PL_WINNT_DATE;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.NT.main = PL_WINNT_DATE;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                1 => {
                                    current_block = 8694099455291365990;
                                    match current_block {
                                        9994454523505608529 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.NT.sub.filename =
                                                    PL_WINNT_FILENAME_CONTENT;
                                            }
                                        }
                                        8694099455291365990 => {
                                            let ref mut fresh37 = (*parser).item_length;
                                            *fresh37 = (*fresh37).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.NT.sub.filename =
                                                    PL_WINNT_FILENAME_WINEOL;
                                                *((*finfo).b_data).offset(
                                                    ((*finfo).b_used).wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                *((*finfo).b_data).offset(
                                                    ((*finfo).b_used).wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.NT.main = PL_WINNT_DATE;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.NT.main = PL_WINNT_DATE;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                2 => {
                                    current_block = 2994588406877586124;
                                    match current_block {
                                        9994454523505608529 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.NT.sub.filename =
                                                    PL_WINNT_FILENAME_CONTENT;
                                            }
                                        }
                                        8694099455291365990 => {
                                            let ref mut fresh37 = (*parser).item_length;
                                            *fresh37 = (*fresh37).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.NT.sub.filename =
                                                    PL_WINNT_FILENAME_WINEOL;
                                                *((*finfo).b_data).offset(
                                                    ((*finfo).b_used).wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                *((*finfo).b_data).offset(
                                                    ((*finfo).b_used).wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.NT.main = PL_WINNT_DATE;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.NT.main = PL_WINNT_DATE;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            },
                        }
                    }
                    3 => {
                        current_block = 8727269132939964787;
                        match current_block {
                            17707972700779680636 => {
                                let ref mut fresh34 = (*parser).item_length;
                                *fresh34 = (*fresh34).wrapping_add(1);
                                if (*parser).item_length < 9 as libc::c_int as libc::c_uint {
                                    if (strchr(
                                        b"0123456789-\0" as *const u8 as *const libc::c_char,
                                        c as libc::c_int,
                                    ))
                                    .is_null()
                                    {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                } else if (*parser).item_length == 9 as libc::c_int as libc::c_uint
                                {
                                    if c as libc::c_int == ' ' as i32 {
                                        (*parser).state.NT.main = PL_WINNT_TIME;
                                        (*parser).state.NT.sub.time = PL_WINNT_TIME_PRESPACE;
                                    } else {
                                        (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                        current_block = 3906270568117527278;
                                        break;
                                    }
                                } else {
                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                    current_block = 3906270568117527278;
                                    break;
                                }
                            }
                            18092414586857746248 => {
                                match (*parser).state.NT.sub.dirorsize as libc::c_uint {
                                    0 => {
                                        current_block = 9613402660712159213;
                                        match current_block {
                                            9613402660712159213 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.NT.sub.dirorsize =
                                                        PL_WINNT_DIRORSIZE_CONTENT;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh36 = (*parser).item_length;
                                                *fresh36 = (*fresh36).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strcmp(
                                                        b"<DIR>\0" as *const u8
                                                            as *const libc::c_char,
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                    ) == 0 as libc::c_int
                                                    {
                                                        (*finfo).filetype = CURLFILETYPE_DIRECTORY;
                                                        (*finfo).size =
                                                            0 as libc::c_int as curl_off_t;
                                                    } else {
                                                        let mut endptr_0: *mut libc::c_char =
                                                            0 as *mut libc::c_char;
                                                        if curlx_strtoofft(
                                                            ((*finfo).b_data).offset(
                                                                (*parser).item_offset as isize,
                                                            ),
                                                            &mut endptr_0,
                                                            10 as libc::c_int,
                                                            &mut (*finfo).size,
                                                        )
                                                            as u64
                                                            != 0
                                                        {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*(*parser).file_data).info.filetype =
                                                                CURLFILETYPE_FILE;
                                                        }
                                                    }
                                                    (*(*parser).file_data).info.flags |=
                                                        ((1 as libc::c_int) << 6 as libc::c_int)
                                                            as libc::c_uint;
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).state.NT.main = PL_WINNT_FILENAME;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 9908056074704077750;
                                        match current_block {
                                            9613402660712159213 => {
                                                if c as libc::c_int != ' ' as i32 {
                                                    (*parser).item_offset = ((*finfo).b_used)
                                                        .wrapping_sub(
                                                            1 as libc::c_int as libc::c_ulong,
                                                        );
                                                    (*parser).item_length =
                                                        1 as libc::c_int as libc::c_uint;
                                                    (*parser).state.NT.sub.dirorsize =
                                                        PL_WINNT_DIRORSIZE_CONTENT;
                                                }
                                            }
                                            _ => {
                                                let ref mut fresh36 = (*parser).item_length;
                                                *fresh36 = (*fresh36).wrapping_add(1);
                                                if c as libc::c_int == ' ' as i32 {
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    if strcmp(
                                                        b"<DIR>\0" as *const u8
                                                            as *const libc::c_char,
                                                        ((*finfo).b_data)
                                                            .offset((*parser).item_offset as isize),
                                                    ) == 0 as libc::c_int
                                                    {
                                                        (*finfo).filetype = CURLFILETYPE_DIRECTORY;
                                                        (*finfo).size =
                                                            0 as libc::c_int as curl_off_t;
                                                    } else {
                                                        let mut endptr_0: *mut libc::c_char =
                                                            0 as *mut libc::c_char;
                                                        if curlx_strtoofft(
                                                            ((*finfo).b_data).offset(
                                                                (*parser).item_offset as isize,
                                                            ),
                                                            &mut endptr_0,
                                                            10 as libc::c_int,
                                                            &mut (*finfo).size,
                                                        )
                                                            as u64
                                                            != 0
                                                        {
                                                            (*parser).error =
                                                                CURLE_FTP_BAD_FILE_LIST;
                                                            current_block = 3906270568117527278;
                                                            break;
                                                        } else {
                                                            (*(*parser).file_data).info.filetype =
                                                                CURLFILETYPE_FILE;
                                                        }
                                                    }
                                                    (*(*parser).file_data).info.flags |=
                                                        ((1 as libc::c_int) << 6 as libc::c_int)
                                                            as libc::c_uint;
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                    (*parser).state.NT.main = PL_WINNT_FILENAME;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            10481430367825200761 => {
                                let ref mut fresh35 = (*parser).item_length;
                                *fresh35 = (*fresh35).wrapping_add(1);
                                match (*parser).state.NT.sub.time as libc::c_uint {
                                    0 => {
                                        current_block = 6632167196092433588;
                                        match current_block {
                                            6632167196092433588 => {
                                                if Curl_isspace(c as libc::c_uchar as libc::c_int)
                                                    == 0
                                                {
                                                    (*parser).state.NT.sub.time =
                                                        PL_WINNT_TIME_TIME;
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).state.NT.main = PL_WINNT_DIRORSIZE;
                                                    (*parser).state.NT.sub.dirorsize =
                                                        PL_WINNT_DIRORSIZE_PRESPACE;
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                } else if (strchr(
                                                    b"APM0123456789:\0" as *const u8
                                                        as *const libc::c_char,
                                                    c as libc::c_int,
                                                ))
                                                .is_null()
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    1 => {
                                        current_block = 9745345715264783250;
                                        match current_block {
                                            6632167196092433588 => {
                                                if Curl_isspace(c as libc::c_uchar as libc::c_int)
                                                    == 0
                                                {
                                                    (*parser).state.NT.sub.time =
                                                        PL_WINNT_TIME_TIME;
                                                }
                                            }
                                            _ => {
                                                if c as libc::c_int == ' ' as i32 {
                                                    (*parser).offsets.time = (*parser).item_offset;
                                                    *((*finfo).b_data).offset(
                                                        ((*parser).item_offset)
                                                            .wrapping_add(
                                                                (*parser).item_length
                                                                    as libc::c_ulong,
                                                            )
                                                            .wrapping_sub(
                                                                1 as libc::c_int as libc::c_ulong,
                                                            )
                                                            as isize,
                                                    ) = 0 as libc::c_int as libc::c_char;
                                                    (*parser).state.NT.main = PL_WINNT_DIRORSIZE;
                                                    (*parser).state.NT.sub.dirorsize =
                                                        PL_WINNT_DIRORSIZE_PRESPACE;
                                                    (*parser).item_length =
                                                        0 as libc::c_int as libc::c_uint;
                                                } else if (strchr(
                                                    b"APM0123456789:\0" as *const u8
                                                        as *const libc::c_char,
                                                    c as libc::c_int,
                                                ))
                                                .is_null()
                                                {
                                                    (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    _ => {}
                                }
                            }
                            _ => match (*parser).state.NT.sub.filename as libc::c_uint {
                                0 => {
                                    current_block = 9994454523505608529;
                                    match current_block {
                                        9994454523505608529 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.NT.sub.filename =
                                                    PL_WINNT_FILENAME_CONTENT;
                                            }
                                        }
                                        8694099455291365990 => {
                                            let ref mut fresh37 = (*parser).item_length;
                                            *fresh37 = (*fresh37).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.NT.sub.filename =
                                                    PL_WINNT_FILENAME_WINEOL;
                                                *((*finfo).b_data).offset(
                                                    ((*finfo).b_used).wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                *((*finfo).b_data).offset(
                                                    ((*finfo).b_used).wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.NT.main = PL_WINNT_DATE;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.NT.main = PL_WINNT_DATE;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                1 => {
                                    current_block = 8694099455291365990;
                                    match current_block {
                                        9994454523505608529 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.NT.sub.filename =
                                                    PL_WINNT_FILENAME_CONTENT;
                                            }
                                        }
                                        8694099455291365990 => {
                                            let ref mut fresh37 = (*parser).item_length;
                                            *fresh37 = (*fresh37).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.NT.sub.filename =
                                                    PL_WINNT_FILENAME_WINEOL;
                                                *((*finfo).b_data).offset(
                                                    ((*finfo).b_used).wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                *((*finfo).b_data).offset(
                                                    ((*finfo).b_used).wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.NT.main = PL_WINNT_DATE;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.NT.main = PL_WINNT_DATE;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                2 => {
                                    current_block = 2994588406877586124;
                                    match current_block {
                                        9994454523505608529 => {
                                            if c as libc::c_int != ' ' as i32 {
                                                (*parser).item_offset = ((*finfo).b_used)
                                                    .wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    );
                                                (*parser).item_length =
                                                    1 as libc::c_int as libc::c_uint;
                                                (*parser).state.NT.sub.filename =
                                                    PL_WINNT_FILENAME_CONTENT;
                                            }
                                        }
                                        8694099455291365990 => {
                                            let ref mut fresh37 = (*parser).item_length;
                                            *fresh37 = (*fresh37).wrapping_add(1);
                                            if c as libc::c_int == '\r' as i32 {
                                                (*parser).state.NT.sub.filename =
                                                    PL_WINNT_FILENAME_WINEOL;
                                                *((*finfo).b_data).offset(
                                                    ((*finfo).b_used).wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                            } else if c as libc::c_int == '\n' as i32 {
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                *((*finfo).b_data).offset(
                                                    ((*finfo).b_used).wrapping_sub(
                                                        1 as libc::c_int as libc::c_ulong,
                                                    )
                                                        as isize,
                                                ) = 0 as libc::c_int as libc::c_char;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.NT.main = PL_WINNT_DATE;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            }
                                        }
                                        _ => {
                                            if c as libc::c_int == '\n' as i32 {
                                                (*parser).offsets.filename = (*parser).item_offset;
                                                result = ftp_pl_insert_finfo(data, infop);
                                                if result as u64 != 0 {
                                                    (*parser).error = result;
                                                    current_block = 3906270568117527278;
                                                    break;
                                                } else {
                                                    (*parser).state.NT.main = PL_WINNT_DATE;
                                                    (*parser).state.NT.sub.filename =
                                                        PL_WINNT_FILENAME_PRESPACE;
                                                }
                                            } else {
                                                (*parser).error = CURLE_FTP_BAD_FILE_LIST;
                                                current_block = 3906270568117527278;
                                                break;
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            },
                        }
                    }
                    _ => {}
                },
                _ => {
                    retsize = bufflen.wrapping_add(1 as libc::c_int as libc::c_ulong);
                    current_block = 3906270568117527278;
                    break;
                }
            }
            i = i.wrapping_add(1);
        }
        match current_block {
            3906270568117527278 => {}
            _ => return retsize,
        }
    }
    if !((*parser).file_data).is_null() {
        Curl_fileinfo_cleanup((*parser).file_data);
        let ref mut fresh38 = (*parser).file_data;
        *fresh38 = 0 as *mut fileinfo;
    }
    return retsize;
}
